/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { FiatGateway, FiatGatewayInterface } from '../FiatGateway';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'cereUnitsPerPenny',
        type: 'uint256',
      },
    ],
    name: 'SetExchangeRate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'CURRENCY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'EXCHANGE_RATE_ORACLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'PAYMENT_SERVICE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'freeport',
    outputs: [
      {
        internalType: 'contract Freeport',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC1155Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalCereUnitsSent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'totalPenniesReceived',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
    payable: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'contract Freeport',
        name: '_freeport',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize_v2_0_0',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_cereUnitsPerPenny',
        type: 'uint256',
      },
    ],
    name: 'setExchangeRate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExchangeRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'withdrawERC20',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawCurrency',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'penniesReceived',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'buyer',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'buyCereFromUsd',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'penniesReceived',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'buyer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'seller',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'quantity',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expectedPriceOrZero',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'buyNftFromUsd',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611b93806100206000396000f3fe6080604052600436106101265760003560e01c806301ffc9a71461012b5780630421180e14610160578063248a9ca3146101825780632ed6d5e8146101b05780632f2ff15d146101c55780633263ba67146101e557806336568abe146102075780633659cfe6146102275780633d6f291f146102475780634f1ef2861461025c57806365b99f631461026f57806391d14854146102845780639470ad85146102a45780639c750286146102d2578063a217fddf146102e9578063bc197c81146102fe578063c4d66de814610343578063c4f7f9c514610363578063c87113e214610383578063d547741f146103a5578063db068e0e146103c5578063e65372e1146103e5578063e6aa216c146103fc578063f23a6e6114610412578063f5361219146102e9575b600080fd5b34801561013757600080fd5b5061014b6101463660046117bb565b61043e565b60405190151581526020015b60405180910390f35b34801561016c57600080fd5b5061018061017b366004611817565b61045e565b005b34801561018e57600080fd5b506101a261019d366004611774565b61057f565b604051908152602001610157565b3480156101bc57600080fd5b506101a2610594565b3480156101d157600080fd5b506101806101e036600461178c565b610730565b3480156101f157600080fd5b506101a2600080516020611b1783398151915281565b34801561021357600080fd5b5061018061022236600461178c565b610752565b34801561023357600080fd5b506101806102423660046115dc565b6107d0565b34801561025357600080fd5b506101806107f7565b61018061026a366004611707565b61099c565b34801561027b57600080fd5b506101a26109b1565b34801561029057600080fd5b5061014b61029f36600461178c565b610ad0565b3480156102b057600080fd5b5061015f546102c5906001600160a01b031681565b604051610157919061193d565b3480156102de57600080fd5b506101a26101625481565b3480156102f557600080fd5b506101a2600081565b34801561030a57600080fd5b5061032a6103193660046115f8565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610157565b34801561034f57600080fd5b5061018061035e3660046115dc565b610afb565b34801561036f57600080fd5b506101a261037e36600461187b565b610b93565b34801561038f57600080fd5b506101a2600080516020611ad783398151915281565b3480156103b157600080fd5b506101806103c036600461178c565b610be5565b3480156103d157600080fd5b506101806103e0366004611774565b610c02565b3480156103f157600080fd5b506101a26101615481565b34801561040857600080fd5b50610160546101a2565b34801561041e57600080fd5b5061032a61042d3660046116a1565b63f23a6e6160e01b95945050505050565b600061044982610c58565b80610458575061045882610c8d565b92915050565b600080516020611b178339815191526104778133610cb2565b87610161600082825461048a9190611a1b565b9091555050610160546000906104a0908a611a33565b90506104ac8585611a33565b8110156104f75760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064015b60405180910390fd5b61015f54604051634880d24760e01b81526001600160a01b038a81166004830152898116602483015260448201899052606482018790526084820188905290911690634880d2479060a401600060405180830381600087803b15801561055c57600080fd5b505af1158015610570573d6000803e3d6000fd5b50505050505050505050505050565b600090815260c9602052604090206001015490565b6000806105a18133610cb2565b61015f5460408051632e5604bd60e21b8152905133926000926001600160a01b039091169163b95812f491600480820192602092909190829003018186803b1580156105ec57600080fd5b505afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062491906117e3565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610654919061193d565b60206040518083038186803b15801561066c57600080fd5b505afa158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a491906117ff565b60405163a9059cbb60e01b81529091506001600160a01b0383169063a9059cbb906106d59086908590600401611951565b602060405180830381600087803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190611754565b50935050505090565b6107398261057f565b6107438133610cb2565b61074d8383610d16565b505050565b6001600160a01b03811633146107c25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104ee565b6107cc8282610d9c565b5050565b6107d981610e03565b6107f481604051806020016040528060008152506000610e47565b50565b61015f5460408051632e5604bd60e21b815290516000926001600160a01b03169163b95812f4916004808301926020929190829003018186803b15801561083d57600080fd5b505afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906117e3565b61015f54604051636eb1769f60e11b81523060048201526001600160a01b039182166024820152919250600091829184169063dd62ed3e9060440160206040518083038186803b1580156108c857600080fd5b505afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090091906117ff565b119050801561090d575050565b61015f5460405163095ea7b360e01b8152600019916001600160a01b038086169263095ea7b3926109449216908590600401611951565b602060405180830381600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611754565b50505050565b6109a582610e03565b6107cc82826001610e47565b6000806109be8133610cb2565b61015f54604051627eeac760e11b815233916000916001600160a01b039091169062fdd58e906109f49030908590600401611951565b60206040518083038186803b158015610a0c57600080fd5b505afa158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4491906117ff565b61015f54604051637921219560e11b81523060048201526001600160a01b0385811660248301526000604483018190526064830185905260a0608484015260a483015292935091169063f242432a9060c401600060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b50929550505050505090565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1680610b14575060005460ff16155b610b305760405162461bcd60e51b81526004016104ee9061199d565b600054610100900460ff16158015610b52576000805461ffff19166101011790555b610b5a610fc3565b610b62610fe0565b61015f80546001600160a01b0319166001600160a01b03841617905580156107cc576000805461ff00191690555050565b6000600080516020611b17833981519152610bae8133610cb2565b60405162461bcd60e51b815260206004820152600c60248201526b111a5cd8dbdb9d1a5b9d595960a21b60448201526064016104ee565b610bee8261057f565b610bf88133610cb2565b61074d8383610d9c565b600080516020611ad7833981519152610c1b8133610cb2565b6101608290556040518281527f1d5de90e7c5b244ac5797698b15fe80a92524d933dafd79e001daf844555fb1c9060200160405180910390a15050565b60006001600160e01b03198216637965db0b60e01b148061045857506301ffc9a760e01b6001600160e01b0319831614610458565b60006001600160e01b03198216630271189760e51b1480610458575061045882610c58565b610cbc8282610ad0565b6107cc57610cd4816001600160a01b03166014611063565b610cdf836020611063565b604051602001610cf09291906118ce565b60408051601f198184030181529082905262461bcd60e51b82526104ee9160040161196a565b610d208282610ad0565b6107cc57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610d583390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610da68282610ad0565b156107cc57600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610e0e600033610ad0565b6107f45760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b60448201526064016104ee565b6000610e5161124b565b9050610e5c84611267565b600083511180610e695750815b15610e7a57610e7884846112fa565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610fbc57805460ff19166001178155604051610ef5908690610ec690859060240161193d565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526112fa565b50805460ff19168155610f0661124b565b6001600160a01b0316826001600160a01b031614610f7e5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016104ee565b610f8785611267565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610fcb6113e5565b610fd3610fe0565b610fde600033611443565b565b600054610100900460ff1680610ff9575060005460ff16155b6110155760405162461bcd60e51b81526004016104ee9061199d565b600054610100900460ff16158015611037576000805461ffff19166101011790555b61103f61144d565b61104761144d565b61104f61144d565b80156107f4576000805461ff001916905550565b60606000611072836002611a33565b61107d906002611a1b565b6001600160401b038111156110a257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110cc576020820181803683370190505b509050600360fc1b816000815181106110f557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061113257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611156846002611a33565b611161906001611a1b565b90505b60018111156111f5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111a357634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106111c757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936111ee81611a7e565b9050611164565b5083156112445760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104ee565b9392505050565b600080516020611af7833981519152546001600160a01b031690565b803b6112cb5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104ee565b600080516020611af783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6113595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104ee565b600080846001600160a01b03168460405161137491906118b2565b600060405180830381855af49150503d80600081146113af576040519150601f19603f3d011682016040523d82523d6000602084013e6113b4565b606091505b50915091506113dc8282604051806060016040528060278152602001611b37602791396114b7565b95945050505050565b600054610100900460ff16806113fe575060005460ff16155b61141a5760405162461bcd60e51b81526004016104ee9061199d565b600054610100900460ff1615801561103f576000805461ffff191661010117905561104761144d565b6107cc8282610d16565b600054610100900460ff1680611466575060005460ff16155b6114825760405162461bcd60e51b81526004016104ee9061199d565b600054610100900460ff1615801561104f576000805461ffff191661010117905580156107f4576000805461ff001916905550565b606083156114c6575081611244565b8251156114d65782518084602001fd5b8160405162461bcd60e51b81526004016104ee919061196a565b600082601f830112611500578081fd5b813560206001600160401b0382111561151b5761151b611aab565b8160051b61152a8282016119eb565b838152828101908684018388018501891015611544578687fd5b8693505b85841015611566578035835260019390930192918401918401611548565b50979650505050505050565b600082601f830112611582578081fd5b81356001600160401b0381111561159b5761159b611aab565b6115ae601f8201601f19166020016119eb565b8181528460208386010111156115c2578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156115ed578081fd5b813561124481611ac1565b600080600080600060a0868803121561160f578081fd5b853561161a81611ac1565b9450602086013561162a81611ac1565b935060408601356001600160401b0380821115611645578283fd5b61165189838a016114f0565b94506060880135915080821115611666578283fd5b61167289838a016114f0565b93506080880135915080821115611687578283fd5b5061169488828901611572565b9150509295509295909350565b600080600080600060a086880312156116b8578081fd5b85356116c381611ac1565b945060208601356116d381611ac1565b9350604086013592506060860135915060808601356001600160401b038111156116fb578182fd5b61169488828901611572565b60008060408385031215611719578182fd5b823561172481611ac1565b915060208301356001600160401b0381111561173e578182fd5b61174a85828601611572565b9150509250929050565b600060208284031215611765578081fd5b81518015158114611244578182fd5b600060208284031215611785578081fd5b5035919050565b6000806040838503121561179e578182fd5b8235915060208301356117b081611ac1565b809150509250929050565b6000602082840312156117cc578081fd5b81356001600160e01b031981168114611244578182fd5b6000602082840312156117f4578081fd5b815161124481611ac1565b600060208284031215611810578081fd5b5051919050565b600080600080600080600060e0888a031215611831578485fd5b87359650602088013561184381611ac1565b9550604088013561185381611ac1565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b60008060006060848603121561188f578081fd5b8335925060208401356118a181611ac1565b929592945050506040919091013590565b600082516118c4818460208701611a52565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351611900816017850160208801611a52565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611931816028840160208801611a52565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020815260008251806020840152611989816040850160208701611a52565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b604051601f8201601f191681016001600160401b0381118282101715611a1357611a13611aab565b604052919050565b60008219821115611a2e57611a2e611a95565b500190565b6000816000190483118215151615611a4d57611a4d611a95565b500290565b60005b83811015611a6d578181015183820152602001611a55565b838111156109965750506000910152565b600081611a8d57611a8d611a95565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146107f457600080fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c7be8941aa50aedb9f74ab60d6b2d03533fef0a1c431551987dfbfea7ffd0f3e64736f6c63430008040033';

type FiatGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FiatGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FiatGateway__factory extends ContractFactory {
  constructor(...args: FiatGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FiatGateway> {
    return super.deploy(overrides || {}) as Promise<FiatGateway>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FiatGateway {
    return super.attach(address) as FiatGateway;
  }
  connect(signer: Signer): FiatGateway__factory {
    return super.connect(signer) as FiatGateway__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FiatGatewayInterface {
    return new utils.Interface(_abi) as FiatGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FiatGateway {
    return new Contract(address, _abi, signerOrProvider) as FiatGateway;
  }
}
