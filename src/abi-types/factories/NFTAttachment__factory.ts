/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { NFTAttachment, NFTAttachmentInterface } from '../NFTAttachment';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract Freeport',
        name: '_freeport',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'anonym',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'AnonymAttachToNFT',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'minter',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'MinterAttachToNFT',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'OwnerAttachToNFT',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'META_TX_FORWARDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'freeport',
    outputs: [
      {
        internalType: 'contract Freeport',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'forwarder',
        type: 'address',
      },
    ],
    name: 'isTrustedForwarder',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'minterAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'ownerAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'anonymAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: '_minterFromNftId',
    outputs: [
      {
        internalType: 'address',
        name: 'minter',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
    constant: true,
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610d0f380380610d0f83398101604081905261002f91610067565b6001600160a01b03811661004257600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610095565b600060208284031215610078578081fd5b81516001600160a01b038116811461008e578182fd5b9392505050565b610c6b806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf578063248a9ca3146100e75780632f2ff15d1461010857806336568abe1461011d578063572b6c051461013057806391d14854146101435780639470ad85146101565780639a86e8ce14610181578063a217fddf14610196578063b85f8ca91461019e578063c0ba9f55146101b1578063d2e9277b146101c4578063d547741f146101d8578063f9715b8f146101eb575b600080fd5b6100d26100cd3660046109c9565b6101fe565b60405190151581526020015b60405180910390f35b6100fa6100f5366004610986565b610235565b6040519081526020016100de565b61011b61011636600461099e565b61024a565b005b61011b61012b36600461099e565b610273565b6100d261013e36600461096c565b610306565b6100d261015136600461099e565b61031c565b600154610169906001600160a01b031681565b6040516001600160a01b0390911681526020016100de565b6100fa600080516020610c1683398151915281565b6100fa600081565b61011b6101ac366004610a09565b610345565b61011b6101bf366004610a09565b610416565b6101696101d2366004610986565b60601c90565b61011b6101e636600461099e565b610548565b61011b6101f9366004610a09565b610567565b60006001600160e01b03198216637965db0b60e01b148061022f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61025382610235565b6102648161025f6105da565b6105fc565b61026e8383610660565b505050565b61027b6105da565b6001600160a01b0316816001600160a01b0316146102f85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61030282826106e5565b5050565b600061022f600080516020610c16833981519152835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b826103625760405162461bcd60e51b81526004016102ef90610b50565b600061036c6105da565b9050600061037a8560601c90565b9050806001600160a01b0316826001600160a01b0316146103cb5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b60448201526064016102ef565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d3228686604051610407929190610aee565b60405180910390a35050505050565b826104335760405162461bcd60e51b81526004016102ef90610b50565b600061043d6105da565b600154604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b15801561048d57600080fd5b505afa1580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c591906109f1565b90506000811161050c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b60448201526064016102ef565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610407929190610aee565b61055182610235565b61055d8161025f6105da565b61026e83836106e5565b826105845760405162461bcd60e51b81526004016102ef90610b50565b600061058e6105da565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516105cc929190610aee565b60405180910390a350505050565b60006105e533610306565b156105f7575060131936013560601c90565b503390565b610606828261031c565b6103025761061e816001600160a01b03166014610768565b610629836020610768565b60405160200161063a929190610a7f565b60408051601f198184030181529082905262461bcd60e51b82526102ef91600401610b1d565b61066a828261031c565b610302576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556106a16105da565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6106ef828261031c565b15610302576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556107246105da565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60606000610777836002610b99565b610782906002610b81565b6001600160401b038111156107a757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107d1576020820181803683370190505b509050600360fc1b816000815181106107fa57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061083757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061085b846002610b99565b610866906001610b81565b90505b60018111156108fa576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108a857634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106108cc57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936108f381610be8565b9050610869565b5083156109495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102ef565b9392505050565b80356001600160a01b038116811461096757600080fd5b919050565b60006020828403121561097d578081fd5b61094982610950565b600060208284031215610997578081fd5b5035919050565b600080604083850312156109b0578081fd5b823591506109c060208401610950565b90509250929050565b6000602082840312156109da578081fd5b81356001600160e01b031981168114610949578182fd5b600060208284031215610a02578081fd5b5051919050565b600080600060408486031215610a1d578081fd5b8335925060208401356001600160401b0380821115610a3a578283fd5b818601915086601f830112610a4d578283fd5b813581811115610a5b578384fd5b876020828501011115610a6c578384fd5b6020830194508093505050509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610ab1816017850160208801610bb8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610ae2816028840160208801610bb8565b01602801949350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020815260008251806020840152610b3c816040850160208701610bb8565b601f01601f19169190910160400192915050565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b60008219821115610b9457610b94610bff565b500190565b6000816000190483118215151615610bb357610bb3610bff565b500290565b60005b83811015610bd3578181015183820152602001610bbb565b83811115610be2576000848401525b50505050565b600081610bf757610bf7610bff565b506000190190565b634e487b7160e01b600052601160045260246000fdfe3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220f7c66f32d0666511241c262ab0cead885c6403db2ecfbdbdceda6cf94b21fbb664736f6c63430008040033';

type NFTAttachmentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTAttachmentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTAttachment__factory extends ContractFactory {
  constructor(...args: NFTAttachmentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _freeport: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTAttachment> {
    return super.deploy(_freeport, overrides || {}) as Promise<NFTAttachment>;
  }
  getDeployTransaction(
    _freeport: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_freeport, overrides || {});
  }
  attach(address: string): NFTAttachment {
    return super.attach(address) as NFTAttachment;
  }
  connect(signer: Signer): NFTAttachment__factory {
    return super.connect(signer) as NFTAttachment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAttachmentInterface {
    return new utils.Interface(_abi) as NFTAttachmentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTAttachment {
    return new Contract(address, _abi, signerOrProvider) as NFTAttachment;
  }
}
