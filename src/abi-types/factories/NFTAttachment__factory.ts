/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { NFTAttachment, NFTAttachmentInterface } from '../NFTAttachment';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'anonym',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'AnonymAttachToNFT',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'minter',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'MinterAttachToNFT',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'OwnerAttachToNFT',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'COLLECTION_MANAGER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'META_TX_FORWARDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'freeport',
    outputs: [
      {
        internalType: 'contract Freeport',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'innerNftId',
        type: 'uint32',
      },
    ],
    name: 'getGlobalNftId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'forwarder',
        type: 'address',
      },
    ],
    name: 'isTrustedForwarder',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Freeport',
        name: '_freeport',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'minterAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'collectionManagerAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'ownerAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'nftId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'attachment',
        type: 'bytes',
      },
    ],
    name: 'anonymAttachToNFT',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: '_minterFromNftId',
    outputs: [
      {
        internalType: 'address',
        name: 'minter',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506117a3806100206000396000f3fe6080604052600436106100ef5760003560e01c806301ffc9a7146100f45780631d250fa9146101295780632210023d1461014b578063248a9ca31461017b578063288809c71461019b5780632f2ff15d146101ca57806336568abe146101ea5780633659cfe61461020a5780634f1ef2861461022a578063572b6c051461023d57806391d148541461025d5780639470ad851461027d5780639a86e8ce146102aa578063a217fddf146102cc578063b85f8ca9146102e1578063c0ba9f5514610301578063c4d66de814610321578063d2e9277b14610341578063d547741f14610362578063f9715b8f14610382575b600080fd5b34801561010057600080fd5b5061011461010f3660046113ad565b6103a2565b60405190151581526020015b60405180910390f35b34801561013557600080fd5b506101496101443660046113ed565b6103d9565b005b34801561015757600080fd5b5061016d60008051602061172e83398151915281565b604051908152602001610120565b34801561018757600080fd5b5061016d610196366004611366565b61057e565b3480156101a757600080fd5b5061016d6101b6366004611463565b60401b63ffffffff60401b163060601b1790565b3480156101d657600080fd5b506101496101e536600461137e565b610593565b3480156101f657600080fd5b5061014961020536600461137e565b6105bc565b34801561021657600080fd5b5061014961022536600461126c565b61064a565b610149610238366004611288565b610671565b34801561024957600080fd5b5061011461025836600461126c565b610686565b34801561026957600080fd5b5061011461027836600461137e565b61069c565b34801561028957600080fd5b5060fb5461029d906001600160a01b031681565b6040516101209190611512565b3480156102b657600080fd5b5061016d60008051602061174e83398151915281565b3480156102d857600080fd5b5061016d600081565b3480156102ed57600080fd5b506101496102fc3660046113ed565b6106c7565b34801561030d57600080fd5b5061014961031c3660046113ed565b610786565b34801561032d57600080fd5b5061014961033c36600461126c565b6108b8565b34801561034d57600080fd5b5061029d61035c366004611366565b60601c90565b34801561036e57600080fd5b5061014961037d36600461137e565b61095a565b34801561038e57600080fd5b5061014961039d3660046113ed565b610979565b60006001600160e01b03198216637965db0b60e01b14806103d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606083901c604084901c63ffffffff166001600160401b038516801561045c5760405162461bcd60e51b815260206004820152602d60248201527f4e465420666f726d6174206973206e6f7420636f6d70617469626c652077697460448201526c6820436f6c6c656374696f6e7360981b60648201526084015b60405180910390fd5b60006104666109ec565b604051632474521560e21b815260008051602061172e83398151915260048201526001600160a01b038083166024830152919250908516906391d148549060440160206040518083038186803b1580156104bf57600080fd5b505afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190611346565b6105435760405162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f7420636f6c6c656374696f6e206d616e616765726044820152606401610453565b86816001600160a01b03166000805160206116c7833981519152888860405161056d929190611526565b60405180910390a350505050505050565b600090815260c9602052604090206001015490565b61059c8261057e565b6105ad816105a86109ec565b610a0e565b6105b78383610a72565b505050565b6105c46109ec565b6001600160a01b0316816001600160a01b03161461063c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610453565b6106468282610af9565b5050565b61065381610b7e565b61066e81604051806020016040528060008152506000610bc2565b50565b61067a82610b7e565b61064682826001610bc2565b60006103d360008051602061174e833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b826106e45760405162461bcd60e51b8152600401610453906115d6565b60006106ee6109ec565b905060006106fc8560601c90565b9050806001600160a01b0316826001600160a01b03161461074d5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b6044820152606401610453565b84826001600160a01b03166000805160206116c78339815191528686604051610777929190611526565b60405180910390a35050505050565b826107a35760405162461bcd60e51b8152600401610453906115d6565b60006107ad6109ec565b60fb54604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083591906113d5565b90506000811161087c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b6044820152606401610453565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610777929190611526565b600054610100900460ff16806108d1575060005460ff16155b6108ed5760405162461bcd60e51b815260040161045390611588565b600054610100900460ff1615801561090f576000805461ffff19166101011790555b610917610d3e565b6001600160a01b03821661092a57600080fd5b60fb80546001600160a01b0319166001600160a01b0384161790558015610646576000805461ff00191690555050565b6109638261057e565b61096f816105a86109ec565b6105b78383610af9565b826109965760405162461bcd60e51b8152600401610453906115d6565b60006109a06109ec565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516109de929190611526565b60405180910390a350505050565b60006109f733610686565b15610a09575060131936013560601c90565b503390565b610a18828261069c565b61064657610a30816001600160a01b03166014610d48565b610a3b836020610d48565b604051602001610a4c9291906114a3565b60408051601f198184030181529082905262461bcd60e51b825261045391600401611555565b610a7c828261069c565b61064657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610ab56109ec565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b03828261069c565b1561064657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055610b3a6109ec565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610b8960003361069c565b61066e5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b6044820152606401610453565b6000610bcc610f30565b9050610bd784610f4c565b600083511180610be45750815b15610bf557610bf38484610fdf565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610d3757805460ff19166001178155604051610c70908690610c41908590602401611512565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610fdf565b50805460ff19168155610c81610f30565b6001600160a01b0316826001600160a01b031614610cf95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610453565b610d0285610f4c565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610d466110ca565b565b60606000610d5783600261161f565b610d62906002611607565b6001600160401b03811115610d8757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610db1576020820181803683370190505b509050600360fc1b81600081518110610dda57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e1757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610e3b84600261161f565b610e46906001611607565b90505b6001811115610eda576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610e8857634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610eac57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ed38161166e565b9050610e49565b508315610f295760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610453565b9392505050565b6000805160206116e7833981519152546001600160a01b031690565b803b610fb05760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610453565b6000805160206116e783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b61103e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610453565b600080846001600160a01b0316846040516110599190611487565b600060405180830381855af49150503d8060008114611094576040519150601f19603f3d011682016040523d82523d6000602084013e611099565b606091505b50915091506110c18282604051806060016040528060278152602001611707602791396110e5565b95945050505050565b6110d261111e565b6110da611199565b610d466000336111f8565b606083156110f4575081610f29565b8251156111045782518084602001fd5b8160405162461bcd60e51b81526004016104539190611555565b600054610100900460ff1680611137575060005460ff16155b6111535760405162461bcd60e51b815260040161045390611588565b600054610100900460ff16158015611175576000805461ffff19166101011790555b61117d611202565b611185611202565b801561066e576000805461ff001916905550565b600054610100900460ff16806111b2575060005460ff16155b6111ce5760405162461bcd60e51b815260040161045390611588565b600054610100900460ff161580156111f0576000805461ffff19166101011790555b611175611202565b6106468282610a72565b600054610100900460ff168061121b575060005460ff16155b6112375760405162461bcd60e51b815260040161045390611588565b600054610100900460ff16158015611185576000805461ffff1916610101179055801561066e576000805461ff001916905550565b60006020828403121561127d578081fd5b8135610f29816116b1565b6000806040838503121561129a578081fd5b82356112a5816116b1565b915060208301356001600160401b03808211156112c0578283fd5b818501915085601f8301126112d3578283fd5b8135818111156112e5576112e561169b565b604051601f8201601f19908116603f0116810190838211818310171561130d5761130d61169b565b81604052828152886020848701011115611325578586fd5b82602086016020830137856020848301015280955050505050509250929050565b600060208284031215611357578081fd5b81518015158114610f29578182fd5b600060208284031215611377578081fd5b5035919050565b60008060408385031215611390578182fd5b8235915060208301356113a2816116b1565b809150509250929050565b6000602082840312156113be578081fd5b81356001600160e01b031981168114610f29578182fd5b6000602082840312156113e6578081fd5b5051919050565b600080600060408486031215611401578081fd5b8335925060208401356001600160401b038082111561141e578283fd5b818601915086601f830112611431578283fd5b81358181111561143f578384fd5b876020828501011115611450578384fd5b6020830194508093505050509250925092565b600060208284031215611474578081fd5b813563ffffffff81168114610f29578182fd5b6000825161149981846020870161163e565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516114d581601785016020880161163e565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161150681602884016020880161163e565b01602801949350505050565b6001600160a01b0391909116815260200190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000825180602084015261157481604085016020870161163e565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b6000821982111561161a5761161a611685565b500190565b600081600019048311821515161561163957611639611685565b500290565b60005b83811015611659578181015183820152602001611641565b83811115611668576000848401525b50505050565b60008161167d5761167d611685565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461066e57600080fdfe5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b264880953d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220c029c0a4be40e13bfb59dd72890eefb8b4cdc3fc25eba7a5441ece4e5809ab6064736f6c63430008040033';

type NFTAttachmentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTAttachmentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTAttachment__factory extends ContractFactory {
  constructor(...args: NFTAttachmentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTAttachment> {
    return super.deploy(overrides || {}) as Promise<NFTAttachment>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTAttachment {
    return super.attach(address) as NFTAttachment;
  }
  connect(signer: Signer): NFTAttachment__factory {
    return super.connect(signer) as NFTAttachment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAttachmentInterface {
    return new utils.Interface(_abi) as NFTAttachmentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTAttachment {
    return new Contract(address, _abi, signerOrProvider) as NFTAttachment;
  }
}
