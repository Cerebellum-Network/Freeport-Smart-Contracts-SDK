{
  "contractName": "CollectionFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "CollectionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLECTION_CREATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftAttachment",
      "outputs": [
        {
          "internalType": "contract NFTAttachment",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        },
        {
          "internalType": "contract NFTAttachment",
          "name": "_nftAttachment",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uriTpl",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "contractURI",
          "type": "string"
        }
      ],
      "name": "createCollection",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLECTION_CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uriTpl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"},{\"internalType\":\"contract NFTAttachment\",\"name\":\"_nftAttachment\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAttachment\",\"outputs\":[{\"internalType\":\"contract NFTAttachment\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CollectionCreated(string,address)\":{\"notice\":\"An event emitted when new collection is created. Contains unique name of collection and its address.\"}},\"kind\":\"user\",\"methods\":{\"COLLECTION_CREATOR_ROLE()\":{\"notice\":\"Collection creator role.  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT.\"},\"createCollection(address,string,string,string)\":{\"notice\":\"Deploying a new user collection.  Emits a {CollectionCreated} event.\"}},\"notice\":\"This is a contract for creating standalone contracts (collections) for users.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CollectionFactory.sol\":\"CollectionFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed\",\"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xda94a85ba0a26d49cd327cc63b8b54fa5dde8f5d1c5f3c942237096ef896eff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a591e20787048963a028302f0157fea70eab83db641f020169a789effc7d7907\",\"dweb:/ipfs/QmXY3LKPvw5BMrjG4JxWZZ15RR2jhUDktNrZqHqyCewXBG\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xce27d2053e9b7a970532947213c84eed0289ada2d9a91c92b7e1e15f3a466c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429b36651fab917b4cdfa5e9431b96c5bd3ba73392a31e62a4d92b4b4ae85184\",\"dweb:/ipfs/QmY1SgWuSbxgYCPAibNHT4phA71QzzqagZRunwC7Gm19wq\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352\",\"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6014667ab9e057c1810fcb7ef844123c581a34eb8dafc1aaa15f4e0f704620b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3abfde5dc879cf0ef670cd7357410b4fcf2a7ec76306e82f96cb4715b2c51d0\",\"dweb:/ipfs/Qme48SqUCFLhgtgg9ZSpmQuwvitujCkHjDhmDCAtsDgjA3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xd841c561258151c3c22f05feb68c702fc414b112606bd72b848e8a65af128c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e949bb10f10df25903b0ec5eb13a8b9878996abd49897884062645a4123ffb2\",\"dweb:/ipfs/QmQ2Z3qegGykZLAf7Wt1y24wCxxnA3stRMHzy1LBFvxhtX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa22cd3d499a04af4dbcc1b15877b69b611004ff02a2ab121e42226a6b6a88ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b5420b49ecc4983f2810d413749289c357c58d2b0f3431b5b99cd3242ce17a\",\"dweb:/ipfs/QmUA8ydnDvHSdbXgkPhL3xSBitYj8vcC8XbWRFvKkCtJzH\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d\",\"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f\",\"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/Collection.sol\":{\"keccak256\":\"0xfd5f7fb8ecd96b3372522e199377a54d131340e7e95126790d8f5fb87a51f458\",\"urls\":[\"bzz-raw://1a4311a62a0df05af5cfdedef8abc296e8d1168fd93f4978d5347cc8b9d3decc\",\"dweb:/ipfs/QmURsCttTjPH4n8vBVAshFvRMmPAzYfeDyfU2TTTJuFggX\"]},\"project:/contracts/CollectionFactory.sol\":{\"keccak256\":\"0xfa76919314ab9b633e56d8e83955d459b0cf47bf15b45894f192bffa42cbc27e\",\"urls\":[\"bzz-raw://7c23107beb67e1e1f9dad1d237845bf72be8db6b24252c337253ae47cc065541\",\"dweb:/ipfs/QmVWqWvdj2B7RFCberAfEF6Ze9BmzJ5FSbURe5puyuwQ7z\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0x001501a3c0ca27f755dd356ace2fae4bf88b31eeb2ac39464177861b0d75f9c5\",\"urls\":[\"bzz-raw://81bfe2fa98823dfc4791f279b165492022cca0030927f918294b62589e5a722f\",\"dweb:/ipfs/QmcSjxP44iN1MRHaSocw6aLeySA7g2dWKpsfQ55tH1xbXi\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x38f603b6c69541ab197956454fd07a2aecce0c03e19320d7a29902a6af656301\",\"urls\":[\"bzz-raw://5219d3947953ef384ac070fdbacdbb39a6623107ca799383dcec44d86832456e\",\"dweb:/ipfs/QmbiUcxRdGz9cuqoapQuL4pqAguY9Wtf6xq3iw4UncL121\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x589571f85ae8cc227de3ea3b2c7b3d6f8dd5b977755c4c7303cc18c1aede3322\",\"urls\":[\"bzz-raw://33479f8d906835f681a11ae5eeb51af792726764e7a45dab082b84b617ef175c\",\"dweb:/ipfs/QmWaQQNmegKf1Nd2y4M5pnUNNKJQ6NaHQjXJgUC2MqUKwH\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0xc4e1878c459f9b7741a965245659e9e90d241ded479264c22f31efe15ed04aec\",\"urls\":[\"bzz-raw://d4bcafd88cde0d2cca84f87f999c4ba7d04409c3c62384da56f462a96eac3dc5\",\"dweb:/ipfs/QmfMnUk5CYRp6q9JiXTtc1cpoXDatwzSqRfkZjTAKdGHr2\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x7298ad1106ffa5af90d35bf47e214dc28c705f99a3796d644e92b3a492d273b7\",\"urls\":[\"bzz-raw://2ad2298e77090a93310f10e78ba2bfdd5712f2183d662328e197665e1e1d8857\",\"dweb:/ipfs/QmWdotY9DB6a6W2m6qkNKDXeuL7M7Shff45QTii2ktwBUm\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x1d3f9d778f91e75758a3415184eacbbdcd48cea32e05cc66ad0dbda5d2743263\",\"urls\":[\"bzz-raw://e39ed264fcdee725fb2eed77788a13df9e879f28662dd388cd11455e01fc1f4f\",\"dweb:/ipfs/QmdGom9qXRX7YeNS92Rn9QmjLSZ3MbB5hhspeESeRb5V5B\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0xf35f669c65346b421322355b744f2a071275f298a1fa9a630b7a73df91fdf540\",\"urls\":[\"bzz-raw://7ec2c162ecd046754a762d80eff3c113421bb0c82bc888f1caf50314174d706e\",\"dweb:/ipfs/QmNVdvKAaPwRJLvQBBj381fr1xDhuqD1KFoFDbLDs3z9BQ\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0xdd37428ab4740cc4cba878f25999c0f94949a1446c2d5ee30d164352a909cc20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c7a0d9223e6d7ef3cf4cbe2d22db198823c11ffb8ed269a7cd31b1c8ba8e1d\",\"dweb:/ipfs/QmWsD5hNAfT6zktKkUbYrMhF1ZGP8t9cC31jk9mUFSkmgY\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x8815647aaba57fe5175439ca22f5cfe7adffdf959cf19f74ad6079b329dc46ba\",\"urls\":[\"bzz-raw://999515bd8f5e71417a672e4426d2b1961bc0a94ffa01c9154f8f4907c0afb15f\",\"dweb:/ipfs/QmfZ2tcZT6LoWVLWyaUGUqUa8wU8bvxpmnnEUERJBuc3g5\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xcb640511c6c8316cc452ec87d9cdc2c74b75dacb01d636e1b94b266f7771ca2d\",\"urls\":[\"bzz-raw://7fd1e06a180dc3995714fd50bba969445a0a1164fd2db6b5407b37edee3eb01a\",\"dweb:/ipfs/QmU75hREyE73AiHioN81T7Sp5z3FFPQx55T7t3nwFwi3uQ\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0x430f18b7e8e7a369ec254705a064d2411fe0fe2cd1ce546baaedd03aa965edc2\",\"urls\":[\"bzz-raw://b4f8a0c647e900ec91c0ea26614b8318fdaf6cfccc9234538b99e31c92ef635f\",\"dweb:/ipfs/QmUASapjiTqxuYC1dp5EmBKjs4Nh9VzaQGbs2CPTokM9TQ\"]},\"project:/contracts/freeportParts/Upgradeable.sol\":{\"keccak256\":\"0x6edf744da7d19533558fd19dd9db50151671d137603363efd2c69c6bad46434a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dedf9f686f3f736a593d0e3f4b7609c1fe919c969ac82036d1ad68d4c04fdd\",\"dweb:/ipfs/QmU7BcQKJHBVQ91kYacbeUKUC8YBuF2GTrGdrYLBDBzdBi\"]},\"project:/contracts/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xd0615c826e26d02b5a981f933b8a9bd27f9459e440397b165e5fcc014b41a835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c02c9558d39e1b6a85b74d07b3c621acdd7740718bb59b2beef8fed0c3b4203\",\"dweb:/ipfs/QmVe9NXaqmuYcWpkaznDqGfv1sGFQsteb5RzaVHZT8UuGZ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c35760003560e01c806301ffc9a7146100c857806311ec5868146100fd578063248a9ca31461012a5780632f2ff15d1461015857806336568abe1461017a5780633659cfe61461019a5780633df17453146101ba578063485cc955146101da5780634f1ef286146101fa578063572b6c051461020d57806391d148541461022d5780639470ad851461024d5780639a86e8ce1461026d578063a217fddf1461028f578063caff99ce146102a4578063d547741f146102c6575b600080fd5b3480156100d457600080fd5b506100e86100e3366004611236565b6102e6565b60405190151581526020015b60405180910390f35b34801561010957600080fd5b5060fd5461011d906001600160a01b031681565b6040516100f49190611342565b34801561013657600080fd5b5061014a6101453660046111ef565b61031d565b6040519081526020016100f4565b34801561016457600080fd5b50610178610173366004611207565b610332565b005b34801561018657600080fd5b50610178610195366004611207565b61035b565b3480156101a657600080fd5b506101786101b53660046110dd565b6103ee565b3480156101c657600080fd5b5061011d6101d5366004611159565b610415565b3480156101e657600080fd5b506101786101f536600461125e565b6106a2565b6101786102083660046110f9565b610747565b34801561021957600080fd5b506100e86102283660046110dd565b61075c565b34801561023957600080fd5b506100e8610248366004611207565b610772565b34801561025957600080fd5b5060fc5461011d906001600160a01b031681565b34801561027957600080fd5b5061014a600080516020614a5b83398151915281565b34801561029b57600080fd5b5061014a600081565b3480156102b057600080fd5b5061014a6000805160206149f483398151915281565b3480156102d257600080fd5b506101786102e1366004611207565b61079d565b60006001600160e01b03198216637965db0b60e01b148061031757506301ffc9a760e01b6001600160e01b03198316145b92915050565b600090815260c9602052604090206001015490565b61033b8261031d565b61034c816103476107bc565b6107de565b6103568383610842565b505050565b6103636107bc565b6001600160a01b0316816001600160a01b0316146103e05760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6103ea82826108c9565b5050565b6103f78161094e565b61041281604051806020016040528060008152506000610992565b50565b60006104316000805160206149f48339815191526102486107bc565b6104775760405162461bcd60e51b815260206004820152601760248201527637b7363c9031b7b63632b1ba34b7b71031b932b0ba37b960491b60448201526064016103d7565b6001600160a01b0385166104c45760405162461bcd60e51b81526020600482015260146024820152733d32b9379030b2323932b9b99031b932b0ba37b960611b60448201526064016103d7565b60006001600160a01b031660fb856040516104df91906112b7565b908152604051908190036020019020546001600160a01b0316146105455760405162461bcd60e51b815260206004820152601e60248201527f636f6c6c656374696f6e206e616d6520616c726561647920657869737473000060448201526064016103d7565b60006040516105539061103c565b604051809103906000f08015801561056f573d6000803e3d6000fd5b5060fc5460fd546040516311d0d6c560e31b81529293506001600160a01b0380851693638e86b628936105b59330938d938d938d938d9391821692911690600401611356565b600060405180830381600087803b1580156105cf57600080fd5b505af11580156105e3573d6000803e3d6000fd5b505060ff8054600090815260fe6020526040902080546001600160a01b0319166001600160a01b0386161790555461061f925090506001611424565b60ff55604051819060fb906106359088906112b7565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908216907f2660dd916ec25bcad9a3dd62c721e438ec0e975817265c1e03c2639b24ac7007906106919088906113c3565b60405180910390a295945050505050565b600054610100900460ff16806106bb575060005460ff16155b6106d75760405162461bcd60e51b81526004016103d7906113d6565b600054610100900460ff161580156106f9576000805461ffff19166101011790555b610701610b0e565b60fc80546001600160a01b038086166001600160a01b03199283161790925560fd8054928516929091169190911790558015610356576000805461ff0019169055505050565b6107508261094e565b6103ea82826001610992565b6000610317600080516020614a5b833981519152835b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6107a68261031d565b6107b2816103476107bc565b61035683836108c9565b60006107c73361075c565b156107d9575060131936013560601c90565b503390565b6107e88282610772565b6103ea57610800816001600160a01b03166014610b18565b61080b836020610b18565b60405160200161081c9291906112d3565b60408051601f198184030181529082905262461bcd60e51b82526103d7916004016113c3565b61084c8282610772565b6103ea57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108856107bc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108d38282610772565b156103ea57600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff1916905561090a6107bc565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610959600033610772565b6104125760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b60448201526064016103d7565b600061099c610d00565b90506109a784610d1c565b6000835111806109b45750815b156109c5576109c38484610daf565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610b0757805460ff19166001178155604051610a40908690610a11908590602401611342565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610daf565b50805460ff19168155610a51610d00565b6001600160a01b0316826001600160a01b031614610ac95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016103d7565b610ad285610d1c565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b610b16610e9a565b565b60606000610b2783600261143c565b610b32906002611424565b6001600160401b03811115610b5757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b81576020820181803683370190505b509050600360fc1b81600081518110610baa57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610be757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610c0b84600261143c565b610c16906001611424565b90505b6001811115610caa576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c5857634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610c7c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ca38161148b565b9050610c19565b508315610cf95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103d7565b9392505050565b600080516020614a14833981519152546001600160a01b031690565b803b610d805760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103d7565b600080516020614a1483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b610e0e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103d7565b600080846001600160a01b031684604051610e2991906112b7565b600060405180830381855af49150503d8060008114610e64576040519150601f19603f3d011682016040523d82523d6000602084013e610e69565b606091505b5091509150610e918282604051806060016040528060278152602001614a3460279139610eb5565b95945050505050565b610ea2610eee565b610eaa610f69565b610b16600033610fc8565b60608315610ec4575081610cf9565b825115610ed45782518084602001fd5b8160405162461bcd60e51b81526004016103d791906113c3565b600054610100900460ff1680610f07575060005460ff16155b610f235760405162461bcd60e51b81526004016103d7906113d6565b600054610100900460ff16158015610f45576000805461ffff19166101011790555b610f4d610fd2565b610f55610fd2565b8015610412576000805461ff001916905550565b600054610100900460ff1680610f82575060005460ff16155b610f9e5760405162461bcd60e51b81526004016103d7906113d6565b600054610100900460ff16158015610fc0576000805461ffff19166101011790555b610f45610fd2565b6103ea8282610842565b600054610100900460ff1680610feb575060005460ff16155b6110075760405162461bcd60e51b81526004016103d7906113d6565b600054610100900460ff16158015610f55576000805461ffff19166101011790558015610412576000805461ff001916905550565b613510806114e483390190565b60006001600160401b0380841115611063576110636114b8565b604051601f8501601f19908116603f0116810190828211818310171561108b5761108b6114b8565b816040528093508581528686860111156110a457600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126110ce578081fd5b610cf983833560208501611049565b6000602082840312156110ee578081fd5b8135610cf9816114ce565b6000806040838503121561110b578081fd5b8235611116816114ce565b915060208301356001600160401b03811115611130578182fd5b8301601f81018513611140578182fd5b61114f85823560208401611049565b9150509250929050565b6000806000806080858703121561116e578182fd5b8435611179816114ce565b935060208501356001600160401b0380821115611194578384fd5b6111a0888389016110be565b945060408701359150808211156111b5578384fd5b6111c1888389016110be565b935060608701359150808211156111d6578283fd5b506111e3878288016110be565b91505092959194509250565b600060208284031215611200578081fd5b5035919050565b60008060408385031215611219578182fd5b82359150602083013561122b816114ce565b809150509250929050565b600060208284031215611247578081fd5b81356001600160e01b031981168114610cf9578182fd5b60008060408385031215611270578182fd5b823561127b816114ce565b9150602083013561122b816114ce565b600081518084526112a381602086016020860161145b565b601f01601f19169290920160200192915050565b600082516112c981846020870161145b565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161130581601785016020880161145b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161133681602884016020880161145b565b01602801949350505050565b6001600160a01b0391909116815260200190565b600060018060a01b03808a168352808916602084015260e0604084015261138060e084018961128b565b8381036060850152611392818961128b565b905083810360808501526113a6818861128b565b95821660a0850152509290921660c0909101525095945050505050565b602081526000610cf9602083018461128b565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115611437576114376114a2565b500190565b6000816000190483118215151615611456576114566114a2565b500290565b60005b8381101561147657818101518382015260200161145e565b83811115611485576000848401525b50505050565b60008161149a5761149a6114a2565b506000190190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461041257600080fdfe608060405234801561001057600080fd5b506134f0806100206000396000f3fe6080604052600436106101885760003560e01c8062fdd58e1461018d57806301ffc9a7146101c057806302fe5305146101f057806306fdde03146102125780630e89341c1461023457806311ec5868146102545780632210023d14610282578063248a9ca3146102a4578063288809c7146102c45780632eb2c2d6146102e45780632f2ff15d1461030457806333df048e1461032457806336568abe146103775780633659cfe6146103975780634e1273f4146103b75780634f1ef286146103e4578063572b6c05146103f75780638e86b6281461041757806391d14854146104375780639470ad85146104575780639a86e8ce14610478578063a217fddf1461049a578063a22cb465146104af578063aea0ffc3146104cf578063b85f8ca9146104ef578063c8274abe1461050f578063d547741f1461054f578063e8a3d4851461056f578063e985e9c514610584578063eb08ab28146105cd578063f242432a14610607578063f4e2efd014610627578063f9715b8f14610647578063fe99049a14610667575b600080fd5b34801561019957600080fd5b506101ad6101a8366004612a3b565b610687565b6040519081526020015b60405180910390f35b3480156101cc57600080fd5b506101e06101db366004612c1e565b610720565b60405190151581526020016101b7565b3480156101fc57600080fd5b5061021061020b366004612c56565b610740565b005b34801561021e57600080fd5b50610227610792565b6040516101b79190612f8a565b34801561024057600080fd5b5061022761024f366004612be2565b610821565b34801561026057600080fd5b5061013054610275906001600160a01b031681565b6040516101b79190612e9b565b34801561028e57600080fd5b506101ad60008051602061344883398151915281565b3480156102b057600080fd5b506101ad6102bf366004612be2565b6108b5565b3480156102d057600080fd5b506101ad6102df366004612d3b565b6108ca565b3480156102f057600080fd5b506102106102ff36600461279f565b6108de565b34801561031057600080fd5b5061021061031f366004612bfa565b610bc5565b34801561033057600080fd5b50610339610bee565b604080516001600160a01b039788168152602081019690965285019390935293166060830152608082019290925260a081019190915260c0016101b7565b34801561038357600080fd5b50610210610392366004612bfa565b610c98565b3480156103a357600080fd5b506102106103b236600461274b565b610d26565b3480156103c357600080fd5b506103d76103d2366004612b20565b610d4a565b6040516101b79190612f52565b6102106103f23660046129ee565b610eab565b34801561040357600080fd5b506101e061041236600461274b565b610ec0565b34801561042357600080fd5b50610210610432366004612848565b610eda565b34801561044357600080fd5b506101e0610452366004612bfa565b610fe3565b34801561046357600080fd5b5061012f54610275906001600160a01b031681565b34801561048457600080fd5b506101ad60008051602061346883398151915281565b3480156104a657600080fd5b506101ad600081565b3480156104bb57600080fd5b506102106104ca3660046129bd565b61100e565b3480156104db57600080fd5b506102106104ea366004612a66565b611122565b3480156104fb57600080fd5b5061021061050a366004612c90565b611231565b34801561051b57600080fd5b5061052f61052a36600461274b565b6112ca565b6040805194855260208501939093529183015260608201526080016101b7565b34801561055b57600080fd5b5061021061056a366004612bfa565b61137c565b34801561057b57600080fd5b5061022761139b565b34801561059057600080fd5b506101e061059f366004612767565b6001600160a01b03918216600090815260ca6020908152604080832093909416825291909152205460ff1690565b3480156105d957600080fd5b50610130546105f290600160a01b900463ffffffff1681565b60405163ffffffff90911681526020016101b7565b34801561061357600080fd5b50610210610622366004612957565b61142e565b34801561063357600080fd5b506101ad610642366004612d5f565b6115a2565b34801561065357600080fd5b50610210610662366004612c90565b6115f6565b34801561067357600080fd5b50610210610682366004612912565b61162b565b60006001600160a01b0383166106f85760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b50600090815260c9602090815260408083206001600160a01b03949094168352929052205490565b600061072b826116ad565b8061073a575061073a826116fd565b92915050565b61074d6000610452611722565b6107865760405162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b60448201526064016106ef565b61078f81611731565b50565b61012d80546107a090613243565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90613243565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b505050505081565b606060cb805461083090613243565b80601f016020809104026020016040519081016040528092919081815260200182805461085c90613243565b80156108a95780601f1061087e576101008083540402835291602001916108a9565b820191906000526020600020905b81548152906001019060200180831161088c57829003601f168201915b50505050509050919050565b600090815260fb602052604090206001015490565b60401b63ffffffff60401b163060601b1790565b81518351146109405760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016106ef565b6001600160a01b0384166109665760405162461bcd60e51b81526004016106ef90613054565b61096e611722565b6001600160a01b0316856001600160a01b0316148061099457506109948561059f611722565b6109fb5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016106ef565b6000610a05611722565b905060005b8451811015610b57576000858281518110610a3557634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610a6157634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815260c9835260408082206001600160a01b038e168352909352919091205490915081811015610ab25760405162461bcd60e51b81526004016106ef906130e7565b610abc82826131e9565b60c9600085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160c9600085815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b3c919061318a565b9250508190555050505080610b50906132aa565b9050610a0a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ba7929190612f65565b60405180910390a4610bbd818787878787611744565b505050505050565b610bce826108b5565b610bdf81610bda611722565b6118af565b610be98383611913565b505050565b61012f54600090819081908190819081906001600160a01b031663bb3bafd6610c1760016108ca565b6040518263ffffffff1660e01b8152600401610c3591815260200190565b60c06040518083038186803b158015610c4d57600080fd5b505afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190612ac1565b949b939a50919850965094509092509050565b610ca0611722565b6001600160a01b0316816001600160a01b031614610d185760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106ef565b610d22828261199a565b5050565b610d2f81611a1f565b61078f81604051806020016040528060008152506000611a63565b60608151835114610daf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016106ef565b600083516001600160401b03811115610dd857634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610e01578160200160208202803683370190505b50905060005b8451811015610ea357610e68858281518110610e3357634e487b7160e01b600052603260045260246000fd5b6020026020010151858381518110610e5b57634e487b7160e01b600052603260045260246000fd5b6020026020010151610687565b828281518110610e8857634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e9c816132aa565b9050610e07565b509392505050565b610eb482611a1f565b610d2282826001611a63565b600061073a60008051602061346883398151915283610fe3565b600054610100900460ff1680610ef3575060005460ff16155b610f0f5760405162461bcd60e51b81526004016106ef90613099565b600054610100900460ff16158015610f31576000805461ffff19166101011790555b610f39611bde565b8451610f4857610f4885611731565b610f53600089611c09565b610f6b60008051602061344883398151915288611c09565b8551610f7f9061012d9060208901906125c0565b508351610f949061012e9060208701906125c0565b5061012f80546001600160a01b038086166001600160a01b0319928316179092556101308054928516929091169190911790558015610fd9576000805461ff00191690555b5050505050505050565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b816001600160a01b0316611020611722565b6001600160a01b031614156110895760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016106ef565b8060ca6000611096611722565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556110da611722565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611116911515815260200190565b60405180910390a35050565b61113c600080516020613448833981519152610452611722565b6111585760405162461bcd60e51b81526004016106ef9061302e565b60015b6101305463ffffffff600160a01b9091048116908216116112285761012f546001600160a01b031663ad09608a611191836108ca565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b03808b166024830152604482018a9052606482018990528716608482015260a4810186905260c4810185905260e401600060405180830381600087803b1580156111fd57600080fd5b505af1158015611211573d6000803e3d6000fd5b505050508080611220906132c5565b91505061115b565b50505050505050565b61124b600080516020613448833981519152610452611722565b6112675760405162461bcd60e51b81526004016106ef9061302e565b6101305460405163b85f8ca960e01b81526001600160a01b039091169063b85f8ca99061129c90869086908690600401613131565b600060405180830381600087803b1580156112b657600080fd5b505af1158015611228573d6000803e3d6000fd5b61012f546000908190819081906001600160a01b031663e24b0a2b6112ef60016108ca565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b038816602482015260440160806040518083038186803b15801561133557600080fd5b505afa158015611349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136d9190612d06565b93509350935093509193509193565b611385826108b5565b61139181610bda611722565b610be9838361199a565b606061012e80546113ab90613243565b80601f01602080910402602001604051908101604052809291908181526020018280546113d790613243565b80156114245780601f106113f957610100808354040283529160200191611424565b820191906000526020600020905b81548152906001019060200180831161140757829003601f168201915b5050505050905090565b6001600160a01b0384166114545760405162461bcd60e51b81526004016106ef90613054565b61145c611722565b6001600160a01b0316856001600160a01b0316148061148257506114828561059f611722565b61149e5760405162461bcd60e51b81526004016106ef90612fe5565b60006114a8611722565b90506114c98187876114b988611c13565b6114c288611c13565b5050505050565b600084815260c9602090815260408083206001600160a01b038a1684529091529020548381101561150c5760405162461bcd60e51b81526004016106ef906130e7565b61151684826131e9565b600086815260c9602090815260408083206001600160a01b038c8116855292528083209390935588168152908120805486929061155490849061318a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616916000805160206133e1833981519152910160405180910390a4611228828888888888611c6c565b60006115be600080516020613448833981519152610452611722565b6115da5760405162461bcd60e51b81526004016106ef9061302e565b6115ef6102df6115e8611722565b8585611d36565b9392505050565b6101305460405163f9715b8f60e01b81526001600160a01b039091169063f9715b8f9061129c90869086908690600401613131565b6001600160a01b0383166116515760405162461bcd60e51b81526004016106ef90613054565b611659611722565b6001600160a01b0316846001600160a01b0316148061167f575061167f8461059f611722565b61169b5760405162461bcd60e51b81526004016106ef90612fe5565b6116a784848484611dbf565b50505050565b60006001600160e01b03198216636cdb3d1360e11b14806116de57506001600160e01b031982166303a24d0760e21b145b8061073a57506301ffc9a760e01b6001600160e01b031983161461073a565b60006001600160e01b03198216637965db0b60e01b148061073a575061073a826116ad565b600061172c611eb2565b905090565b8051610d229060cb9060208401906125c0565b6001600160a01b0384163b15610bbd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906117889089908990889088908890600401612eaf565b602060405180830381600087803b1580156117a257600080fd5b505af19250505080156117d2575060408051601f3d908101601f191682019092526117cf91810190612c3a565b60015b61187f576117de613315565b806308c379a0141561181857506117f361332c565b806117fe575061181a565b8060405162461bcd60e51b81526004016106ef9190612f8a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016106ef565b6001600160e01b0319811663bc197c8160e01b146112285760405162461bcd60e51b81526004016106ef90612f9d565b6118b98282610fe3565b610d22576118d1816001600160a01b03166014611ed7565b6118dc836020611ed7565b6040516020016118ed929190612e2c565b60408051601f198184030181529082905262461bcd60e51b82526106ef91600401612f8a565b61191d8282610fe3565b610d2257600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611956611722565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6119a48282610fe3565b15610d2257600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff191690556119db611722565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b611a2a600033610fe3565b61078f5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9020b236b4b760b11b60448201526064016106ef565b6000611a6d6120b8565b9050611a78846120d4565b600083511180611a855750815b15611a9657611a948484612167565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166114c257805460ff19166001178155604051611b11908690611ae2908590602401612e9b565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052612167565b50805460ff19168155611b226120b8565b6001600160a01b0316826001600160a01b031614611b9a5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016106ef565b611ba3856120d4565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25050505050565b611bff60405180606001604052806033815260200161348860339139612252565b611c076122d7565b565b610d228282611913565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611c5b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610bbd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611cb09089908990889088908890600401612f0d565b602060405180830381600087803b158015611cca57600080fd5b505af1925050508015611cfa575060408051601f3d908101601f19168201909252611cf791810190612c3a565b60015b611d06576117de613315565b6001600160e01b0319811663f23a6e6160e01b146112285760405162461bcd60e51b81526004016106ef90612f9d565b61013054600090611d71908590611d5b90600160a01b900463ffffffff1660016131a2565b63ffffffff16856001600160401b0316856122df565b61013054611d8d90600160a01b900463ffffffff1660016131a2565b610130805463ffffffff60a01b1916600160a01b63ffffffff9384168102919091179182905590041690509392505050565b600082815260c9602090815260408083206001600160a01b038816845290915290205481811015611e025760405162461bcd60e51b81526004016106ef906130e7565b611e0c82826131e9565b600084815260c9602090815260408083206001600160a01b038a81168552925280832093909355861681529081208054849290611e4a90849061318a565b9091555060009050611e5a611722565b9050846001600160a01b0316866001600160a01b0316826001600160a01b03166000805160206133e18339815191528787604051611ea2929190918252602082015260400190565b60405180910390a4505050505050565b6000611ebd33610ec0565b15611ecf575060131936013560601c90565b503390565b90565b60606000611ee68360026131ca565b611ef190600261318a565b6001600160401b03811115611f1657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611f40576020820181803683370190505b509050600360fc1b81600081518110611f6957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611fa657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611fca8460026131ca565b611fd590600161318a565b90505b6001811115612069576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061201757634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061203b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936120628161322c565b9050611fd8565b5083156115ef5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106ef565b600080516020613401833981519152546001600160a01b031690565b803b6121385760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106ef565b60008051602061340183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6121c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106ef565b600080846001600160a01b0316846040516121e19190612e10565b600060405180830381855af49150503d806000811461221c576040519150601f19603f3d011682016040523d82523d6000602084013e612221565b606091505b50915091506122498282604051806060016040528060278152602001613421602791396123db565b95945050505050565b600054610100900460ff168061226b575060005460ff16155b6122875760405162461bcd60e51b81526004016106ef90613099565b600054610100900460ff161580156122a9576000805461ffff19166101011790555b6122b1612414565b6122b9612414565b6122c28261247f565b8015610d22576000805461ff00191690555050565b611c076124df565b6001600160a01b03841661233f5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016106ef565b6000612349611722565b905061235b816000876114b988611c13565b600084815260c9602090815260408083206001600160a01b03891684529091528120805485929061238d90849061318a565b909155505060408051858152602081018590526001600160a01b0380881692600092918516916000805160206133e1833981519152910160405180910390a46114c281600087878787611c6c565b606083156123ea5750816115ef565b8251156123fa5782518084602001fd5b8160405162461bcd60e51b81526004016106ef9190612f8a565b600054610100900460ff168061242d575060005460ff16155b6124495760405162461bcd60e51b81526004016106ef90613099565b600054610100900460ff1615801561246b576000805461ffff19166101011790555b801561078f576000805461ff001916905550565b600054610100900460ff1680612498575060005460ff16155b6124b45760405162461bcd60e51b81526004016106ef90613099565b600054610100900460ff161580156124d6576000805461ffff19166101011790555b6122c282611731565b6124e76124fa565b6124ef612561565b611c07600033611c09565b600054610100900460ff1680612513575060005460ff16155b61252f5760405162461bcd60e51b81526004016106ef90613099565b600054610100900460ff16158015612551576000805461ffff19166101011790555b612559612414565b61246b612414565b600054610100900460ff168061257a575060005460ff16155b6125965760405162461bcd60e51b81526004016106ef90613099565b600054610100900460ff161580156125b8576000805461ffff19166101011790555b612551612414565b8280546125cc90613243565b90600052602060002090601f0160209004810192826125ee5760008555612634565b82601f1061260757805160ff1916838001178555612634565b82800160010185558215612634579182015b82811115612634578251825591602001919060010190612619565b50612640929150612644565b5090565b5b808211156126405760008155600101612645565b8035612664816133b5565b919050565b600082601f830112612679578081fd5b8135602061268682613167565b604051612693828261327e565b8381528281019150858301600585901b870184018810156126b2578586fd5b855b858110156126d0578135845292840192908401906001016126b4565b5090979650505050505050565b600082601f8301126126ed578081fd5b81356001600160401b03811115612706576127066132ff565b60405161271d601f8301601f19166020018261327e565b818152846020838601011115612731578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561275c578081fd5b81356115ef816133b5565b60008060408385031215612779578081fd5b8235612784816133b5565b91506020830135612794816133b5565b809150509250929050565b600080600080600060a086880312156127b6578081fd5b85356127c1816133b5565b945060208601356127d1816133b5565b935060408601356001600160401b03808211156127ec578283fd5b6127f889838a01612669565b9450606088013591508082111561280d578283fd5b61281989838a01612669565b9350608088013591508082111561282e578283fd5b5061283b888289016126dd565b9150509295509295909350565b600080600080600080600060e0888a031215612862578182fd5b873561286d816133b5565b9650602088013561287d816133b5565b955060408801356001600160401b0380821115612898578384fd5b6128a48b838c016126dd565b965060608a01359150808211156128b9578384fd5b6128c58b838c016126dd565b955060808a01359150808211156128da578384fd5b506128e78a828b016126dd565b9350506128f660a08901612659565b915061290460c08901612659565b905092959891949750929550565b60008060008060808587031215612927578182fd5b8435612932816133b5565b93506020850135612942816133b5565b93969395505050506040820135916060013590565b600080600080600060a0868803121561296e578283fd5b8535612979816133b5565b94506020860135612989816133b5565b9350604086013592506060860135915060808601356001600160401b038111156129b1578182fd5b61283b888289016126dd565b600080604083850312156129cf578182fd5b82356129da816133b5565b915060208301358015158114612794578182fd5b60008060408385031215612a00578182fd5b8235612a0b816133b5565b915060208301356001600160401b03811115612a25578182fd5b612a31858286016126dd565b9150509250929050565b60008060408385031215612a4d578182fd5b8235612a58816133b5565b946020939093013593505050565b60008060008060008060c08789031215612a7e578384fd5b8635612a89816133b5565b955060208701359450604087013593506060870135612aa7816133b5565b9598949750929560808101359460a0909101359350915050565b60008060008060008060c08789031215612ad9578384fd5b8651612ae4816133b5565b8096505060208701519450604087015193506060870151612b04816133b5565b809350506080870151915060a087015190509295509295509295565b60008060408385031215612b32578182fd5b82356001600160401b0380821115612b48578384fd5b818501915085601f830112612b5b578384fd5b81356020612b6882613167565b604051612b75828261327e565b8381528281019150858301600585901b870184018b1015612b94578889fd5b8896505b84871015612bbf578035612bab816133b5565b835260019690960195918301918301612b98565b5096505086013592505080821115612bd5578283fd5b50612a3185828601612669565b600060208284031215612bf3578081fd5b5035919050565b60008060408385031215612c0c578182fd5b823591506020830135612794816133b5565b600060208284031215612c2f578081fd5b81356115ef816133ca565b600060208284031215612c4b578081fd5b81516115ef816133ca565b600060208284031215612c67578081fd5b81356001600160401b03811115612c7c578182fd5b612c88848285016126dd565b949350505050565b600080600060408486031215612ca4578081fd5b8335925060208401356001600160401b0380821115612cc1578283fd5b818601915086601f830112612cd4578283fd5b813581811115612ce2578384fd5b876020828501011115612cf3578384fd5b6020830194508093505050509250925092565b60008060008060808587031215612d1b578182fd5b505082516020840151604085015160609095015191969095509092509050565b600060208284031215612d4c578081fd5b813563ffffffff811681146115ef578182fd5b60008060408385031215612d71578182fd5b82356001600160401b038082168214612d88578384fd5b90925060208401359080821115612d9d578283fd5b50612a31858286016126dd565b6000815180845260208085019450808401835b83811015612dd957815187529582019590820190600101612dbd565b509495945050505050565b60008151808452612dfc816020860160208601613200565b601f01601f19169290920160200192915050565b60008251612e22818460208701613200565b9190910192915050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351612e5e816017850160208801613200565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612e8f816028840160208801613200565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a060408201819052600090612edb90830186612daa565b8281036060840152612eed8186612daa565b90508281036080840152612f018185612de4565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612f4790830184612de4565b979650505050505050565b6020815260006115ef6020830184612daa565b604081526000612f786040830185612daa565b82810360208401526122498185612daa565b6020815260006115ef6020830184612de4565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b6020808252600c908201526b37b7363c9036b0b730b3b2b960a11b604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60006001600160401b03821115613180576131806132ff565b5060051b60200190565b6000821982111561319d5761319d6132e9565b500190565b600063ffffffff8083168185168083038211156131c1576131c16132e9565b01949350505050565b60008160001904831182151516156131e4576131e46132e9565b500290565b6000828210156131fb576131fb6132e9565b500390565b60005b8381101561321b578181015183820152602001613203565b838111156116a75750506000910152565b60008161323b5761323b6132e9565b506000190190565b600181811c9082168061325757607f821691505b6020821081141561327857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b03811182821017156132a3576132a36132ff565b6040525050565b60006000198214156132be576132be6132e9565b5060010190565b600063ffffffff808316818114156132df576132df6132e9565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611ed457600481823e5160e01c90565b600060443d101561333a5790565b6040516003193d81016004833e81513d6001600160401b03808311602484018310171561336957505050505090565b82850191508151818111156133815750505050505090565b843d870101602082850101111561339b5750505050505090565b6133aa6020828601018761327e565b509095945050505050565b6001600160a01b038116811461078f57600080fd5b6001600160e01b03198116811461078f57600080fdfec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564592c958fd52390f51665f668ae132c07938e885cabed2dc56aba7c2b264880953d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d868747470733a2f2f6170692e66726565706f72742e636572652e6e6574776f726b2f657263313135352f7b69647d2e6a736f6ea2646970667358221220983ed12c399b0d52fbd5c55ca168437c518a43db6d09d5445cbcca3f7474e1a164736f6c63430008040033e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65643d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220332c074fde109c9b09b617ad850f1cec9bb509eb0a143ca3114f15fe79090e5d64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12731:51",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:51",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "88:557:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "98:28:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "116:2:51",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "120:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:10:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "124:1:51",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:18:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "102:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "153:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "155:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "155:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "155:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "141:6:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "149:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "138:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "138:14:51"
                  },
                  "nodeType": "YulIf",
                  "src": "135:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:17:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "198:2:51",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "194:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "194:7:51"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "188:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "210:23:51",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "230:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "224:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:9:51"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "214:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "242:73:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "264:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:6:51"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "296:2:51",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "284:3:51"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "284:15:51"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "301:2:51"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "280:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "280:24:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "306:2:51",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "276:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "276:33:51"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "311:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "272:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "272:42:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "260:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:55:51"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "246:10:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "374:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "376:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "376:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "376:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "333:10:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "345:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "330:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "353:10:51"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "365:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "350:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "350:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "327:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "327:46:51"
                  },
                  "nodeType": "YulIf",
                  "src": "324:2:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:2:51",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "416:10:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "405:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "405:22:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "405:22:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "436:15:51",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "445:6:51"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "436:5:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "467:6:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "475:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "460:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "460:22:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "460:22:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "520:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "532:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "522:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "522:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "522:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "501:3:51"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "506:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:16:51"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "515:3:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "494:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:25:51"
                  },
                  "nodeType": "YulIf",
                  "src": "491:2:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "562:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "558:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:17:51"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "577:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "582:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "545:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "545:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "545:44:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "613:6:51"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "621:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "609:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "609:19:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "630:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "605:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "605:30:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "637:1:51",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "598:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:41:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "598:41:51"
                }
              ]
            },
            "name": "abi_decode_available_length_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "57:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "62:6:51",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "70:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "78:5:51",
                "type": ""
              }
            ],
            "src": "14:631:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "703:176:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "752:24:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "761:5:51"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "768:5:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "754:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "754:20:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "754:20:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "731:6:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "739:4:51",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "727:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "727:17:51"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "746:3:51"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "723:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:27:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:35:51"
                  },
                  "nodeType": "YulIf",
                  "src": "713:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "785:88:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "840:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "860:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "847:12:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "847:20:51"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "869:3:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "794:33:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "794:79:51"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "785:5:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "677:6:51",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "685:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "693:5:51",
                "type": ""
              }
            ],
            "src": "650:229:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "954:187:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1000:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1009:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1017:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1002:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1002:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1002:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "975:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "984:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "971:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "996:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "967:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "967:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "964:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1035:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1061:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1048:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1048:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1039:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1105:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1080:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1080:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1120:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1130:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1120:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "920:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "931:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "943:6:51",
                "type": ""
              }
            ],
            "src": "884:257:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1242:518:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1288:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1297:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1305:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1290:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1290:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1290:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1263:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1272:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1259:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1259:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1284:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1255:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1255:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1252:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1323:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1349:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1336:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1336:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1327:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1393:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1368:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1368:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1418:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1432:46:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1463:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1474:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1459:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1446:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1436:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1530:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1538:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1493:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1509:2:51",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1513:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1505:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1505:10:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1517:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1501:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1490:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1490:30:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1487:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1556:32:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1570:9:51"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1581:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1566:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1566:22:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1560:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1636:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1645:6:51"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1653:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1638:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1638:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1638:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1615:2:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1619:4:51",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1611:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1611:13:51"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1626:7:51"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1607:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1607:27:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1600:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1600:35:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1597:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1671:83:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1719:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1723:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1715:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1715:11:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1741:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1728:12:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1728:16:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1746:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "1681:33:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1681:73:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1200:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1211:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1231:6:51",
                "type": ""
              }
            ],
            "src": "1146:614:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1916:768:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1963:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1972:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1980:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1965:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1965:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1965:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1937:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1946:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1933:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1933:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1958:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1929:33:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1926:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1998:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2024:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2011:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2002:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2068:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2043:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2043:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2043:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2083:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2093:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2083:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2107:46:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2138:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2149:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2134:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2134:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2121:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2121:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2111:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2162:28:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2180:2:51",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2184:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2176:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2176:10:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2188:1:51",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2172:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2172:18:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2166:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2217:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2226:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2234:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2219:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2219:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2219:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2205:6:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2213:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2202:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:14:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2199:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2252:60:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2284:9:51"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2295:6:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2280:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2280:22:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2304:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2262:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:50:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2252:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2321:48:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2354:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2365:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2350:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2350:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2337:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2337:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2325:8:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2398:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2407:6:51"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2415:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2400:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2400:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2400:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2384:8:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2394:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2381:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2381:16:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2378:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2433:62:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2465:9:51"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2476:8:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2461:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2461:24:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2487:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2443:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:52:51"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2433:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2504:48:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2537:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2548:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2533:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2533:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2520:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2520:32:51"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "2508:8:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2581:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2590:6:51"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2598:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2583:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2583:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2583:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "2567:8:51"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2577:2:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2564:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:16:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2561:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2616:62:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2648:9:51"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "2659:8:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2644:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:24:51"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2670:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2626:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:52:51"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2616:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1858:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1869:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1881:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1889:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1897:6:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1905:6:51",
                "type": ""
              }
            ],
            "src": "1765:919:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2759:120:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2805:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2814:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2822:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2807:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2807:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2807:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2780:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2789:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2776:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2801:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2772:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2772:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2769:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2840:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2863:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2850:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2850:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2840:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2725:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2736:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2748:6:51",
                "type": ""
              }
            ],
            "src": "2689:190:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2971:238:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3017:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3026:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3034:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3019:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3019:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3019:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2992:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3001:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2988:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2988:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3013:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2984:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2984:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2981:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3052:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3075:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3062:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3062:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3052:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3094:45:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3124:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3135:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3120:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3120:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3107:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:32:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3098:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3173:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3148:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3148:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3148:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3188:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3198:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3188:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2929:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2940:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2952:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2960:6:51",
                "type": ""
              }
            ],
            "src": "2884:325:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:237:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3329:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3338:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3346:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3331:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3331:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3331:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3304:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3313:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3300:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3300:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3325:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3296:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3296:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3293:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3364:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3390:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3377:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3368:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3464:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3473:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3481:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3466:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3466:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3466:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3422:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3433:5:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3444:3:51",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3449:10:51",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3440:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3440:20:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3429:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3429:32:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3419:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3419:43:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3412:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3412:51:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3409:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3499:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3509:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3499:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3249:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3260:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3272:6:51",
                "type": ""
              }
            ],
            "src": "3214:306:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3651:311:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3697:26:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3706:6:51"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3714:6:51"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3699:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3699:22:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3699:22:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3672:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3681:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3668:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3668:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3693:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3664:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3664:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3661:2:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3732:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3758:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3745:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3736:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3802:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3777:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3777:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3777:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3817:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3827:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3817:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3841:47:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3873:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3884:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3869:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3869:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3856:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3856:32:51"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3845:7:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3922:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3897:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3897:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3897:33:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3939:17:51",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3949:7:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3939:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$4449t_contract$_NFTAttachment_$4829",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3609:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3620:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3632:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3640:6:51",
                "type": ""
              }
            ],
            "src": "3525:437:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4017:208:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4027:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4047:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4041:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:12:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4031:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4069:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4074:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4062:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4062:19:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4062:19:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4116:5:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4123:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4112:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4112:16:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4134:3:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4139:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4130:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4130:14:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4146:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4090:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4090:63:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4090:63:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4162:57:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4177:3:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4190:6:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4198:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4186:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4186:15:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4207:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4203:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4203:7:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4182:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4182:29:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4173:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4173:39:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4214:4:51",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4169:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4169:50:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4162:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3994:5:51",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4001:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4009:3:51",
                "type": ""
              }
            ],
            "src": "3967:258:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4367:137:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4377:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4397:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4391:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4381:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4439:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4447:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4435:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4435:17:51"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4454:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4459:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4413:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4413:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4413:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4475:23:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4486:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4491:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4482:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4482:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4475:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4343:3:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4348:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4359:3:51",
                "type": ""
              }
            ],
            "src": "4230:274:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4648:137:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4658:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4678:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4672:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4672:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4662:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4720:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4728:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4716:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4716:17:51"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4735:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4740:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4694:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4694:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4694:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4756:23:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4767:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4772:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4763:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4763:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4756:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4624:3:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4629:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4640:3:51",
                "type": ""
              }
            ],
            "src": "4509:276:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5179:397:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5196:3:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5201:25:51",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5189:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:38:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5189:38:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5236:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5256:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5250:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5250:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5240:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5298:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5306:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5294:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5294:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5317:3:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5322:2:51",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5313:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5313:12:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5327:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5272:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5272:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5272:62:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5343:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5357:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5362:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5353:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5353:16:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5347:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5389:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5393:2:51",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5385:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5385:11:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5398:19:51",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5378:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5378:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5378:40:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5427:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5449:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5443:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5443:13:51"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "5431:8:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5491:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5499:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5487:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5487:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5510:2:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5514:2:51",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5506:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5506:11:51"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "5519:8:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5465:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5465:63:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5465:63:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5537:33:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5552:2:51"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "5556:8:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5548:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5548:17:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5567:2:51",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5544:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5544:26:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5537:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5147:3:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5152:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5160:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5171:3:51",
                "type": ""
              }
            ],
            "src": "4790:786:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5682:102:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5692:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5704:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5715:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5700:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5700:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5692:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5734:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5749:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5765:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5770:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5761:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5761:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5774:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5757:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5757:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5745:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5745:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5727:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5727:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5727:51:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5651:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5662:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5673:4:51",
                "type": ""
              }
            ],
            "src": "5581:203:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6157:580:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6167:29:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6185:3:51",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6190:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6181:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6181:11:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6194:1:51",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6177:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6177:19:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6171:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6212:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6227:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6235:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6223:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6223:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6205:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6205:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6205:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6259:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6270:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6255:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6255:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6279:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6287:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6275:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6275:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6248:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6248:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6248:43:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6311:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6322:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6307:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6307:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6327:3:51",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6300:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6300:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6300:31:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6340:60:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6372:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6384:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6395:3:51",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6380:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6380:19:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6354:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6354:46:51"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6344:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6420:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6431:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6416:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6416:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6440:6:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6448:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6436:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6436:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6409:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6409:50:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6409:50:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6468:47:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6500:6:51"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6508:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6482:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6482:33:51"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "6472:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6535:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6546:3:51",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6531:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6531:19:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "6556:6:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6564:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6552:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6552:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6524:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6524:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6524:51:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6584:41:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6610:6:51"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "6618:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6592:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6592:33:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6584:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6645:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6656:3:51",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6641:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6641:19:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "6666:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6674:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6662:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6662:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6634:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6634:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6634:44:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6698:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6709:3:51",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6694:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6694:19:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "6719:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6727:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6715:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6715:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6687:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6687:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6687:44:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_contract$_Freeport_$4449_t_contract$_NFTAttachment_$4829__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6078:9:51",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "6089:6:51",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6097:6:51",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6105:6:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6113:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6121:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6129:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6137:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6148:4:51",
                "type": ""
              }
            ],
            "src": "5789:948:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6837:92:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6859:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6870:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6855:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6855:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6847:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6889:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6914:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6907:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6907:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6900:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6900:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6882:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6882:41:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6882:41:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6806:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6817:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6828:4:51",
                "type": ""
              }
            ],
            "src": "6742:187:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7035:76:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7045:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7057:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7068:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7053:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7053:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7045:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7087:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7098:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7080:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7080:25:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7004:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7015:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7026:4:51",
                "type": ""
              }
            ],
            "src": "6934:177:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7234:102:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7244:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7256:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7267:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7252:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7252:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7244:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7286:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7301:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7317:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7322:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7313:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7313:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7326:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7309:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7309:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7297:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7297:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7279:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7279:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7279:51:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$4449__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7203:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7214:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7225:4:51",
                "type": ""
              }
            ],
            "src": "7116:220:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7464:102:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7474:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7486:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7497:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7482:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7474:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7516:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7531:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7547:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7552:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7543:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7543:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7556:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7539:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7539:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7527:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7527:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7509:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7509:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7509:51:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_NFTAttachment_$4829__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7433:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7444:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7455:4:51",
                "type": ""
              }
            ],
            "src": "7341:225:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7692:99:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7709:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7720:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7702:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7702:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7702:21:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7732:53:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7758:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7770:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7781:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7766:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7766:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "7740:17:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7740:45:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7732:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7661:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7672:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7683:4:51",
                "type": ""
              }
            ],
            "src": "7571:220:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7970:182:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7987:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7998:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7980:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7980:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7980:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8021:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8032:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8017:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8017:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8037:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8010:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8010:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8010:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8060:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8071:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8056:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8056:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8076:34:51",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8049:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8049:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8049:62:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8120:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8132:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8143:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8128:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8120:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7947:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7961:4:51",
                "type": ""
              }
            ],
            "src": "7796:356:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8331:237:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8348:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8359:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8341:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8341:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8341:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8382:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8393:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8378:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8378:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8398:2:51",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8371:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8371:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8371:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8421:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8432:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8417:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8417:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8437:34:51",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8410:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8410:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8410:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8492:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8503:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8488:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8488:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8508:17:51",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8481:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8481:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8481:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8535:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8547:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8558:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8543:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8543:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8535:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8308:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8322:4:51",
                "type": ""
              }
            ],
            "src": "8157:411:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8747:173:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8764:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8775:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8757:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8757:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8757:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8798:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8809:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8794:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8794:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8814:2:51",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8787:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8787:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8787:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8837:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8848:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8833:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8833:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8853:25:51",
                        "type": "",
                        "value": "only collection creator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8826:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8826:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8826:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8888:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8900:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8911:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8896:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8896:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8888:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8724:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8738:4:51",
                "type": ""
              }
            ],
            "src": "8573:347:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9099:180:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9116:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9127:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9109:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9109:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9109:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9150:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9161:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9146:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9146:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9166:2:51",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9139:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9139:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9139:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9189:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9200:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9185:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9185:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9205:32:51",
                        "type": "",
                        "value": "collection name already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9178:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9178:60:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9178:60:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9247:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9259:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9270:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9255:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9255:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9247:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9076:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9090:4:51",
                "type": ""
              }
            ],
            "src": "8925:354:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9458:236:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9475:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9486:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9468:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9468:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9468:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9509:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9520:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9505:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9505:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9525:2:51",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9498:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9498:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9498:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9548:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9559:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9544:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9544:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9564:34:51",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9537:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9537:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9537:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9619:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9630:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9615:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9615:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9635:16:51",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9608:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9608:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9608:44:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9661:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9673:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9684:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9669:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9669:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9661:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9435:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9449:4:51",
                "type": ""
              }
            ],
            "src": "9284:410:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9873:170:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9890:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9901:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9883:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9883:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9883:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9924:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9935:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9920:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9920:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9940:2:51",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9913:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9913:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9913:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9963:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9974:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9959:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9959:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9979:22:51",
                        "type": "",
                        "value": "zero address creator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9952:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9952:50:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9952:50:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10011:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10023:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10034:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10019:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10019:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10011:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9850:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9864:4:51",
                "type": ""
              }
            ],
            "src": "9699:344:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10222:235:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10239:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10250:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10232:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10232:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10232:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10273:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10284:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10269:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10269:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10289:2:51",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10262:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10262:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10262:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10312:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10323:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10308:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10308:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10328:34:51",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10301:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10301:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10301:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10383:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10394:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10379:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10379:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10399:15:51",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10372:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10372:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10372:43:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10424:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10436:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10447:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10432:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10432:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10424:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10199:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10213:4:51",
                "type": ""
              }
            ],
            "src": "10048:409:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10636:228:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10653:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10664:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10646:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10646:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10646:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10687:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10698:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10683:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10683:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10703:2:51",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10676:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10676:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10676:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10726:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10737:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10722:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10722:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10742:34:51",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10715:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10715:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10715:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10797:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10808:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10793:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10793:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10813:8:51",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10786:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10786:36:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10786:36:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10831:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10843:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10854:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10839:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10839:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10831:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10613:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10627:4:51",
                "type": ""
              }
            ],
            "src": "10462:402:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11043:160:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11060:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11071:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11053:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11053:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11053:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11094:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11105:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11090:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11090:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11110:2:51",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11083:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11083:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11083:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11133:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11144:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11129:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11129:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11149:12:51",
                        "type": "",
                        "value": "Only Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11122:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11122:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11122:40:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11171:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11183:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11194:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11179:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11179:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11171:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11020:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11034:4:51",
                "type": ""
              }
            ],
            "src": "10869:334:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11382:237:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11399:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11410:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11392:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11392:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11392:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11433:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11444:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11429:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11429:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11449:2:51",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11422:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11422:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11422:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11472:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11483:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11468:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11468:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11488:34:51",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11461:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11461:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11461:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11543:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11554:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11539:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11539:18:51"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11559:17:51",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11532:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11532:45:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11532:45:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11586:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11598:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11609:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11594:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11594:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11586:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11359:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11373:4:51",
                "type": ""
              }
            ],
            "src": "11208:411:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11672:80:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11699:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11701:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11701:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11701:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11688:1:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11695:1:51"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11691:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11691:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11685:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11685:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11682:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11730:16:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11741:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11744:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11737:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11737:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11730:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11655:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11658:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11664:3:51",
                "type": ""
              }
            ],
            "src": "11624:128:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11809:116:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11868:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11870:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11870:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11870:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11840:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11833:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11833:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11826:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11826:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11848:1:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11859:1:51",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11855:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11855:6:51"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11863:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11851:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11851:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11845:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11845:21:51"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11822:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11822:45:51"
                  },
                  "nodeType": "YulIf",
                  "src": "11819:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11899:20:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11914:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11917:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11910:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11910:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11899:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11788:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11791:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11797:7:51",
                "type": ""
              }
            ],
            "src": "11757:168:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11983:205:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11993:10:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12002:1:51",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11997:1:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12062:63:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12087:3:51"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12092:1:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12083:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12083:11:51"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12106:3:51"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12111:1:51"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12102:3:51"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12102:11:51"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12096:5:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12096:18:51"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12076:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12076:39:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12076:39:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12023:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12026:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12020:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12020:13:51"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12034:19:51",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12036:15:51",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12045:1:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12048:2:51",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12041:3:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12041:10:51"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12036:1:51"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12016:3:51",
                    "statements": []
                  },
                  "src": "12012:113:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12151:31:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12164:3:51"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12169:6:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12160:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12160:16:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12178:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12153:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12153:27:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12153:27:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12140:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12143:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12137:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12137:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "12134:2:51"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11961:3:51",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11966:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11971:6:51",
                "type": ""
              }
            ],
            "src": "11930:258:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12240:89:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12267:22:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12269:16:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12269:18:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12269:18:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12260:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12253:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12253:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "12250:2:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12298:25:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12309:5:51"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12320:1:51",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12316:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12316:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12305:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12305:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12298:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12222:5:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12232:3:51",
                "type": ""
              }
            ],
            "src": "12193:136:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12366:95:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12383:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12390:3:51",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12395:10:51",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12386:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12386:20:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12376:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12376:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12376:31:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12423:1:51",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12426:4:51",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12416:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12416:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12416:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12447:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12450:4:51",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12440:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12440:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12440:15:51"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12334:127:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12498:95:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12515:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12522:3:51",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12527:10:51",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12518:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12518:20:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12508:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12508:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12508:31:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12555:1:51",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12558:4:51",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12548:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12548:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12548:15:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12579:1:51",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12582:4:51",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12572:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12572:15:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12572:15:51"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "12466:127:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12643:86:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12707:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12716:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12719:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12709:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12709:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12709:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12666:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12677:5:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12692:3:51",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12697:1:51",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12688:3:51"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12688:11:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12701:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12684:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12684:19:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12673:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12673:31:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12663:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12663:42:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12656:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12656:50:51"
                  },
                  "nodeType": "YulIf",
                  "src": "12653:2:51"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12632:5:51",
                "type": ""
              }
            ],
            "src": "12598:131:51"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := sub(shl(64, 1), 1)\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(value1, value1) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value1, value1) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value2, value2) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(value3, value3) }\n        value3 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Freeport_$4449t_contract$_NFTAttachment_$4829(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_contract$_Freeport_$4449_t_contract$_NFTAttachment_$4829__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 224)\n        let tail_1 := abi_encode_string(value2, add(headStart, 224))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$4449__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_NFTAttachment_$4829__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"only collection creator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"collection name already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"zero address creator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c13c296baebb1f79b18541a06c39b3d56ce1654fd26fe72a62e2fb7efe67be9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 51,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "186:2015:29:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "186:2015:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:225:0;;;;;;;;;;-1:-1:-1;4473:225:0;;;;;:::i;:::-;;:::i;:::-;;;6907:14:51;;6900:22;6882:41;;6870:2;6855:18;4473:225:0;;;;;;;;665:34:29;;;;;;;;;;-1:-1:-1;665:34:29;;;;-1:-1:-1;;;;;665:34:29;;;;;;;;;;:::i;5781:121:0:-;;;;;;;;;;-1:-1:-1;5781:121:0;;;;;:::i;:::-;;:::i;:::-;;;7080:25:51;;;7068:2;7053:18;5781:121:0;7035:76:51;6152:145:0;;;;;;;;;;-1:-1:-1;6152:145:0;;;;;:::i;:::-;;:::i;:::-;;7169:214;;;;;;;;;;-1:-1:-1;7169:214:0;;;;;:::i;:::-;;:::i;882:186:4:-;;;;;;;;;;-1:-1:-1;882:186:4;;;;;:::i;:::-;;:::i;1384:815:29:-;;;;;;;;;;-1:-1:-1;1384:815:29;;;;;:::i;:::-;;:::i;237:199::-;;;;;;;;;;-1:-1:-1;237:199:29;;;;;:::i;:::-;;:::i;1074:214:4:-;;;;;;:::i;:::-;;:::i;426:143:43:-;;;;;;;;;;-1:-1:-1;426:143:43;;;;;:::i;:::-;;:::i;4785:137:0:-;;;;;;;;;;-1:-1:-1;4785:137:0;;;;;:::i;:::-;;:::i;589:24:29:-;;;;;;;;;;-1:-1:-1;589:24:29;;;;-1:-1:-1;;;;;589:24:29;;;345:74:43;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;345:74:43;;2794:49:0;;;;;;;;;;-1:-1:-1;2794:49:0;2839:4;2794:49;;996:86:29;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;996:86:29;;6531:147:0;;;;;;;;;;-1:-1:-1;6531:147:0;;;;;:::i;:::-;;:::i;4473:225::-;4558:4;-1:-1:-1;;;;;;4581:58:0;;-1:-1:-1;;;4581:58:0;;:110;;-1:-1:-1;;;;;;;;;;1127:51:15;;;4655:36:0;4574:117;4473:225;-1:-1:-1;;4473:225:0:o;5781:121::-;5847:7;5873:12;;;:6;:12;;;;;:22;;;;5781:121::o;6152:145::-;6235:18;6248:4;6235:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;:::-;4358:10;:30::i;:::-;6265:25:::1;6276:4;6282:7;6265:10;:25::i;:::-;6152:145:::0;;;:::o;7169:214::-;7275:12;:10;:12::i;:::-;-1:-1:-1;;;;;7264:23:0;:7;-1:-1:-1;;;;;7264:23:0;;7256:83;;;;-1:-1:-1;;;7256:83:0;;11410:2:51;7256:83:0;;;11392:21:51;11449:2;11429:18;;;11422:30;11488:34;11468:18;;;11461:62;-1:-1:-1;;;11539:18:51;;;11532:45;11594:19;;7256:83:0;;;;;;;;;7350:26;7362:4;7368:7;7350:11;:26::i;:::-;7169:214;;:::o;882:186:4:-;955:36;973:17;955;:36::i;:::-;1001:60;1025:17;1044:9;;;;;;;;;;;;1055:5;1001:23;:60::i;:::-;882:186;:::o;1384:815:29:-;1512:7;1539:46;-1:-1:-1;;;;;;;;;;;1572:12:29;:10;:12::i;1539:46::-;1531:82;;;;-1:-1:-1;;;1531:82:29;;8775:2:51;1531:82:29;;;8757:21:51;8814:2;8794:18;;;8787:30;-1:-1:-1;;;8833:18:51;;;8826:53;8896:18;;1531:82:29;8747:173:51;1531:82:29;-1:-1:-1;;;;;1631:21:29;;1623:54;;;;-1:-1:-1;;;1623:54:29;;9901:2:51;1623:54:29;;;9883:21:51;9940:2;9920:18;;;9913:30;-1:-1:-1;;;9959:18:51;;;9952:50;10019:18;;1623:54:29;9873:170:51;1623:54:29;1729:1;-1:-1:-1;;;;;1695:36:29;:16;1712:4;1695:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1695:22:29;:36;1687:79;;;;-1:-1:-1;;;1687:79:29;;9127:2:51;1687:79:29;;;9109:21:51;9166:2;9146:18;;;9139:30;9205:32;9185:18;;;9178:60;9255:18;;1687:79:29;9099:180:51;1687:79:29;1777:21;1801:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1900:8:29;;1910:13;;1827:97;;-1:-1:-1;;;1827:97:29;;1777:40;;-1:-1:-1;;;;;;1827:21:29;;;;;;:97;;1857:4;;1864:7;;1873:4;;1879:6;;1887:11;;1900:8;;;;1910:13;;;1827:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1950:17:29;;;1935:33;;;;:14;:33;;;;;:55;;-1:-1:-1;;;;;;1935:55:29;-1:-1:-1;;;;;1935:55:29;;;;;2020:17;:21;;-1:-1:-1;2020:17:29;-1:-1:-1;;2020:21:29;:::i;:::-;2000:17;:41;2052:22;;2085:10;;2052:16;;:22;;2069:4;;2052:22;:::i;:::-;;;;;;;;;;;;;;:44;;-1:-1:-1;;;;;2052:44:29;;;-1:-1:-1;;;;;;2052:44:29;;;;;;2112;;;;;;;;2130:4;;2112:44;:::i;:::-;;;;;;;;2181:10;1384:815;-1:-1:-1;;;;;1384:815:29:o;237:199::-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;336:22:29::1;:20;:22::i;:::-;369:8;:20:::0;;-1:-1:-1;;;;;369:20:29;;::::1;-1:-1:-1::0;;;;;;369:20:29;;::::1;;::::0;;;399:13:::1;:30:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1714:66:3;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;237:199:29;;;:::o;1074:214:4:-;1181:36;1199:17;1181;:36::i;:::-;1227:54;1251:17;1270:4;1276;1227:23;:54::i;426:143:43:-;502:4;525:37;-1:-1:-1;;;;;;;;;;;552:9:43;4785:137:0;4863:4;4886:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;4886:29:0;;;;;;;;;;;;;;;4785:137::o;6531:147::-;6615:18;6628:4;6615:12;:18::i;:::-;4358:30;4369:4;4375:12;:10;:12::i;4358:30::-;6645:26:::1;6657:4;6663:7;6645:11;:26::i;575:371:43:-:0;637:14;667:30;686:10;667:18;:30::i;:::-;663:277;;;-1:-1:-1;;;852:14:43;848:23;835:37;831:2;827:46;575:371;:::o;816:58::-;-1:-1:-1;901:10:11;;575:371:43:o;5203:397:0:-;5282:22;5290:4;5296:7;5282;:22::i;:::-;5278:316;;5411:52;5450:7;-1:-1:-1;;;;;5411:52:0;5460:2;5411:30;:52::i;:::-;5518:49;5557:4;5564:2;5518:30;:49::i;:::-;5334:247;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5334:247:0;;;;;;;;;;-1:-1:-1;;;5320:263:0;;;;;;;:::i;8381:224::-;8455:22;8463:4;8469:7;8455;:22::i;:::-;8450:149;;8493:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8493:29:0;;;;;;;;;:36;;-1:-1:-1;;8493:36:0;8525:4;8493:36;;;8575:12;:10;:12::i;:::-;-1:-1:-1;;;;;8548:40:0;8566:7;-1:-1:-1;;;;;8548:40:0;8560:4;8548:40;;;;;;;;;;8381:224;;:::o;8611:225::-;8685:22;8693:4;8699:7;8685;:22::i;:::-;8681:149;;;8755:5;8723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8723:29:0;;;;;;;;;:37;;-1:-1:-1;;8723:37:0;;;8806:12;:10;:12::i;:::-;-1:-1:-1;;;;;8779:40:0;8797:7;-1:-1:-1;;;;;8779:40:0;8791:4;8779:40;;;;;;;;;;8611:225;;:::o;575:151:48:-;665:39;2839:4:0;693:10:48;665:7;:39::i;:::-;657:62;;;;-1:-1:-1;;;657:62:48;;11071:2:51;657:62:48;;;11053:21:51;11110:2;11090:18;;;11083:30;-1:-1:-1;;;11129:18:51;;;11122:40;11179:18;;657:62:48;11043:160:51;2851:1322:1;2965:25;2993:20;:18;:20::i;:::-;2965:48;;3066:37;3085:17;3066:18;:37::i;:::-;3131:1;3117:4;:11;:15;:28;;;;3136:9;3117:28;3113:105;;;3161:46;3183:17;3202:4;3161:21;:46::i;:::-;;3113:105;844:66;3417:21;;;;3412:755;;3530:28;;-1:-1:-1;;3530:28:1;3554:4;3530:28;;;3646:122;;3572:210;;3611:17;;3646:122;;3733:17;;3646:122;;;:::i;:::-;;;;-1:-1:-1;;3646:122:1;;;;;;;;;;;;;;-1:-1:-1;;;;;3646:122:1;-1:-1:-1;;;3646:122:1;;;3572:21;:210::i;:::-;-1:-1:-1;3796:29:1;;-1:-1:-1;;3796:29:1;;;3912:20;:18;:20::i;:::-;-1:-1:-1;;;;;3891:41:1;:17;-1:-1:-1;;;;;3891:41:1;;3883:101;;;;-1:-1:-1;;;3883:101:1;;8359:2:51;3883:101:1;;;8341:21:51;8398:2;8378:18;;;8371:30;8437:34;8417:18;;;8410:62;-1:-1:-1;;;8488:18:51;;;8481:45;8543:19;;3883:101:1;8331:237:51;3883:101:1;4073:37;4092:17;4073:18;:37::i;:::-;4129:27;;-1:-1:-1;;;;;4129:27:1;;;;;;;;3412:755;2851:1322;;;;;:::o;261:78:43:-;312:20;:18;:20::i;:::-;261:78::o;1542:437:13:-;1617:13;1642:19;1674:10;1678:6;1674:1;:10;:::i;:::-;:14;;1687:1;1674:14;:::i;:::-;-1:-1:-1;;;;;1664:25:13;;;;;-1:-1:-1;;;1664:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:25:13;;1642:47;;-1:-1:-1;;;1699:6:13;1706:1;1699:9;;;;;;-1:-1:-1;;;1699:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1699:15:13;;;;;;;;;-1:-1:-1;;;1724:6:13;1731:1;1724:9;;;;;;-1:-1:-1;;;1724:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1724:15:13;;;;;;;;-1:-1:-1;1754:9:13;1766:10;1770:6;1766:1;:10;:::i;:::-;:14;;1779:1;1766:14;:::i;:::-;1754:26;;1749:128;1786:1;1782;:5;1749:128;;;-1:-1:-1;;;1829:5:13;1837:3;1829:11;1820:21;;;;;-1:-1:-1;;;1820:21:13;;;;;;;;;;;;1808:6;1815:1;1808:9;;;;;;-1:-1:-1;;;1808:9:13;;;;;;;;;;;;:33;-1:-1:-1;;;;;1808:33:13;;;;;;;;-1:-1:-1;1865:1:13;1855:11;;;;;1789:3;;;:::i;:::-;;;1749:128;;;-1:-1:-1;1894:10:13;;1886:55;;;;-1:-1:-1;;;1886:55:13;;7998:2:51;1886:55:13;;;7980:21:51;;;8017:18;;;8010:30;8076:34;8056:18;;;8049:62;8128:18;;1886:55:13;7970:182:51;1886:55:13;1965:6;1542:437;-1:-1:-1;;;1542:437:13:o;1456:151:1:-;-1:-1:-1;;;;;;;;;;;1535:65:1;-1:-1:-1;;;;;1535:65:1;;1456:151::o;1698:281::-;1089:20:10;;1771:106:1;;;;-1:-1:-1;;;1771:106:1;;10250:2:51;1771:106:1;;;10232:21:51;10289:2;10269:18;;;10262:30;10328:34;10308:18;;;10301:62;-1:-1:-1;;;10379:18:51;;;10372:43;10432:19;;1771:106:1;10222:235:51;1771:106:1;-1:-1:-1;;;;;;;;;;;1887:85:1;;-1:-1:-1;;;;;;1887:85:1;-1:-1:-1;;;;;1887:85:1;;;;;;;;;;1698:281::o;7352:437::-;7435:12;1089:20:10;;7459:88:1;;;;-1:-1:-1;;;7459:88:1;;10664:2:51;7459:88:1;;;10646:21:51;10703:2;10683:18;;;10676:30;10742:34;10722:18;;;10715:62;-1:-1:-1;;;10793:18:51;;;10786:36;10839:19;;7459:88:1;10636:228:51;7459:88:1;7618:12;7632:23;7659:6;-1:-1:-1;;;;;7659:19:1;7679:4;7659:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:67;;;;7701:81;7719:7;7728:10;7701:81;;;;;;;;;;;;;;;;;:17;:81::i;:::-;7694:88;7352:437;-1:-1:-1;;;;;7352:437:1:o;404:165:48:-;453:24;:22;:24::i;:::-;487:22;:20;:22::i;:::-;520:42;2839:4:0;551:10:48;520;:42::i;7795:725:1:-;7910:12;7938:7;7934:580;;;-1:-1:-1;7968:10:1;7961:17;;7934:580;8079:17;;:21;8075:429;;8337:10;8331:17;8397:15;8384:10;8380:2;8376:19;8369:44;8286:145;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;650:149:4:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;715:33:4::1;:31;:33::i;:::-;758:34;:32;:34::i;:::-;1718:14:3::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;650:149:4;:::o;2390:173:0:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1594:98;2453:26:0::1;:24;:26::i;7948:110::-:0;8026:25;8037:4;8043:7;8026:10;:25::i;647:71:1:-;1456:13:3;;;;;;;;:30;;-1:-1:-1;1474:12:3;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:3;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:3;;;;;1714:66;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:3;;;647:71:1;:::o;-1:-1:-1:-;;;;;;;;:::o;14:631:51:-;78:5;-1:-1:-1;;;;;138:14:51;;;135:2;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:51;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:2;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:2;;;532:1;529;522:12;491:2;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;88:557;;;;;:::o;650:229::-;693:5;746:3;739:4;731:6;727:17;723:27;713:2;;768:5;761;754:20;713:2;794:79;869:3;860:6;847:20;840:4;832:6;828:17;794:79;:::i;884:257::-;943:6;996:2;984:9;975:7;971:23;967:32;964:2;;;1017:6;1009;1002:22;964:2;1061:9;1048:23;1080:31;1105:5;1080:31;:::i;1146:614::-;1223:6;1231;1284:2;1272:9;1263:7;1259:23;1255:32;1252:2;;;1305:6;1297;1290:22;1252:2;1349:9;1336:23;1368:31;1393:5;1368:31;:::i;:::-;1418:5;-1:-1:-1;1474:2:51;1459:18;;1446:32;-1:-1:-1;;;;;1490:30:51;;1487:2;;;1538:6;1530;1523:22;1487:2;1566:22;;1619:4;1611:13;;1607:27;-1:-1:-1;1597:2:51;;1653:6;1645;1638:22;1597:2;1681:73;1746:7;1741:2;1728:16;1723:2;1719;1715:11;1681:73;:::i;:::-;1671:83;;;1242:518;;;;;:::o;1765:919::-;1881:6;1889;1897;1905;1958:3;1946:9;1937:7;1933:23;1929:33;1926:2;;;1980:6;1972;1965:22;1926:2;2024:9;2011:23;2043:31;2068:5;2043:31;:::i;:::-;2093:5;-1:-1:-1;2149:2:51;2134:18;;2121:32;-1:-1:-1;;;;;2202:14:51;;;2199:2;;;2234:6;2226;2219:22;2199:2;2262:50;2304:7;2295:6;2284:9;2280:22;2262:50;:::i;:::-;2252:60;;2365:2;2354:9;2350:18;2337:32;2321:48;;2394:2;2384:8;2381:16;2378:2;;;2415:6;2407;2400:22;2378:2;2443:52;2487:7;2476:8;2465:9;2461:24;2443:52;:::i;:::-;2433:62;;2548:2;2537:9;2533:18;2520:32;2504:48;;2577:2;2567:8;2564:16;2561:2;;;2598:6;2590;2583:22;2561:2;;2626:52;2670:7;2659:8;2648:9;2644:24;2626:52;:::i;:::-;2616:62;;;1916:768;;;;;;;:::o;2689:190::-;2748:6;2801:2;2789:9;2780:7;2776:23;2772:32;2769:2;;;2822:6;2814;2807:22;2769:2;-1:-1:-1;2850:23:51;;2759:120;-1:-1:-1;2759:120:51:o;2884:325::-;2952:6;2960;3013:2;3001:9;2992:7;2988:23;2984:32;2981:2;;;3034:6;3026;3019:22;2981:2;3075:9;3062:23;3052:33;;3135:2;3124:9;3120:18;3107:32;3148:31;3173:5;3148:31;:::i;:::-;3198:5;3188:15;;;2971:238;;;;;:::o;3214:306::-;3272:6;3325:2;3313:9;3304:7;3300:23;3296:32;3293:2;;;3346:6;3338;3331:22;3293:2;3377:23;;-1:-1:-1;;;;;;3429:32:51;;3419:43;;3409:2;;3481:6;3473;3466:22;3525:437;3632:6;3640;3693:2;3681:9;3672:7;3668:23;3664:32;3661:2;;;3714:6;3706;3699:22;3661:2;3758:9;3745:23;3777:31;3802:5;3777:31;:::i;:::-;3827:5;-1:-1:-1;3884:2:51;3869:18;;3856:32;3897:33;3856:32;3897:33;:::i;3967:258::-;4009:3;4047:5;4041:12;4074:6;4069:3;4062:19;4090:63;4146:6;4139:4;4134:3;4130:14;4123:4;4116:5;4112:16;4090:63;:::i;:::-;4207:2;4186:15;-1:-1:-1;;4182:29:51;4173:39;;;;4214:4;4169:50;;4017:208;-1:-1:-1;;4017:208:51:o;4230:274::-;4359:3;4397:6;4391:13;4413:53;4459:6;4454:3;4447:4;4439:6;4435:17;4413:53;:::i;:::-;4482:16;;;;;4367:137;-1:-1:-1;;4367:137:51:o;4790:786::-;-1:-1:-1;;;5196:3:51;5189:38;5171:3;5256:6;5250:13;5272:62;5327:6;5322:2;5317:3;5313:12;5306:4;5298:6;5294:17;5272:62;:::i;:::-;-1:-1:-1;;;5393:2:51;5353:16;;;5385:11;;;5378:40;5443:13;;5465:63;5443:13;5514:2;5506:11;;5499:4;5487:17;;5465:63;:::i;:::-;5548:17;5567:2;5544:26;;5179:397;-1:-1:-1;;;;5179:397:51:o;5581:203::-;-1:-1:-1;;;;;5745:32:51;;;;5727:51;;5715:2;5700:18;;5682:102::o;5789:948::-;6148:4;6194:1;6190;6185:3;6181:11;6177:19;6235:2;6227:6;6223:15;6212:9;6205:34;6287:2;6279:6;6275:15;6270:2;6259:9;6255:18;6248:43;6327:3;6322:2;6311:9;6307:18;6300:31;6354:46;6395:3;6384:9;6380:19;6372:6;6354:46;:::i;:::-;6448:9;6440:6;6436:22;6431:2;6420:9;6416:18;6409:50;6482:33;6508:6;6500;6482:33;:::i;:::-;6468:47;;6564:9;6556:6;6552:22;6546:3;6535:9;6531:19;6524:51;6592:33;6618:6;6610;6592:33;:::i;:::-;6662:15;;;6656:3;6641:19;;6634:44;-1:-1:-1;6715:15:51;;;;6709:3;6694:19;;;6687:44;-1:-1:-1;6584:41:51;6157:580;-1:-1:-1;;;;;6157:580:51:o;7571:220::-;7720:2;7709:9;7702:21;7683:4;7740:45;7781:2;7770:9;7766:18;7758:6;7740:45;:::i;9284:410::-;9486:2;9468:21;;;9525:2;9505:18;;;9498:30;9564:34;9559:2;9544:18;;9537:62;-1:-1:-1;;;9630:2:51;9615:18;;9608:44;9684:3;9669:19;;9458:236::o;11624:128::-;11664:3;11695:1;11691:6;11688:1;11685:13;11682:2;;;11701:18;;:::i;:::-;-1:-1:-1;11737:9:51;;11672:80::o;11757:168::-;11797:7;11863:1;11859;11855:6;11851:14;11848:1;11845:21;11840:1;11833:9;11826:17;11822:45;11819:2;;;11870:18;;:::i;:::-;-1:-1:-1;11910:9:51;;11809:116::o;11930:258::-;12002:1;12012:113;12026:6;12023:1;12020:13;12012:113;;;12102:11;;;12096:18;12083:11;;;12076:39;12048:2;12041:10;12012:113;;;12143:6;12140:1;12137:13;12134:2;;;12178:1;12169:6;12164:3;12160:16;12153:27;12134:2;;11983:205;;;:::o;12193:136::-;12232:3;12260:5;12250:2;;12269:18;;:::i;:::-;-1:-1:-1;;;12305:18:51;;12240:89::o;12334:127::-;12395:10;12390:3;12386:20;12383:1;12376:31;12426:4;12423:1;12416:15;12450:4;12447:1;12440:15;12466:127;12527:10;12522:3;12518:20;12515:1;12508:31;12558:4;12555:1;12548:15;12582:4;12579:1;12572:15;12598:131;-1:-1:-1;;;;;12673:31:51;;12663:42;;12653:2;;12719:1;12716;12709:12",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./Collection.sol\";\n\n/** This is a contract for creating standalone contracts (collections) for users.\n *\n */\ncontract CollectionFactory is MetaTxContext  {\n    function initialize(Freeport _freeport, NFTAttachment _nftAttachment) public initializer {\n        __MetaTxContext_init();\n\n        freeport = _freeport;\n        nftAttachment = _nftAttachment;\n    }\n\n    // Standalone user collections mapped to its names.\n    mapping(string => address) nameToCollection;\n\n    // The address of Freeport contract.\n    Freeport public freeport;\n    // The address of NFTAttachment contract.\n    NFTAttachment public nftAttachment;\n\n    // Collection id to address.\n    mapping(uint256 => address) private addressProxies;\n    uint256 private collectionCounter;\n\n    /** Collection creator role.\n     *  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT.\n     */\n    bytes32 public constant COLLECTION_CREATOR_ROLE = keccak256(\"COLLECTION_CREATOR_ROLE\");\n\n    /** An event emitted when new collection is created.\n     *\n     * Contains unique name of collection and its address.\n     */\n    event CollectionCreated(string name, address indexed addr);\n\n    /** Deploying a new user collection.\n     *\n     *  Emits a {CollectionCreated} event.\n     */\n    function createCollection(address creator, string memory name, string memory uriTpl, string memory contractURI) public returns (address) {\n        require(hasRole(COLLECTION_CREATOR_ROLE, _msgSender()), \"only collection creator\");\n        require(creator != address(0), \"zero address creator\");\n        require(nameToCollection[name] == address(0), \"collection name already exists\");\n\n        Collection collection = new Collection();\n        collection.initialize(address(this), creator, name, uriTpl, contractURI, freeport, nftAttachment);\n\n        addressProxies[collectionCounter] = address(collection);\n        collectionCounter = collectionCounter + 1;\n\n        nameToCollection[name] = address(collection);\n\n        emit CollectionCreated(name, address(collection));\n        return address(collection);\n    }\n}\n",
  "sourcePath": "/Users/neanvo/WorkFlow/cere/Freeport-Smart-Contracts/contracts/CollectionFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CollectionFactory.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [395],
      "AddressUpgradeable": [1519],
      "BaseNFT": [5770],
      "Collection": [3949],
      "CollectionFactory": [4115],
      "ContextUpgradeable": [1564],
      "Currency": [5844],
      "ERC1155Upgradeable": [8663],
      "ERC165Upgradeable": [2017],
      "ERC1967UpgradeUpgradeable": [829],
      "ERC20Adapter": [5972],
      "Freeport": [4449],
      "IAccessControlUpgradeable": [44],
      "IBeaconUpgradeable": [839],
      "IERC1155MetadataURIUpgradeable": [1137],
      "IERC1155ReceiverUpgradeable": [1000],
      "IERC1155Upgradeable": [1122],
      "IERC165Upgradeable": [2029],
      "IERC20": [2982],
      "Initializable": [885],
      "Issuance": [6233],
      "JointAccounts": [6577],
      "MetaTxContext": [6654],
      "NFTAttachment": [4829],
      "SimpleExchange": [6902],
      "StorageSlotUpgradeable": [1624],
      "StringsUpgradeable": [1827],
      "TransferFees": [7518],
      "TransferOperator": [7562],
      "UUPSUpgradeable": [959],
      "Upgradeable": [7603]
    },
    "id": 4116,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3951,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 3952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4116,
        "sourceUnit": 6655,
        "src": "25:43:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 3953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4116,
        "sourceUnit": 3950,
        "src": "69:26:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3955,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6654,
              "src": "216:13:29"
            },
            "id": 3956,
            "nodeType": "InheritanceSpecifier",
            "src": "216:13:29"
          }
        ],
        "contractDependencies": [3949],
        "contractKind": "contract",
        "documentation": {
          "id": 3954,
          "nodeType": "StructuredDocumentation",
          "src": "97:88:29",
          "text": "This is a contract for creating standalone contracts (collections) for users."
        },
        "fullyImplemented": true,
        "id": 4115,
        "linearizedBaseContracts": [
          4115, 6654, 7603, 395, 2017, 2029, 44, 1564, 959, 829, 885
        ],
        "name": "CollectionFactory",
        "nameLocation": "195:17:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3978,
              "nodeType": "Block",
              "src": "326:110:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3967,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6589,
                      "src": "336:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:22:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3969,
                  "nodeType": "ExpressionStatement",
                  "src": "336:22:29"
                },
                {
                  "expression": {
                    "id": 3972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3970,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3986,
                      "src": "369:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4449",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3971,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3959,
                      "src": "380:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4449",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "369:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4449",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 3973,
                  "nodeType": "ExpressionStatement",
                  "src": "369:20:29"
                },
                {
                  "expression": {
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3974,
                      "name": "nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3989,
                      "src": "399:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3975,
                      "name": "_nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3962,
                      "src": "415:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "src": "399:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "399:30:29"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 3979,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3964,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "314:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "314:11:29"
              }
            ],
            "name": "initialize",
            "nameLocation": "246:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3959,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "266:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "257:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4449",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 3958,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3957,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4449,
                      "src": "257:8:29"
                    },
                    "referencedDeclaration": 4449,
                    "src": "257:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4449",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3962,
                  "mutability": "mutable",
                  "name": "_nftAttachment",
                  "nameLocation": "291:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "277:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                    "typeString": "contract NFTAttachment"
                  },
                  "typeName": {
                    "id": 3961,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3960,
                      "name": "NFTAttachment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4829,
                      "src": "277:13:29"
                    },
                    "referencedDeclaration": 4829,
                    "src": "277:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "256:50:29"
            },
            "returnParameters": {
              "id": 3966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:29"
            },
            "scope": 4115,
            "src": "237:199:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3983,
            "mutability": "mutable",
            "name": "nameToCollection",
            "nameLocation": "525:16:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "498:43:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3982,
              "keyType": {
                "id": 3980,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "506:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "498:26:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3981,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9470ad85",
            "id": 3986,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "605:8:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "589:24:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4449",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 3985,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3984,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4449,
                "src": "589:8:29"
              },
              "referencedDeclaration": 4449,
              "src": "589:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4449",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ec5868",
            "id": 3989,
            "mutability": "mutable",
            "name": "nftAttachment",
            "nameLocation": "686:13:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "665:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTAttachment_$4829",
              "typeString": "contract NFTAttachment"
            },
            "typeName": {
              "id": 3988,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3987,
                "name": "NFTAttachment",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4829,
                "src": "665:13:29"
              },
              "referencedDeclaration": 4829,
              "src": "665:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                "typeString": "contract NFTAttachment"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3993,
            "mutability": "mutable",
            "name": "addressProxies",
            "nameLocation": "775:14:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "739:50:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3992,
              "keyType": {
                "id": 3990,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "747:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "739:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3991,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "758:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3995,
            "mutability": "mutable",
            "name": "collectionCounter",
            "nameLocation": "811:17:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "795:33:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "795:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 3996,
              "nodeType": "StructuredDocumentation",
              "src": "835:156:29",
              "text": "Collection creator role.\n  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
            },
            "functionSelector": "caff99ce",
            "id": 4001,
            "mutability": "constant",
            "name": "COLLECTION_CREATOR_ROLE",
            "nameLocation": "1020:23:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "996:86:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3997,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "996:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4c4c454354494f4e5f43524541544f525f524f4c45",
                  "id": 3999,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1056:25:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  },
                  "value": "COLLECTION_CREATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  }
                ],
                "id": 3998,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1046:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4000,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1046:36:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4002,
              "nodeType": "StructuredDocumentation",
              "src": "1089:126:29",
              "text": "An event emitted when new collection is created.\n Contains unique name of collection and its address."
            },
            "id": 4008,
            "name": "CollectionCreated",
            "nameLocation": "1226:17:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4004,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1251:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1244:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4003,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4006,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1273:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1257:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1243:35:29"
            },
            "src": "1220:59:29"
          },
          {
            "body": {
              "id": 4113,
              "nodeType": "Block",
              "src": "1521:678:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4024,
                            "name": "COLLECTION_CREATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4001,
                            "src": "1547:23:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4025,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [6626],
                              "referencedDeclaration": 6626,
                              "src": "1572:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1572:12:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4023,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "1539:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:46:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920636f6c6c656374696f6e2063726561746f72",
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1587:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        },
                        "value": "only collection creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        }
                      ],
                      "id": 4022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1531:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:82:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:82:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4032,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4011,
                          "src": "1631:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1650:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1642:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4033,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1642:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1642:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1631:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20616464726573732063726561746f72",
                        "id": 4038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1654:22:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        },
                        "value": "zero address creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        }
                      ],
                      "id": 4031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1623:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:54:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4040,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:54:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4042,
                            "name": "nameToCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3983,
                            "src": "1695:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 4044,
                          "indexExpression": {
                            "id": 4043,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4013,
                            "src": "1712:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1695:22:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1729:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1721:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1721:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1721:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1695:36:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e206e616d6520616c726561647920657869737473",
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1733:32:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        },
                        "value": "collection name already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        }
                      ],
                      "id": 4041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1687:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:79:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:79:29"
                },
                {
                  "assignments": [4055],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4055,
                      "mutability": "mutable",
                      "name": "collection",
                      "nameLocation": "1788:10:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 4113,
                      "src": "1777:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$3949",
                        "typeString": "contract Collection"
                      },
                      "typeName": {
                        "id": 4054,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4053,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3949,
                          "src": "1777:10:29"
                        },
                        "referencedDeclaration": 3949,
                        "src": "1777:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4060,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1801:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Collection_$3949_$",
                        "typeString": "function () returns (contract Collection)"
                      },
                      "typeName": {
                        "id": 4057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4056,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3949,
                          "src": "1805:10:29"
                        },
                        "referencedDeclaration": 3949,
                        "src": "1805:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      }
                    },
                    "id": 4059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:16:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$3949",
                      "typeString": "contract Collection"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1777:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4066,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1857:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4115",
                              "typeString": "contract CollectionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4115",
                              "typeString": "contract CollectionFactory"
                            }
                          ],
                          "id": 4065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1849:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4064,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1849:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1849:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4068,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4011,
                        "src": "1864:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4069,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "1873:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4070,
                        "name": "uriTpl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4015,
                        "src": "1879:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4071,
                        "name": "contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "1887:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4072,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3986,
                        "src": "1900:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4449",
                          "typeString": "contract Freeport"
                        }
                      },
                      {
                        "id": 4073,
                        "name": "nftAttachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3989,
                        "src": "1910:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                          "typeString": "contract NFTAttachment"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_Freeport_$4449",
                          "typeString": "contract Freeport"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                          "typeString": "contract NFTAttachment"
                        }
                      ],
                      "expression": {
                        "id": 4061,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "1827:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      },
                      "id": 4063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3679,
                      "src": "1827:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_contract$_Freeport_$4449_$_t_contract$_NFTAttachment_$4829_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,contract Freeport,contract NFTAttachment) external"
                      }
                    },
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:97:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:97:29"
                },
                {
                  "expression": {
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4076,
                        "name": "addressProxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "1935:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4078,
                      "indexExpression": {
                        "id": 4077,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "1950:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1935:33:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4081,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4055,
                          "src": "1979:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1971:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1971:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1971:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1935:55:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4084,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:55:29"
                },
                {
                  "expression": {
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4085,
                      "name": "collectionCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3995,
                      "src": "2000:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4086,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "2020:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2020:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2000:41:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4090,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:41:29"
                },
                {
                  "expression": {
                    "id": 4098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4091,
                        "name": "nameToCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3983,
                        "src": "2052:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 4093,
                      "indexExpression": {
                        "id": 4092,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "2069:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2052:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4096,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4055,
                          "src": "2085:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2077:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4094,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2077:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2077:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2052:44:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4099,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:44:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4101,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "2130:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4104,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4055,
                            "src": "2144:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$3949",
                              "typeString": "contract Collection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Collection_$3949",
                              "typeString": "contract Collection"
                            }
                          ],
                          "id": 4103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2136:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2136:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2136:19:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4100,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "2112:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 4106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:44:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4107,
                  "nodeType": "EmitStatement",
                  "src": "2107:49:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4110,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "2181:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      ],
                      "id": 4109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2173:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4108,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2173:7:29",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:19:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4021,
                  "id": 4112,
                  "nodeType": "Return",
                  "src": "2166:26:29"
                }
              ]
            },
            "documentation": {
              "id": 4009,
              "nodeType": "StructuredDocumentation",
              "src": "1285:94:29",
              "text": "Deploying a new user collection.\n  Emits a {CollectionCreated} event."
            },
            "functionSelector": "3df17453",
            "id": 4114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollection",
            "nameLocation": "1393:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4011,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1418:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1410:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4013,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1441:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1427:18:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "mutability": "mutable",
                  "name": "uriTpl",
                  "nameLocation": "1461:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1447:20:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4017,
                  "mutability": "mutable",
                  "name": "contractURI",
                  "nameLocation": "1483:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1469:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1409:86:29"
            },
            "returnParameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4020,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1512:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:9:29"
            },
            "scope": 4115,
            "src": "1384:815:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4116,
        "src": "186:2015:29",
        "usedErrors": []
      }
    ],
    "src": "0:2202:29"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CollectionFactory.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [395],
      "AddressUpgradeable": [1519],
      "BaseNFT": [5770],
      "Collection": [3949],
      "CollectionFactory": [4115],
      "ContextUpgradeable": [1564],
      "Currency": [5844],
      "ERC1155Upgradeable": [8663],
      "ERC165Upgradeable": [2017],
      "ERC1967UpgradeUpgradeable": [829],
      "ERC20Adapter": [5972],
      "Freeport": [4449],
      "IAccessControlUpgradeable": [44],
      "IBeaconUpgradeable": [839],
      "IERC1155MetadataURIUpgradeable": [1137],
      "IERC1155ReceiverUpgradeable": [1000],
      "IERC1155Upgradeable": [1122],
      "IERC165Upgradeable": [2029],
      "IERC20": [2982],
      "Initializable": [885],
      "Issuance": [6233],
      "JointAccounts": [6577],
      "MetaTxContext": [6654],
      "NFTAttachment": [4829],
      "SimpleExchange": [6902],
      "StorageSlotUpgradeable": [1624],
      "StringsUpgradeable": [1827],
      "TransferFees": [7518],
      "TransferOperator": [7562],
      "UUPSUpgradeable": [959],
      "Upgradeable": [7603]
    },
    "id": 4116,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3951,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 3952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4116,
        "sourceUnit": 6655,
        "src": "25:43:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 3953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4116,
        "sourceUnit": 3950,
        "src": "69:26:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3955,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6654,
              "src": "216:13:29"
            },
            "id": 3956,
            "nodeType": "InheritanceSpecifier",
            "src": "216:13:29"
          }
        ],
        "contractDependencies": [3949],
        "contractKind": "contract",
        "documentation": {
          "id": 3954,
          "nodeType": "StructuredDocumentation",
          "src": "97:88:29",
          "text": "This is a contract for creating standalone contracts (collections) for users."
        },
        "fullyImplemented": true,
        "id": 4115,
        "linearizedBaseContracts": [
          4115, 6654, 7603, 395, 2017, 2029, 44, 1564, 959, 829, 885
        ],
        "name": "CollectionFactory",
        "nameLocation": "195:17:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3978,
              "nodeType": "Block",
              "src": "326:110:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3967,
                      "name": "__MetaTxContext_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6589,
                      "src": "336:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:22:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3969,
                  "nodeType": "ExpressionStatement",
                  "src": "336:22:29"
                },
                {
                  "expression": {
                    "id": 3972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3970,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3986,
                      "src": "369:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4449",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3971,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3959,
                      "src": "380:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$4449",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "369:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4449",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 3973,
                  "nodeType": "ExpressionStatement",
                  "src": "369:20:29"
                },
                {
                  "expression": {
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3974,
                      "name": "nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3989,
                      "src": "399:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3975,
                      "name": "_nftAttachment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3962,
                      "src": "415:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                        "typeString": "contract NFTAttachment"
                      }
                    },
                    "src": "399:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "399:30:29"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 3979,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3964,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "314:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "314:11:29"
              }
            ],
            "name": "initialize",
            "nameLocation": "246:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3959,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "266:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "257:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$4449",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 3958,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3957,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4449,
                      "src": "257:8:29"
                    },
                    "referencedDeclaration": 4449,
                    "src": "257:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$4449",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3962,
                  "mutability": "mutable",
                  "name": "_nftAttachment",
                  "nameLocation": "291:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "277:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                    "typeString": "contract NFTAttachment"
                  },
                  "typeName": {
                    "id": 3961,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3960,
                      "name": "NFTAttachment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4829,
                      "src": "277:13:29"
                    },
                    "referencedDeclaration": 4829,
                    "src": "277:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                      "typeString": "contract NFTAttachment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "256:50:29"
            },
            "returnParameters": {
              "id": 3966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:29"
            },
            "scope": 4115,
            "src": "237:199:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3983,
            "mutability": "mutable",
            "name": "nameToCollection",
            "nameLocation": "525:16:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "498:43:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3982,
              "keyType": {
                "id": 3980,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "506:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "498:26:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3981,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "9470ad85",
            "id": 3986,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "605:8:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "589:24:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$4449",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 3985,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3984,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4449,
                "src": "589:8:29"
              },
              "referencedDeclaration": 4449,
              "src": "589:8:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$4449",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11ec5868",
            "id": 3989,
            "mutability": "mutable",
            "name": "nftAttachment",
            "nameLocation": "686:13:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "665:34:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTAttachment_$4829",
              "typeString": "contract NFTAttachment"
            },
            "typeName": {
              "id": 3988,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3987,
                "name": "NFTAttachment",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4829,
                "src": "665:13:29"
              },
              "referencedDeclaration": 4829,
              "src": "665:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                "typeString": "contract NFTAttachment"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3993,
            "mutability": "mutable",
            "name": "addressProxies",
            "nameLocation": "775:14:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "739:50:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3992,
              "keyType": {
                "id": 3990,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "747:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "739:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3991,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "758:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3995,
            "mutability": "mutable",
            "name": "collectionCounter",
            "nameLocation": "811:17:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "795:33:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "795:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 3996,
              "nodeType": "StructuredDocumentation",
              "src": "835:156:29",
              "text": "Collection creator role.\n  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
            },
            "functionSelector": "caff99ce",
            "id": 4001,
            "mutability": "constant",
            "name": "COLLECTION_CREATOR_ROLE",
            "nameLocation": "1020:23:29",
            "nodeType": "VariableDeclaration",
            "scope": 4115,
            "src": "996:86:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3997,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "996:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4c4c454354494f4e5f43524541544f525f524f4c45",
                  "id": 3999,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1056:25:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  },
                  "value": "COLLECTION_CREATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e926d122b799dcbe5c2eccdf60ae0aefbb1a4bc75a7848bb07befecf8c775f5c",
                    "typeString": "literal_string \"COLLECTION_CREATOR_ROLE\""
                  }
                ],
                "id": 3998,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1046:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4000,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1046:36:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4002,
              "nodeType": "StructuredDocumentation",
              "src": "1089:126:29",
              "text": "An event emitted when new collection is created.\n Contains unique name of collection and its address."
            },
            "id": 4008,
            "name": "CollectionCreated",
            "nameLocation": "1226:17:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4004,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1251:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1244:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4003,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4006,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1273:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1257:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1243:35:29"
            },
            "src": "1220:59:29"
          },
          {
            "body": {
              "id": 4113,
              "nodeType": "Block",
              "src": "1521:678:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4024,
                            "name": "COLLECTION_CREATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4001,
                            "src": "1547:23:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4025,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [6626],
                              "referencedDeclaration": 6626,
                              "src": "1572:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1572:12:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4023,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "1539:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:46:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920636f6c6c656374696f6e2063726561746f72",
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1587:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        },
                        "value": "only collection creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f2acdec8b29aac2a108c6d3b76a056eee8702e0322bafc1aebad3ab186c7b2",
                          "typeString": "literal_string \"only collection creator\""
                        }
                      ],
                      "id": 4022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1531:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:82:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:82:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4032,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4011,
                          "src": "1631:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1650:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1642:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4033,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1642:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1642:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1631:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20616464726573732063726561746f72",
                        "id": 4038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1654:22:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        },
                        "value": "zero address creator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81b6da7c12576e032f1474f7d06786e47946f6cd4b945fced6598d7915452cbf",
                          "typeString": "literal_string \"zero address creator\""
                        }
                      ],
                      "id": 4031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1623:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:54:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4040,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:54:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4042,
                            "name": "nameToCollection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3983,
                            "src": "1695:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 4044,
                          "indexExpression": {
                            "id": 4043,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4013,
                            "src": "1712:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1695:22:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1729:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1721:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1721:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1721:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1695:36:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e206e616d6520616c726561647920657869737473",
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1733:32:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        },
                        "value": "collection name already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3b208787dea2462a200cdab645373234ab44364d8830a06c6c9f73e928a1bd",
                          "typeString": "literal_string \"collection name already exists\""
                        }
                      ],
                      "id": 4041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1687:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:79:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:79:29"
                },
                {
                  "assignments": [4055],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4055,
                      "mutability": "mutable",
                      "name": "collection",
                      "nameLocation": "1788:10:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 4113,
                      "src": "1777:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$3949",
                        "typeString": "contract Collection"
                      },
                      "typeName": {
                        "id": 4054,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4053,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3949,
                          "src": "1777:10:29"
                        },
                        "referencedDeclaration": 3949,
                        "src": "1777:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4060,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1801:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Collection_$3949_$",
                        "typeString": "function () returns (contract Collection)"
                      },
                      "typeName": {
                        "id": 4057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4056,
                          "name": "Collection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3949,
                          "src": "1805:10:29"
                        },
                        "referencedDeclaration": 3949,
                        "src": "1805:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      }
                    },
                    "id": 4059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:16:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$3949",
                      "typeString": "contract Collection"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1777:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4066,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1857:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4115",
                              "typeString": "contract CollectionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CollectionFactory_$4115",
                              "typeString": "contract CollectionFactory"
                            }
                          ],
                          "id": 4065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1849:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4064,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1849:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1849:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4068,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4011,
                        "src": "1864:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4069,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "1873:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4070,
                        "name": "uriTpl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4015,
                        "src": "1879:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4071,
                        "name": "contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "1887:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4072,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3986,
                        "src": "1900:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$4449",
                          "typeString": "contract Freeport"
                        }
                      },
                      {
                        "id": 4073,
                        "name": "nftAttachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3989,
                        "src": "1910:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                          "typeString": "contract NFTAttachment"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_Freeport_$4449",
                          "typeString": "contract Freeport"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTAttachment_$4829",
                          "typeString": "contract NFTAttachment"
                        }
                      ],
                      "expression": {
                        "id": 4061,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "1827:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      },
                      "id": 4063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3679,
                      "src": "1827:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_contract$_Freeport_$4449_$_t_contract$_NFTAttachment_$4829_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,contract Freeport,contract NFTAttachment) external"
                      }
                    },
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:97:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:97:29"
                },
                {
                  "expression": {
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4076,
                        "name": "addressProxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "1935:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4078,
                      "indexExpression": {
                        "id": 4077,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "1950:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1935:33:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4081,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4055,
                          "src": "1979:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1971:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1971:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1971:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1935:55:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4084,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:55:29"
                },
                {
                  "expression": {
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4085,
                      "name": "collectionCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3995,
                      "src": "2000:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4086,
                        "name": "collectionCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "2020:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2020:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2000:41:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4090,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:41:29"
                },
                {
                  "expression": {
                    "id": 4098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4091,
                        "name": "nameToCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3983,
                        "src": "2052:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 4093,
                      "indexExpression": {
                        "id": 4092,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "2069:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2052:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4096,
                          "name": "collection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4055,
                          "src": "2085:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Collection_$3949",
                            "typeString": "contract Collection"
                          }
                        ],
                        "id": 4095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2077:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4094,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2077:7:29",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2077:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2052:44:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4099,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:44:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4101,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "2130:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4104,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4055,
                            "src": "2144:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$3949",
                              "typeString": "contract Collection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Collection_$3949",
                              "typeString": "contract Collection"
                            }
                          ],
                          "id": 4103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2136:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2136:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2136:19:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4100,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "2112:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 4106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:44:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4107,
                  "nodeType": "EmitStatement",
                  "src": "2107:49:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4110,
                        "name": "collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4055,
                        "src": "2181:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Collection_$3949",
                          "typeString": "contract Collection"
                        }
                      ],
                      "id": 4109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2173:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4108,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2173:7:29",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:19:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4021,
                  "id": 4112,
                  "nodeType": "Return",
                  "src": "2166:26:29"
                }
              ]
            },
            "documentation": {
              "id": 4009,
              "nodeType": "StructuredDocumentation",
              "src": "1285:94:29",
              "text": "Deploying a new user collection.\n  Emits a {CollectionCreated} event."
            },
            "functionSelector": "3df17453",
            "id": 4114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollection",
            "nameLocation": "1393:16:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4011,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1418:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1410:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1410:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4013,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1441:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1427:18:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4012,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "mutability": "mutable",
                  "name": "uriTpl",
                  "nameLocation": "1461:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1447:20:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4017,
                  "mutability": "mutable",
                  "name": "contractURI",
                  "nameLocation": "1483:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1469:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1409:86:29"
            },
            "returnParameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4020,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4114,
                  "src": "1512:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:9:29"
            },
            "scope": 4115,
            "src": "1384:815:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4116,
        "src": "186:2015:29",
        "usedErrors": []
      }
    ],
    "src": "0:2202:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "AdminChanged",
          "type": "event"
        },
        "0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "beacon",
              "type": "address"
            }
          ],
          "name": "BeaconUpgraded",
          "type": "event"
        },
        "0x2660dd916ec25bcad9a3dd62c721e438ec0e975817265c1e03c2639b24ac7007": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "CollectionCreated",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "name": "Upgraded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc4018973d7ae51b4669dDe7948904d034A79Bb86",
      "transactionHash": "0x8a1b42fc27c89334b19d4db4dfc2c822301a7f2a3c01e0127740c508ce3fe303"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-07-11T17:10:32.529Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "CollectionCreated(string,address)": {
        "notice": "An event emitted when new collection is created. Contains unique name of collection and its address."
      }
    },
    "kind": "user",
    "methods": {
      "COLLECTION_CREATOR_ROLE()": {
        "notice": "Collection creator role.  Used for configuring the amounts and beneficiaries of royalties on primary and secondary transfers of this NFT."
      },
      "createCollection(address,string,string,string)": {
        "notice": "Deploying a new user collection.  Emits a {CollectionCreated} event."
      }
    },
    "notice": "This is a contract for creating standalone contracts (collections) for users.",
    "version": 1
  }
}
