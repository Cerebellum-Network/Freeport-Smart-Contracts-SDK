{
  "contractName": "FiatGateway",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Davinci",
          "name": "_davinci",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CURRENCY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "EXCHANGE_RATE_ORACLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAYMENT_SERVICE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cerePerPenny",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "davinci",
      "outputs": [
        {
          "internalType": "contract Davinci",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalCereSent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalPenniesReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cerePerPenny",
          "type": "uint256"
        }
      ],
      "name": "setExchangeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "penniesReceived",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "buyCereFromUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "penniesReceived",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "buyNftFromUsd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Davinci\",\"name\":\"_davinci\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CURRENCY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXCHANGE_RATE_ORACLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMENT_SERVICE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penniesReceived\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"buyCereFromUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penniesReceived\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"buyNftFromUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cerePerPenny\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"davinci\",\"outputs\":[{\"internalType\":\"contract Davinci\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cerePerPenny\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCereSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPenniesReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CURRENCY()\":{\"notice\":\"The token ID that represents the CERE currency for all payments in this contract. \"},\"buyCereFromUsd(uint256,address,uint256)\":{\"notice\":\"Obtain CERE based on a fiat payment. The amount of fiat is recorded, and exchanged for an amount of CERE. Only the gateway with PAYMENT_SERVICE role can report successful payments.\"},\"buyNftFromUsd(uint256,address,address,uint256,uint256,uint256)\":{\"notice\":\"Obtain CERE and buy an NFT based on a fiat payment. CERE tokens are obtained in the same way as buyCereFromUsd. Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange. Only the gateway with PAYMENT_SERVICE role can report successful payments.\"},\"setExchangeRate(uint256)\":{\"notice\":\"Set the exchange rate between fiat (USD) and Davinci currency (CERE). The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny). Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate.\"},\"totalCereSent()\":{\"notice\":\"How many CERE tokens were sold so far.\"},\"totalPenniesReceived()\":{\"notice\":\"How many USD cents were received so far, according to the payment service.\"},\"withdraw()\":{\"notice\":\"Withdraw all CERE from this contract. Only accounts with DEFAULT_ADMIN_ROLE can withdraw.\"}},\"notice\":\"The FiatGateway contract allows buying NFTs from an external fiat payment. This contract connects to the Davinci contract. It must hold a balance of CERE recognized by Davinci. This contract uses the SimpleExchange API to buy NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/a/CERE/davinci-nft/contracts/FiatGateway.sol\":\"FiatGateway\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"/home/a/CERE/davinci-nft/contracts/Davinci.sol\":{\"keccak256\":\"0xf605d0497f13486174e2987e1a5a69dad2a5ace8f7e99723fb2a8bd9f80a44ce\",\"urls\":[\"bzz-raw://2ba166c4120be1fbd5301d5a7adf25ad0b58cc4c1ab08d79e813d1c7c8d5352b\",\"dweb:/ipfs/QmczkHynRtXFF5jjm5x1QuM1jkffNsEiiCzQAEetjMeu1W\"]},\"/home/a/CERE/davinci-nft/contracts/FiatGateway.sol\":{\"keccak256\":\"0xe3bb73b12a1ada0b9a47ae3b2b449853a8df2829ddd3fcce0a31a1343e9837ad\",\"urls\":[\"bzz-raw://f8aacb4a216ae976c558698a1b3f670cd33954240a5d3fdc8bc419eb5dcb8f76\",\"dweb:/ipfs/QmR7Y1W8Vi4VbDzWkZ6DhbW73GvGCstiyN5SoLkea7W5GF\"]},\"/home/a/CERE/davinci-nft/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/BaseNFT.sol\":{\"keccak256\":\"0x6ea2813493379179d164b1f11878c009bc79fb418c4dfad31d4a5349424b68ff\",\"urls\":[\"bzz-raw://c02259b021a373a3dab10f5e84dd815f9fc8521b787327af6825e58607eec7d3\",\"dweb:/ipfs/QmWwh3k8LCEE11R3Cdh2bGVSHysskqxTKZT3rFNgeNyPpu\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/Currency.sol\":{\"keccak256\":\"0x1008137cd28b99c360bc4b6efb19f37a4f276da3e78e1bddead4b8fc33b612a1\",\"urls\":[\"bzz-raw://001d88d26c9ef52142809d97f6043d53f9e1c5c8023dd07ff93e9a4407dd1844\",\"dweb:/ipfs/QmQJeYHx3aqomh3KmvHG4QvAiZkhUirJm2gTVUDLe573YN\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/Issuance.sol\":{\"keccak256\":\"0xbd3fd0a50f969c02b3b23e08bdb48cd37d7cb230e402d8039dede3ec729602ae\",\"urls\":[\"bzz-raw://4eb1370b5bf61f4c6b7ec04549d16619b92a478566675d82d331c5dbcece9f41\",\"dweb:/ipfs/Qmc9JXnD86imGeAGXSTN25PMVRrRBSfCrMdVy3eP3vsrTJ\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/JointAccounts.sol\":{\"keccak256\":\"0x46706d42441ad9f47cc1601e1a4bcbb45bc7d15e1e0a6da7299f6a8e309ac9a1\",\"urls\":[\"bzz-raw://cb88d8d36edceca3e6d3ed70131669a804537f6ea91b3ddf787aba89b923d40e\",\"dweb:/ipfs/QmWX7YzXDy3oQHFB55fVoVNxJg9CsoershK2xVUKTgHhPo\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/MetaTxContext.sol\":{\"keccak256\":\"0x3090048ff695123f22240133c1a581ab89269acd1950298fd78736296a991962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e952a833d8d4f1fb1427b50f086c7270affec1a4f1516bd83720b457baf8270e\",\"dweb:/ipfs/QmTUgeBWF8ynjKBtJGWNouFCe3TCuqkfDvZbMETBuy6zoL\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/PolygonChildERC20.sol\":{\"keccak256\":\"0xdd8f081bb7ee08499e331eb3eb67e52d1e38231be15f855a8fe207172b5acb09\",\"urls\":[\"bzz-raw://961f9817e442404115224e1d564386738c1f051d28a87ff451fb7d69e738bd09\",\"dweb:/ipfs/QmYvS1mz7caZd22nFuAcGwcBeXJEm3fx66Uz4VGuY24epv\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/SimpleExchange.sol\":{\"keccak256\":\"0x4db12c93f1445563a1e024a0605a83166db517143c8d2c89bbf60aae423ae25c\",\"urls\":[\"bzz-raw://9f1b04daeb7f7edf5c58477b4d36a23bb91db830a46a6fee96f83242ce1fda57\",\"dweb:/ipfs/QmPvxfGJdbdnR7bdJPPgyg3Xr8rxnWev6HTYXASLssEA1n\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/TransferFees.sol\":{\"keccak256\":\"0x2cfb082f5d301161748e9737e7a7ce1c27ce3fe0a8304ad9a47b27dd58e374b3\",\"urls\":[\"bzz-raw://1c9e748bfbe95106ecb8de42715f20aba04f80006407b4067eeeb442a3d417fc\",\"dweb:/ipfs/QmYgqfHav4rynvYkDkTyAznJ4fjedW4UvouzwMEfBMcCdY\"]},\"/home/a/CERE/davinci-nft/contracts/davinciParts/TransferOperator.sol\":{\"keccak256\":\"0xa3b4dd13b4bfd8894da16813415503a755e8fc1a8e081f5a98ffeb7782395d4c\",\"urls\":[\"bzz-raw://539d2f0d0c50ac93ce9f3da7010c06ee2868bb2a27a282a988d88c5644c34609\",\"dweb:/ipfs/Qmf9j9neJ3h9JfekGZ1FA9uYLv599WZkqjMv4KojtCdWZy\"]},\"/home/a/CERE/davinci-nft/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xeaafe1c2ab42941716da1c12d401bb708528bd08053d043f16c102d4bb219c8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5e012cd4f44be154d1d53e49de4298d47b44393086c71aa7009bc6040eef73\",\"dweb:/ipfs/QmbxfsFYjeksnjW8GYTHEiXx19iN47VdcGdyqaSRPuFvSR\"]},\"/home/a/CERE/davinci-nft/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"/home/a/CERE/davinci-nft/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7c0ea2d284bad1aa002165ba4c5eac30070be8e56b19dba1ac7c8f2c8bd4832c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46cd1e78707bb21fc6255c1cc9356537cc767e74f112553ea9305938a325bacb\",\"dweb:/ipfs/QmcG9KekAb77Bh5S62w8SJ4N8qhsmx8ewWF5cWoxC9DEuN\"]},\"/home/a/CERE/davinci-nft/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"/home/a/CERE/davinci-nft/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/home/a/CERE/davinci-nft/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/home/a/CERE/davinci-nft/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/home/a/CERE/davinci-nft/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/home/a/CERE/davinci-nft/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610def380380610def83398101604081905261002f9161010d565b600180546001600160a01b0319166001600160a01b03831617905561005b60006100563390565b610061565b5061013b565b61006b828261006f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661006b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100c93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006020828403121561011e578081fd5b81516001600160a01b0381168114610134578182fd5b9392505050565b610ca58061014a6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c806301ffc9a7146100eb5780630ec57d5114610113578063248a9ca31461013e5780632f2ff15d1461015f5780633263ba671461017457806336568abe146101895780633ccfd60b1461019c57806391d14854146101a4578063a217fddf146101b7578063a87a9322146101bf578063b880cd75146101d2578063c4f7f9c5146101db578063c87113e2146101ee578063d547741f14610203578063db068e0e14610216578063e65372e114610229578063f37c137f14610232578063f5361219146101b7575b600080fd5b6100fe6100f93660046109f6565b61023b565b60405190151581526020015b60405180910390f35b600154610126906001600160a01b031681565b6040516001600160a01b03909116815260200161010a565b61015161014c3660046109b3565b610272565b60405190815260200161010a565b61017261016d3660046109cb565b610287565b005b610151600080516020610c5083398151915281565b6101726101973660046109cb565b6102a9565b61015161032c565b6100fe6101b23660046109cb565b610433565b610151600081565b6101726101cd366004610a36565b61045c565b61015160025481565b6101516101e9366004610a8d565b610508565b610151600080516020610c3083398151915281565b6101726102113660046109cb565b610626565b6101726102243660046109b3565b610643565b61015160035481565b61015160045481565b60006001600160e01b03198216637965db0b60e01b148061026c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61029082610272565b61029a8133610662565b6102a483836106c6565b505050565b6001600160a01b038116331461031e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610328828261074a565b5050565b6000806103398133610662565b600033600154604051627eeac760e11b81523060048201526000602482018190529293506001600160a01b039091169062fdd58e9060440160206040518083038186803b15801561038957600080fd5b505afa15801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610a1e565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906103f990309086906000908790600401610b30565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b50929550505050505090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020610c508339815191526104758133610662565b610480878784610508565b5060018054604051634880d24760e01b81526001600160a01b038981166004830152888116602483015260448201889052606482018790526084820184905290911690634880d2479060a401600060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b505050505050505050505050565b6000600080516020610c508339815191526105238133610662565b6002546105725760405162461bcd60e51b815260206004820181905260248201527f45786368616e67652072617465206d75737420626520636f6e666967757265646044820152606401610315565b6000600254866105829190610bb3565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906105ba90309089906000908790600401610b30565b600060405180830381600087803b1580156105d457600080fd5b505af11580156105e8573d6000803e3d6000fd5b5050505085600360008282546105fe9190610b9b565b9250508190555080600460008282546106179190610b9b565b90915550909695505050505050565b61062f82610272565b6106398133610662565b6102a4838361074a565b600080516020610c3083398151915261065c8133610662565b50600255565b61066c8282610433565b61032857610684816001600160a01b031660146107af565b61068f8360206107af565b6040516020016106a0929190610ac1565b60408051601f198184030181529082905262461bcd60e51b825261031591600401610b68565b6106d08282610433565b610328576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556107063390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6107548282610433565b15610328576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006107be836002610bb3565b6107c9906002610b9b565b6001600160401b038111156107ee57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610818576020820181803683370190505b509050600360fc1b8160008151811061084157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061087e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006108a2846002610bb3565b6108ad906001610b9b565b90505b6001811115610941576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108ef57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061091357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361093a81610c02565b90506108b0565b5083156109905760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610315565b9392505050565b80356001600160a01b03811681146109ae57600080fd5b919050565b6000602082840312156109c4578081fd5b5035919050565b600080604083850312156109dd578081fd5b823591506109ed60208401610997565b90509250929050565b600060208284031215610a07578081fd5b81356001600160e01b031981168114610990578182fd5b600060208284031215610a2f578081fd5b5051919050565b60008060008060008060c08789031215610a4e578182fd5b86359550610a5e60208801610997565b9450610a6c60408801610997565b9350606087013592506080870135915060a087013590509295509295509295565b600080600060608486031215610aa1578283fd5b83359250610ab160208501610997565b9150604084013590509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610af3816017850160208801610bd2565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b24816028840160208801610bd2565b01602801949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6020815260008251806020840152610b87816040850160208701610bd2565b601f01601f19169190910160400192915050565b60008219821115610bae57610bae610c19565b500190565b6000816000190483118215151615610bcd57610bcd610c19565b500290565b60005b83811015610bed578181015183820152602001610bd5565b83811115610bfc576000848401525b50505050565b600081610c1157610c11610c19565b506000190190565b634e487b7160e01b600052601160045260246000fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb53979fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092fa26469706673582212209b6157ecb6fe6057f6b7b3c846339b044136b6306e071342213d0ed159365d2d64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100e65760003560e01c806301ffc9a7146100eb5780630ec57d5114610113578063248a9ca31461013e5780632f2ff15d1461015f5780633263ba671461017457806336568abe146101895780633ccfd60b1461019c57806391d14854146101a4578063a217fddf146101b7578063a87a9322146101bf578063b880cd75146101d2578063c4f7f9c5146101db578063c87113e2146101ee578063d547741f14610203578063db068e0e14610216578063e65372e114610229578063f37c137f14610232578063f5361219146101b7575b600080fd5b6100fe6100f93660046109f6565b61023b565b60405190151581526020015b60405180910390f35b600154610126906001600160a01b031681565b6040516001600160a01b03909116815260200161010a565b61015161014c3660046109b3565b610272565b60405190815260200161010a565b61017261016d3660046109cb565b610287565b005b610151600080516020610c5083398151915281565b6101726101973660046109cb565b6102a9565b61015161032c565b6100fe6101b23660046109cb565b610433565b610151600081565b6101726101cd366004610a36565b61045c565b61015160025481565b6101516101e9366004610a8d565b610508565b610151600080516020610c3083398151915281565b6101726102113660046109cb565b610626565b6101726102243660046109b3565b610643565b61015160035481565b61015160045481565b60006001600160e01b03198216637965db0b60e01b148061026c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61029082610272565b61029a8133610662565b6102a483836106c6565b505050565b6001600160a01b038116331461031e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610328828261074a565b5050565b6000806103398133610662565b600033600154604051627eeac760e11b81523060048201526000602482018190529293506001600160a01b039091169062fdd58e9060440160206040518083038186803b15801561038957600080fd5b505afa15801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610a1e565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906103f990309086906000908790600401610b30565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b50929550505050505090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020610c508339815191526104758133610662565b610480878784610508565b5060018054604051634880d24760e01b81526001600160a01b038981166004830152888116602483015260448201889052606482018790526084820184905290911690634880d2479060a401600060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b505050505050505050505050565b6000600080516020610c508339815191526105238133610662565b6002546105725760405162461bcd60e51b815260206004820181905260248201527f45786368616e67652072617465206d75737420626520636f6e666967757265646044820152606401610315565b6000600254866105829190610bb3565b600154604051637921219560e11b81529192506001600160a01b03169063f242432a906105ba90309089906000908790600401610b30565b600060405180830381600087803b1580156105d457600080fd5b505af11580156105e8573d6000803e3d6000fd5b5050505085600360008282546105fe9190610b9b565b9250508190555080600460008282546106179190610b9b565b90915550909695505050505050565b61062f82610272565b6106398133610662565b6102a4838361074a565b600080516020610c3083398151915261065c8133610662565b50600255565b61066c8282610433565b61032857610684816001600160a01b031660146107af565b61068f8360206107af565b6040516020016106a0929190610ac1565b60408051601f198184030181529082905262461bcd60e51b825261031591600401610b68565b6106d08282610433565b610328576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556107063390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6107548282610433565b15610328576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006107be836002610bb3565b6107c9906002610b9b565b6001600160401b038111156107ee57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610818576020820181803683370190505b509050600360fc1b8160008151811061084157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061087e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006108a2846002610bb3565b6108ad906001610b9b565b90505b6001811115610941576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108ef57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061091357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361093a81610c02565b90506108b0565b5083156109905760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610315565b9392505050565b80356001600160a01b03811681146109ae57600080fd5b919050565b6000602082840312156109c4578081fd5b5035919050565b600080604083850312156109dd578081fd5b823591506109ed60208401610997565b90509250929050565b600060208284031215610a07578081fd5b81356001600160e01b031981168114610990578182fd5b600060208284031215610a2f578081fd5b5051919050565b60008060008060008060c08789031215610a4e578182fd5b86359550610a5e60208801610997565b9450610a6c60408801610997565b9350606087013592506080870135915060a087013590509295509295509295565b600080600060608486031215610aa1578283fd5b83359250610ab160208501610997565b9150604084013590509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610af3816017850160208801610bd2565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b24816028840160208801610bd2565b01602801949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6020815260008251806020840152610b87816040850160208701610bd2565b601f01601f19169190910160400192915050565b60008219821115610bae57610bae610c19565b500190565b6000816000190483118215151615610bcd57610bcd610c19565b500290565b60005b83811015610bed578181015183820152602001610bd5565b83811115610bfc576000848401525b50505050565b600081610c1157610c11610c19565b506000190190565b634e487b7160e01b600052601160045260246000fdfef9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb53979fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092fa26469706673582212209b6157ecb6fe6057f6b7b3c846339b044136b6306e071342213d0ed159365d2d64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:340:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:229:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "164:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "172:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "119:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "190:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "209:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "203:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:16:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "194:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "282:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "291:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "299:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "284:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "284:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "284:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "241:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "252:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "267:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "272:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "263:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "263:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "276:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "259:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "259:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "248:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "248:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "238:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "238:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "317:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "327:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "317:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Davinci_$59_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:25",
                "type": ""
              }
            ],
            "src": "14:324:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_Davinci_$59_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7620:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:25"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:25",
                "type": ""
              }
            ],
            "src": "14:173:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:120:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "366:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "353:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:25",
                "type": ""
              }
            ],
            "src": "192:190:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:177:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "520:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "529:6:25"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "537:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "522:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "522:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "522:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "495:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "504:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "491:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "491:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "487:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "487:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "484:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "555:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "578:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "565:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "555:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "597:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "607:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "432:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "443:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "463:6:25",
                "type": ""
              }
            ],
            "src": "387:264:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "725:237:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "771:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "780:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "788:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "773:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "773:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "773:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "755:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "767:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "738:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "738:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "735:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "806:36:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "832:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "819:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "819:23:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "810:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "906:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "915:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "923:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "908:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "908:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "908:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "864:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "875:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "886:3:25",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "891:10:25",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:20:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "871:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "871:32:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "861:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "861:43:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:51:25"
                  },
                  "nodeType": "YulIf",
                  "src": "851:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "941:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "951:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "691:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "702:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "714:6:25",
                "type": ""
              }
            ],
            "src": "656:306:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1037:120:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1083:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1092:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1100:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1085:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1085:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1085:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1058:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1067:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1054:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1054:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1079:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1050:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1047:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1118:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1141:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1128:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1003:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1014:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1026:6:25",
                "type": ""
              }
            ],
            "src": "967:190:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:113:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1289:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1298:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1306:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1291:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1291:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1291:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1264:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1273:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1260:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1285:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1324:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1340:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1334:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:16:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1324:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1209:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1220:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1232:6:25",
                "type": ""
              }
            ],
            "src": "1162:194:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1516:390:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1563:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1572:6:25"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1580:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1565:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1565:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1565:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1537:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1546:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1558:3:25",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1529:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:33:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1526:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1598:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1621:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1608:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1598:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1640:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1673:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1684:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1669:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1650:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1640:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1707:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1697:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1754:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1792:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1764:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1805:43:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:3:25",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1828:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:19:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1815:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:33:25"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1805:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1857:43:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1884:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1895:3:25",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1880:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1880:19:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1867:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:33:25"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1857:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1442:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1453:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1473:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1481:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1489:6:25",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1497:6:25",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1505:6:25",
                "type": ""
              }
            ],
            "src": "1361:545:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2015:228:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2061:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2070:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2078:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2063:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2063:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2063:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2036:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2045:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2032:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2032:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2057:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2028:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2025:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2096:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2106:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2096:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2138:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2171:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2182:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2167:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2167:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2148:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2148:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2195:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2222:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2233:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2218:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2218:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2205:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2195:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1965:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1976:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1988:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1996:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2004:6:25",
                "type": ""
              }
            ],
            "src": "1911:332:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2637:397:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2654:3:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2659:25:25",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2647:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2647:38:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2647:38:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2694:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2714:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2708:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2708:13:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2698:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2756:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2764:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2752:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2752:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2775:3:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2780:2:25",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2771:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2771:12:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2785:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2730:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2730:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2730:62:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2801:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2815:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2820:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2811:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2811:16:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2805:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2847:2:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2851:2:25",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:11:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2856:19:25",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2836:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:40:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2836:40:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2885:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2907:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2901:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:13:25"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2889:8:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2949:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2957:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2945:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2945:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2968:2:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2972:2:25",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2964:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2964:11:25"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2977:8:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2923:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:63:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2923:63:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2995:33:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3010:2:25"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3014:8:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3006:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3006:17:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3025:2:25",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3002:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:26:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2995:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2605:3:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2610:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2618:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2629:3:25",
                "type": ""
              }
            ],
            "src": "2248:786:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3324:345:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3334:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3352:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3357:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3348:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3348:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3344:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3344:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3338:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3379:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3394:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3402:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3390:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3390:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3372:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3372:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3426:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3437:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3422:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3422:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3446:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3454:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3442:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3442:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3415:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3415:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3415:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3478:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3489:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3474:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3494:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3467:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3467:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3521:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3532:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3517:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3517:18:25"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3537:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3510:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3510:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3564:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:3:25",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:19:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3581:3:25",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:32:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:32:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3605:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3616:3:25",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3601:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3601:19:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3622:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3594:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3594:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3594:33:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3636:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3648:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3659:3:25",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3644:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3636:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3269:9:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3280:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3288:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3296:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3304:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3315:4:25",
                "type": ""
              }
            ],
            "src": "3039:630:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3887:306:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3909:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3920:3:25",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3905:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3897:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3933:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3951:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3956:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3947:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3947:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3960:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3943:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3943:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3937:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3978:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3993:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4001:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3989:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3989:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3971:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3971:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4025:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4036:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4021:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4021:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4045:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4053:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4041:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4041:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4014:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4014:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4077:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4088:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4073:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4073:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4093:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4066:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4066:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4066:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4120:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4131:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4116:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4116:18:25"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4136:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4109:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4163:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4174:3:25",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4159:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:19:25"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4180:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4152:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4152:35:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4152:35:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3824:9:25",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3835:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3843:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3851:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3859:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3867:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3878:4:25",
                "type": ""
              }
            ],
            "src": "3674:519:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4327:145:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4337:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4349:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4360:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4345:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4345:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4337:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4379:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4394:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4410:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4415:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4406:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4406:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4419:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4402:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4402:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4390:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4390:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4372:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4372:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4372:51:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4443:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4454:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4439:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4439:18:25"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4459:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4432:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4432:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4432:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4288:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4299:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4307:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4318:4:25",
                "type": ""
              }
            ],
            "src": "4198:274:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4572:92:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4582:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4594:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4605:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4582:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4624:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4649:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4642:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4642:14:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4635:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4635:22:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4617:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:41:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4617:41:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4541:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4552:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4563:4:25",
                "type": ""
              }
            ],
            "src": "4477:187:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4770:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4780:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4792:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4803:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4788:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4780:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4822:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4833:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4815:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4815:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4815:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4739:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4750:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4761:4:25",
                "type": ""
              }
            ],
            "src": "4669:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4966:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4976:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4988:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4999:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4984:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4984:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4976:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5018:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5033:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5049:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5054:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5045:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5045:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5058:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5041:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5041:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5029:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5029:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5011:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5011:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Davinci_$59__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4935:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4946:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4957:4:25",
                "type": ""
              }
            ],
            "src": "4851:217:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5194:262:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5211:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5222:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5204:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5204:21:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5234:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5254:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5248:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5248:13:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5238:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5281:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5292:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5277:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5277:18:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5297:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5270:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5270:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5270:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5339:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5347:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5335:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5335:15:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5356:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5367:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5352:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5352:18:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5372:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5313:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:66:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5313:66:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5388:62:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5404:9:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5423:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5431:2:25",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5419:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5419:15:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5440:2:25",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5436:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5436:7:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5415:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5415:29:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5400:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5400:45:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5447:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5396:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5396:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5388:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5163:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5174:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5185:4:25",
                "type": ""
              }
            ],
            "src": "5073:383:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5635:182:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5652:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5663:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5645:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5645:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5645:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5686:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5697:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5682:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5702:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5675:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5675:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5675:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5725:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5736:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5721:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5721:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5741:34:25",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5714:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5714:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5714:62:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5785:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5797:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5808:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5793:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5793:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5785:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5612:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5626:4:25",
                "type": ""
              }
            ],
            "src": "5461:356:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5996:182:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6013:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6024:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6006:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6006:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6006:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6047:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6058:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6043:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6043:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6063:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6036:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6036:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6036:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6086:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6097:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6082:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6082:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6102:34:25",
                        "type": "",
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6075:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6075:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6075:62:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6146:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6158:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6169:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6154:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6146:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5973:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5987:4:25",
                "type": ""
              }
            ],
            "src": "5822:356:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6357:237:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6374:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6385:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6367:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6367:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6367:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6408:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6419:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6404:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6404:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6424:2:25",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6397:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6397:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6397:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6447:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6458:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6443:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6443:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6463:34:25",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6436:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6436:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6436:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6518:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6529:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6514:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6514:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6534:17:25",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6507:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:45:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6507:45:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6561:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6573:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6584:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6569:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6569:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6561:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6334:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6348:4:25",
                "type": ""
              }
            ],
            "src": "6183:411:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6700:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6710:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6722:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6733:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6718:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6710:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6752:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6763:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6745:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6745:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6745:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6669:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6680:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6691:4:25",
                "type": ""
              }
            ],
            "src": "6599:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6829:80:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6856:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6858:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6858:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6858:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6845:1:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6852:1:25"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6848:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6848:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6842:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6842:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6839:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6887:16:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6898:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6901:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6894:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6894:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6887:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6812:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6815:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6821:3:25",
                "type": ""
              }
            ],
            "src": "6781:128:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6966:116:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7025:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7027:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7027:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7027:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6997:1:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6990:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6990:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6983:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6983:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7005:1:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7016:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7012:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7012:6:25"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7020:1:25"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7008:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7008:14:25"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7002:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7002:21:25"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6979:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6979:45:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6976:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7056:20:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7071:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7074:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7067:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7067:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7056:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6945:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6948:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6954:7:25",
                "type": ""
              }
            ],
            "src": "6914:168:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7140:205:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7150:10:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7159:1:25",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7154:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7219:63:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7244:3:25"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7249:1:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7240:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7240:11:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7263:3:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7268:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7259:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7259:11:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7253:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7253:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7233:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7233:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7233:39:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7180:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7183:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7177:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7177:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7191:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7193:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7202:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7205:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7198:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7198:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7193:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7173:3:25",
                    "statements": []
                  },
                  "src": "7169:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7308:31:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7321:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7326:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7317:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7317:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7335:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7310:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7310:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7310:27:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7297:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7300:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7294:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7294:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7291:2:25"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7118:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7123:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7128:6:25",
                "type": ""
              }
            ],
            "src": "7087:258:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7397:89:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7424:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7426:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7426:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7426:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7417:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7410:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7410:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7407:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7455:25:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7466:5:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7477:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7473:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7473:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7462:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7455:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7379:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7389:3:25",
                "type": ""
              }
            ],
            "src": "7350:136:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7523:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7540:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7547:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7552:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7543:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7543:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7533:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7533:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7533:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7580:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7583:4:25",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7573:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7604:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7607:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7597:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7597:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7597:15:25"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7491:127:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), tail)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_Davinci_$59__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Exchange rate must be configured\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "347:3357:2:-:0;;;967:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1007:7;:18;;-1:-1:-1;;;;;;1007:18:2;-1:-1:-1;;;;;1007:18:2;;;;;1036:44;-1:-1:-1;1067:12:2;665:10:19;;586:96;1067:12:2;1036:10;:44::i;:::-;967:120;347:3357;;7515:110:4;7593:25;7604:4;7610:7;7593:10;:25::i;:::-;7515:110;;:::o;7948:224::-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:4;;;;;;;;;;;;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:4;;;;;;;;;:36;;-1:-1:-1;;8060:36:4;8092:4;8060:36;;;8142:12;665:10:19;;586:96;8142:12:4;-1:-1:-1;;;;;8115:40:4;8133:7;-1:-1:-1;;;;;8115:40:4;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;14:324:25:-;98:6;151:2;139:9;130:7;126:23;122:32;119:2;;;172:6;164;157:22;119:2;203:16;;-1:-1:-1;;;;;248:31:25;;238:42;;228:2;;299:6;291;284:22;228:2;327:5;109:229;-1:-1:-1;;;109:229:25:o;:::-;347:3357:2;;;;;;",
  "deployedSourceMap": "347:3357:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:214:4;;;;;;:::i;:::-;;:::i;:::-;;;4642:14:25;;4635:22;4617:41;;4605:2;4590:18;4073:214:4;;;;;;;;691:22:2;;;;;-1:-1:-1;;;;;691:22:2;;;;;;-1:-1:-1;;;;;5029:32:25;;;5011:51;;4999:2;4984:18;691:22:2;4966:102:25;5348:121:4;;;;;;:::i;:::-;;:::i;:::-;;;4815:25:25;;;4803:2;4788:18;5348:121:4;4770:76:25;5719:145:4;;;;;;:::i;:::-;;:::i;:::-;;478:70:2;;-1:-1:-1;;;;;;;;;;;478:70:2;;6736:214:4;;;;;;:::i;:::-;;:::i;1629:356:2:-;;;:::i;4374:137:4:-;;;;;;:::i;:::-;;:::i;2394:49::-;;2439:4;2394:49;;3163:357:2;;;;;;:::i;:::-;;:::i;719:24::-;;;;;;2220:551;;;;;;:::i;:::-;;:::i;392:80::-;;-1:-1:-1;;;;;;;;;;;392:80:2;;6098:147:4;;;;;;:::i;:::-;;:::i;1368:133:2:-;;;;;;:::i;:::-;;:::i;841:32::-;;;;;;935:25;;;;;;4073:214:4;4158:4;-1:-1:-1;;;;;;4181:47:4;;-1:-1:-1;;;4181:47:4;;:99;;-1:-1:-1;;;;;;;;;;871:40:23;;;4244:36:4;4174:106;4073:214;-1:-1:-1;;4073:214:4:o;5348:121::-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121::o;5719:145::-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;665:10:19;3958::4;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;:::-;5719:145:::0;;;:::o;6736:214::-;-1:-1:-1;;;;;6831:23:4;;665:10:19;6831:23:4;6823:83;;;;-1:-1:-1;;;6823:83:4;;6385:2:25;6823:83:4;;;6367:21:25;6424:2;6404:18;;;6397:30;6463:34;6443:18;;;6436:62;-1:-1:-1;;;6514:18:25;;;6507:45;6569:19;;6823:83:4;;;;;;;;;6917:26;6929:4;6935:7;6917:11;:26::i;:::-;6736:214;;:::o;1629:356:2:-;1702:4;;3958:30:4;1702:4:2;665:10:19;3958::4;:30::i;:::-;1719:13:2::1;665:10:19::0;1772:7:2::1;::::0;:42:::1;::::0;-1:-1:-1;;;1772:42:2;;1798:4:::1;1772:42;::::0;::::1;4372:51:25::0;1758:11:2::1;4439:18:25::0;;;4432:34;;;1719:28:2;;-1:-1:-1;;;;;;1772:7:2;;::::1;::::0;:17:::1;::::0;4345:18:25;;1772:42:2::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1825:7;::::0;:129:::1;::::0;-1:-1:-1;;;1825:129:2;;1758:56;;-1:-1:-1;;;;;;1825:7:2::1;::::0;:24:::1;::::0;:129:::1;::::0;1871:4:::1;::::0;1890:5;;1825:7:::1;::::0;1758:56;;1825:129:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1972:6:2;;-1:-1:-1;;;;;1629:356:2;;:::o;4374:137:4:-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:4;;;;;;;;;;;;;;;4374:137::o;3163:357:2:-;-1:-1:-1;;;;;;;;;;;3958:30:4;520:28:2;665:10:19;3958::4;:30::i;:::-;3375:45:2::1;3390:15;3407:5;3414;3375:14;:45::i;:::-;-1:-1:-1::0;3445:1:2::1;3456:7:::0;;:57:::1;::::0;-1:-1:-1;;;3456:57:2;;-1:-1:-1;;;;;3989:15:25;;;3456:57:2::1;::::0;::::1;3971:34:25::0;4041:15;;;4021:18;;;4014:43;4073:18;;;4066:34;;;4116:18;;;4109:34;;;4159:19;;;4152:35;;;3456:7:2;;::::1;::::0;:17:::1;::::0;3905:19:25;;3456:57:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3998:1:4;3163:357:2::0;;;;;;;:::o;2220:551::-;2368:4;-1:-1:-1;;;;;;;;;;;3958:30:4;520:28:2;665:10:19;3958::4;:30::i;:::-;2392:12:2::1;::::0;2384:62:::1;;;::::0;-1:-1:-1;;;2384:62:2;;6024:2:25;2384:62:2::1;::::0;::::1;6006:21:25::0;;;6043:18;;;6036:30;6102:34;6082:18;;;6075:62;6154:18;;2384:62:2::1;5996:182:25::0;2384:62:2::1;2457:15;2493:12;;2475:15;:30;;;;:::i;:::-;2516:7;::::0;:133:::1;::::0;-1:-1:-1;;;2516:133:2;;2457:48;;-1:-1:-1;;;;;;2516:7:2::1;::::0;:24:::1;::::0;:133:::1;::::0;2562:4:::1;::::0;2581:5;;2516:7:::1;::::0;2457:48;;2516:133:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2684:15;2660:20;;:39;;;;;;;:::i;:::-;;;;;;;;2726:10;2709:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;2754:10:2;;2220:551;-1:-1:-1;;;;;;2220:551:2:o;6098:147:4:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;665:10:19;3958::4;:30::i;:::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;1368:133:2:-:0;-1:-1:-1;;;;;;;;;;;3958:30:4;439:33:2;665:10:19;3958::4;:30::i;:::-;-1:-1:-1;1466:12:2::1;:28:::0;1368:133::o;4792:375:4:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;-1:-1:-1;;;;;5000:41:4;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4923:225:4;;;;;;;;;;-1:-1:-1;;;4909:241:4;;;;;;;:::i;7948:224::-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:4;;;;;;;;;:36;;-1:-1:-1;;8060:36:4;8092:4;8060:36;;;8142:12;665:10:19;;586:96;8142:12:4;-1:-1:-1;;;;;8115:40:4;8133:7;-1:-1:-1;;;;;8115:40:4;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:4;;;;;;;;;;:37;;-1:-1:-1;;8290:37:4;;;8346:40;665:10:19;;8290:12:4;;8346:40;;8322:5;8346:40;8178:225;;:::o;1531:437:20:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;-1:-1:-1;;;;;1653:25:20;;;;;-1:-1:-1;;;1653:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:20;;1631:47;;-1:-1:-1;;;1688:6:20;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:20;;;;;;;;;;;;:15;-1:-1:-1;;;;;1688:15:20;;;;;;;;;-1:-1:-1;;;1713:6:20;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:20;;;;;;;;;;;;:15;-1:-1:-1;;;;;1713:15:20;;;;;;;;-1:-1:-1;1743:9:20;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1818:5:20;1826:3;1818:11;1809:21;;;;;-1:-1:-1;;;1809:21:20;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:20;;;;;;;;;;;;:33;-1:-1:-1;;;;;1797:33:20;;;;;;;;-1:-1:-1;1854:1:20;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:20;;1875:55;;;;-1:-1:-1;;;1875:55:20;;5663:2:25;1875:55:20;;;5645:21:25;;;5682:18;;;5675:30;5741:34;5721:18;;;5714:62;5793:18;;1875:55:20;5635:182:25;1875:55:20;1954:6;1531:437;-1:-1:-1;;;1531:437:20:o;14:173:25:-;82:20;;-1:-1:-1;;;;;131:31:25;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:190::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;-1:-1:-1;353:23:25;;262:120;-1:-1:-1;262:120:25:o;387:264::-;455:6;463;516:2;504:9;495:7;491:23;487:32;484:2;;;537:6;529;522:22;484:2;578:9;565:23;555:33;;607:38;641:2;630:9;626:18;607:38;:::i;:::-;597:48;;474:177;;;;;:::o;656:306::-;714:6;767:2;755:9;746:7;742:23;738:32;735:2;;;788:6;780;773:22;735:2;819:23;;-1:-1:-1;;;;;;871:32:25;;861:43;;851:2;;923:6;915;908:22;1162:194;1232:6;1285:2;1273:9;1264:7;1260:23;1256:32;1253:2;;;1306:6;1298;1291:22;1253:2;-1:-1:-1;1334:16:25;;1243:113;-1:-1:-1;1243:113:25:o;1361:545::-;1465:6;1473;1481;1489;1497;1505;1558:3;1546:9;1537:7;1533:23;1529:33;1526:2;;;1580:6;1572;1565:22;1526:2;1621:9;1608:23;1598:33;;1650:38;1684:2;1673:9;1669:18;1650:38;:::i;:::-;1640:48;;1707:38;1741:2;1730:9;1726:18;1707:38;:::i;:::-;1697:48;;1792:2;1781:9;1777:18;1764:32;1754:42;;1843:3;1832:9;1828:19;1815:33;1805:43;;1895:3;1884:9;1880:19;1867:33;1857:43;;1516:390;;;;;;;;:::o;1911:332::-;1988:6;1996;2004;2057:2;2045:9;2036:7;2032:23;2028:32;2025:2;;;2078:6;2070;2063:22;2025:2;2119:9;2106:23;2096:33;;2148:38;2182:2;2171:9;2167:18;2148:38;:::i;:::-;2138:48;;2233:2;2222:9;2218:18;2205:32;2195:42;;2015:228;;;;;:::o;2248:786::-;-1:-1:-1;;;2654:3:25;2647:38;2629:3;2714:6;2708:13;2730:62;2785:6;2780:2;2775:3;2771:12;2764:4;2756:6;2752:17;2730:62;:::i;:::-;-1:-1:-1;;;2851:2:25;2811:16;;;2843:11;;;2836:40;2901:13;;2923:63;2901:13;2972:2;2964:11;;2957:4;2945:17;;2923:63;:::i;:::-;3006:17;3025:2;3002:26;;2637:397;-1:-1:-1;;;;2637:397:25:o;3039:630::-;-1:-1:-1;;;;;3390:15:25;;;3372:34;;3442:15;;;;3437:2;3422:18;;3415:43;3489:2;3474:18;;3467:34;3532:2;3517:18;;3510:34;;;;3352:3;3575;3560:19;;3553:32;;;3315:4;3601:19;;;3594:33;3659:3;3644:19;;3324:345::o;5073:383::-;5222:2;5211:9;5204:21;5185:4;5254:6;5248:13;5297:6;5292:2;5281:9;5277:18;5270:34;5313:66;5372:6;5367:2;5356:9;5352:18;5347:2;5339:6;5335:15;5313:66;:::i;:::-;5440:2;5419:15;-1:-1:-1;;5415:29:25;5400:45;;;;5447:2;5396:54;;5194:262;-1:-1:-1;;5194:262:25:o;6781:128::-;6821:3;6852:1;6848:6;6845:1;6842:13;6839:2;;;6858:18;;:::i;:::-;-1:-1:-1;6894:9:25;;6829:80::o;6914:168::-;6954:7;7020:1;7016;7012:6;7008:14;7005:1;7002:21;6997:1;6990:9;6983:17;6979:45;6976:2;;;7027:18;;:::i;:::-;-1:-1:-1;7067:9:25;;6966:116::o;7087:258::-;7159:1;7169:113;7183:6;7180:1;7177:13;7169:113;;;7259:11;;;7253:18;7240:11;;;7233:39;7205:2;7198:10;7169:113;;;7300:6;7297:1;7294:13;7291:2;;;7335:1;7326:6;7321:3;7317:16;7310:27;7291:2;;7140:205;;;:::o;7350:136::-;7389:3;7417:5;7407:2;;7426:18;;:::i;:::-;-1:-1:-1;;;7462:18:25;;7397:89::o;7491:127::-;7552:10;7547:3;7543:20;7540:1;7533:31;7583:4;7580:1;7573:15;7607:4;7604:1;7597:15",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./access/AccessControl.sol\";\nimport \"./Davinci.sol\";\n\n/** The FiatGateway contract allows buying NFTs from an external fiat payment.\n  *\n  * This contract connects to the Davinci contract.\n  * It must hold a balance of CERE recognized by Davinci.\n  *\n  * This contract uses the SimpleExchange API to buy NFTs.\n */\ncontract FiatGateway is AccessControl {\n\n    bytes32 public constant EXCHANGE_RATE_ORACLE = keccak256(\"EXCHANGE_RATE_ORACLE\");\n    bytes32 public constant PAYMENT_SERVICE = keccak256(\"PAYMENT_SERVICE\");\n\n    /** The token ID that represents the CERE currency for all payments in this contract. */\n    uint256 public constant CURRENCY = 0;\n\n    Davinci public davinci;\n    uint public cerePerPenny;\n\n    /** How many USD cents were received so far, according to the payment service.\n     */\n    uint public totalPenniesReceived;\n\n    /** How many CERE tokens were sold so far.\n     */\n    uint public totalCereSent;\n\n    constructor(Davinci _davinci) {\n        davinci = _davinci;\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    }\n\n    /** Set the exchange rate between fiat (USD) and Davinci currency (CERE).\n      *\n      * The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny).\n      *\n      * Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate.\n     */\n    function setExchangeRate(uint _cerePerPenny)\n    public onlyRole(EXCHANGE_RATE_ORACLE) {\n\n        cerePerPenny = _cerePerPenny;\n    }\n\n    /** Withdraw all CERE from this contract.\n      *\n      * Only accounts with DEFAULT_ADMIN_ROLE can withdraw.\n     */\n    function withdraw()\n    public onlyRole(DEFAULT_ADMIN_ROLE)\n    returns (uint) {\n\n        address admin = _msgSender();\n\n        uint amount = davinci.balanceOf(address(this), CURRENCY);\n\n        davinci.safeTransferFrom(\n            address(this),\n            admin,\n            CURRENCY,\n            amount,\n            \"\");\n\n        return amount;\n    }\n\n    /** Obtain CERE based on a fiat payment.\n      *\n      * The amount of fiat is recorded, and exchanged for an amount of CERE.\n      *\n      * Only the gateway with PAYMENT_SERVICE role can report successful payments.\n     */\n    function buyCereFromUsd(\n        uint penniesReceived,\n        address buyer,\n        uint nonce)\n    public onlyRole(PAYMENT_SERVICE)\n    returns (uint) {\n        require(cerePerPenny != 0, \"Exchange rate must be configured\");\n\n        uint cereToSend = penniesReceived * cerePerPenny;\n\n        davinci.safeTransferFrom(\n            address(this),\n            buyer,\n            CURRENCY,\n            cereToSend,\n            \"\");\n\n        totalPenniesReceived += penniesReceived;\n        totalCereSent += cereToSend;\n\n        return cereToSend;\n    }\n\n    /** Obtain CERE and buy an NFT based on a fiat payment.\n      *\n      * CERE tokens are obtained in the same way as buyCereFromUsd.\n      *\n      * Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n      *\n      * Only the gateway with PAYMENT_SERVICE role can report successful payments.\n     */\n    function buyNftFromUsd(\n        uint penniesReceived,\n        address buyer,\n        address seller,\n        uint nftId,\n        uint nftPrice,\n        uint nonce)\n    public onlyRole(PAYMENT_SERVICE) {\n\n        buyCereFromUsd(penniesReceived, buyer, nonce);\n\n        uint amount = 1;\n        davinci.takeOffer(buyer, seller, nftId, nftPrice, amount);\n    }\n\n    /** Guarantee that a version of Solidity with safe math is used.\n     */\n    function _mathIsSafe() internal pure {\n    unchecked {} // Use a keyword from Solidity 0.8.0.\n    }\n}",
  "sourcePath": "/home/a/CERE/davinci-nft/contracts/FiatGateway.sol",
  "ast": {
    "absolutePath": "/home/a/CERE/davinci-nft/contracts/FiatGateway.sol",
    "exportedSymbols": {
      "AccessControl": [
        800
      ],
      "Address": [
        4054
      ],
      "BaseNFT": [
        903
      ],
      "Context": [
        4077
      ],
      "Currency": [
        976
      ],
      "Davinci": [
        59
      ],
      "ERC1155": [
        3580
      ],
      "ERC165": [
        4586
      ],
      "FiatGateway": [
        262
      ],
      "IAccessControl": [
        476
      ],
      "IERC1155": [
        3702
      ],
      "IERC1155MetadataURI": [
        3758
      ],
      "IERC1155Receiver": [
        3743
      ],
      "IERC165": [
        4598
      ],
      "Issuance": [
        1230
      ],
      "JointAccounts": [
        1567
      ],
      "MetaTxContext": [
        1637
      ],
      "PolygonChildERC20": [
        1786
      ],
      "SimpleExchange": [
        1936
      ],
      "Strings": [
        4280
      ],
      "TransferFees": [
        2510
      ],
      "TransferOperator": [
        2547
      ]
    },
    "id": 263,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 61,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 62,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 263,
        "sourceUnit": 801,
        "src": "25:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/Davinci.sol",
        "file": "./Davinci.sol",
        "id": 63,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 263,
        "sourceUnit": 60,
        "src": "62:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 800,
              "src": "371:13:2"
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "371:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 64,
          "nodeType": "StructuredDocumentation",
          "src": "87:259:2",
          "text": "The FiatGateway contract allows buying NFTs from an external fiat payment.\n This contract connects to the Davinci contract.\n It must hold a balance of CERE recognized by Davinci.\n This contract uses the SimpleExchange API to buy NFTs."
        },
        "fullyImplemented": true,
        "id": 262,
        "linearizedBaseContracts": [
          262,
          800,
          4586,
          4598,
          476,
          4077
        ],
        "name": "FiatGateway",
        "nameLocation": "356:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c87113e2",
            "id": 71,
            "mutability": "constant",
            "name": "EXCHANGE_RATE_ORACLE",
            "nameLocation": "416:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "392:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 67,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45584348414e47455f524154455f4f5241434c45",
                  "id": 69,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "449:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  },
                  "value": "EXCHANGE_RATE_ORACLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  }
                ],
                "id": 68,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "439:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "439:33:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3263ba67",
            "id": 76,
            "mutability": "constant",
            "name": "PAYMENT_SERVICE",
            "nameLocation": "502:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "478:70:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 72,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041594d454e545f53455256494345",
                  "id": 74,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "530:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  },
                  "value": "PAYMENT_SERVICE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  }
                ],
                "id": 73,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "520:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 75,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "520:28:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 77,
              "nodeType": "StructuredDocumentation",
              "src": "555:88:2",
              "text": "The token ID that represents the CERE currency for all payments in this contract. "
            },
            "functionSelector": "f5361219",
            "id": 80,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "672:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "648:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 79,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "683:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0ec57d51",
            "id": 83,
            "mutability": "mutable",
            "name": "davinci",
            "nameLocation": "706:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "691:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Davinci_$59",
              "typeString": "contract Davinci"
            },
            "typeName": {
              "id": 82,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 81,
                "name": "Davinci",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59,
                "src": "691:7:2"
              },
              "referencedDeclaration": 59,
              "src": "691:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Davinci_$59",
                "typeString": "contract Davinci"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b880cd75",
            "id": 85,
            "mutability": "mutable",
            "name": "cerePerPenny",
            "nameLocation": "731:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "719:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 84,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "719:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "750:86:2",
              "text": "How many USD cents were received so far, according to the payment service."
            },
            "functionSelector": "e65372e1",
            "id": 88,
            "mutability": "mutable",
            "name": "totalPenniesReceived",
            "nameLocation": "853:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "841:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "841:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "880:50:2",
              "text": "How many CERE tokens were sold so far."
            },
            "functionSelector": "f37c137f",
            "id": 91,
            "mutability": "mutable",
            "name": "totalCereSent",
            "nameLocation": "947:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "935:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 90,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "935:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "997:90:2",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1007:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$59",
                        "typeString": "contract Davinci"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1017:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$59",
                        "typeString": "contract Davinci"
                      }
                    },
                    "src": "1007:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$59",
                      "typeString": "contract Davinci"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1047:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 103,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4065,
                          "src": "1067:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1067:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1036:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:44:2"
                }
              ]
            },
            "id": 108,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_davinci",
                  "nameLocation": "987:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "979:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Davinci_$59",
                    "typeString": "contract Davinci"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "Davinci",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59,
                      "src": "979:7:2"
                    },
                    "referencedDeclaration": 59,
                    "src": "979:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$59",
                      "typeString": "contract Davinci"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:18:2"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:2"
            },
            "scope": 262,
            "src": "967:120:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1455:46:2",
              "statements": [
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1466:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 118,
                      "name": "_cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1481:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:28:2"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "1093:270:2",
              "text": "Set the exchange rate between fiat (USD) and Davinci currency (CERE).\n The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny).\n Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
            },
            "functionSelector": "db068e0e",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 114,
                    "name": "EXCHANGE_RATE_ORACLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "1433:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 113,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "1424:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:30:2"
              }
            ],
            "name": "setExchangeRate",
            "nameLocation": "1377:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_cerePerPenny",
                  "nameLocation": "1398:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1393:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:20:2"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:0:2"
            },
            "scope": 262,
            "src": "1368:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1708:277:2",
              "statements": [
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "1727:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1719:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 133,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4065,
                      "src": "1735:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1719:28:2"
                },
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1763:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1758:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1758:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 142,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1798:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1790:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 140,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1790:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1790:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 144,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1805:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1772:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2663,
                      "src": "1772:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1758:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1871:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1863:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 150,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1863:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1863:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 154,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1890:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1909:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1931:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1951:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 147,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1825:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2887,
                      "src": "1825:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:129:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:129:2"
                },
                {
                  "expression": {
                    "id": 160,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 137,
                    "src": "1972:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "1965:13:2"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "1507:117:2",
              "text": "Withdraw all CERE from this contract.\n Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
            },
            "functionSelector": "3ccfd60b",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 126,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 498,
                    "src": "1669:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 127,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "1660:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1660:28:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1638:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:2"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1702:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:6:2"
            },
            "scope": 262,
            "src": "1629:356:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "2374:397:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 179,
                          "name": "cerePerPenny",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2392:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2408:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2392:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e67652072617465206d75737420626520636f6e66696775726564",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2411:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        },
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2384:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2384:62:2"
                },
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "cereToSend",
                      "nameLocation": "2462:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2457:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2457:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 187,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2475:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 188,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2493:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2475:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2457:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 196,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2562:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2554:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2554:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2554:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 198,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "2581:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 199,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2600:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 200,
                        "name": "cereToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2622:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 191,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "2516:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2887,
                      "src": "2516:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:133:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:133:2"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 204,
                      "name": "totalPenniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2660:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 205,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2684:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2660:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2660:39:2"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 208,
                      "name": "totalCereSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2709:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 209,
                      "name": "cereToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "2726:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2709:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:27:2"
                },
                {
                  "expression": {
                    "id": 212,
                    "name": "cereToSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 186,
                    "src": "2754:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 177,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "2747:17:2"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "1991:224:2",
              "text": "Obtain CERE based on a fiat payment.\n The amount of fiat is recorded, and exchanged for an amount of CERE.\n Only the gateway with PAYMENT_SERVICE role can report successful payments."
            },
            "functionSelector": "c4f7f9c5",
            "id": 215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 173,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76,
                    "src": "2338:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "2329:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2329:25:2"
              }
            ],
            "name": "buyCereFromUsd",
            "nameLocation": "2229:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "2258:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2253:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2291:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2283:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2311:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2306:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2243:74:2"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2368:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2367:6:2"
            },
            "scope": 262,
            "src": "2220:551:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "3364:156:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 235,
                        "name": "penniesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "3390:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 236,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3407:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 237,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3414:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 234,
                      "name": "buyCereFromUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3375:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3375:45:2"
                },
                {
                  "assignments": [
                    241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3436:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "3431:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 240,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3431:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3445:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3431:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 247,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3474:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3481:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 249,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3489:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 250,
                        "name": "nftPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "3496:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 251,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "3506:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 244,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "3456:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "3456:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:57:2"
                }
              ]
            },
            "documentation": {
              "id": 216,
              "nodeType": "StructuredDocumentation",
              "src": "2777:381:2",
              "text": "Obtain CERE and buy an NFT based on a fiat payment.\n CERE tokens are obtained in the same way as buyCereFromUsd.\n Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n Only the gateway with PAYMENT_SERVICE role can report successful payments."
            },
            "functionSelector": "a87a9322",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 231,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76,
                    "src": "3347:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 230,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "3338:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3338:25:2"
              }
            ],
            "name": "buyNftFromUsd",
            "nameLocation": "3172:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "3200:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3195:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3233:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3225:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "3256:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3248:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3277:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3272:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "nftPrice",
                  "nameLocation": "3297:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3292:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3320:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3315:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3185:141:2"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:0:2"
            },
            "scope": 262,
            "src": "3163:357:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "3640:62:2",
              "statements": [
                {
                  "id": 259,
                  "nodeType": "UncheckedBlock",
                  "src": "3646:12:2",
                  "statements": []
                }
              ]
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "3526:72:2",
              "text": "Guarantee that a version of Solidity with safe math is used."
            },
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mathIsSafe",
            "nameLocation": "3612:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:2:2"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:2"
            },
            "scope": 262,
            "src": "3603:99:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 263,
        "src": "347:3357:2",
        "usedErrors": []
      }
    ],
    "src": "0:3704:2"
  },
  "legacyAST": {
    "absolutePath": "/home/a/CERE/davinci-nft/contracts/FiatGateway.sol",
    "exportedSymbols": {
      "AccessControl": [
        800
      ],
      "Address": [
        4054
      ],
      "BaseNFT": [
        903
      ],
      "Context": [
        4077
      ],
      "Currency": [
        976
      ],
      "Davinci": [
        59
      ],
      "ERC1155": [
        3580
      ],
      "ERC165": [
        4586
      ],
      "FiatGateway": [
        262
      ],
      "IAccessControl": [
        476
      ],
      "IERC1155": [
        3702
      ],
      "IERC1155MetadataURI": [
        3758
      ],
      "IERC1155Receiver": [
        3743
      ],
      "IERC165": [
        4598
      ],
      "Issuance": [
        1230
      ],
      "JointAccounts": [
        1567
      ],
      "MetaTxContext": [
        1637
      ],
      "PolygonChildERC20": [
        1786
      ],
      "SimpleExchange": [
        1936
      ],
      "Strings": [
        4280
      ],
      "TransferFees": [
        2510
      ],
      "TransferOperator": [
        2547
      ]
    },
    "id": 263,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 61,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 62,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 263,
        "sourceUnit": 801,
        "src": "25:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/a/CERE/davinci-nft/contracts/Davinci.sol",
        "file": "./Davinci.sol",
        "id": 63,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 263,
        "sourceUnit": 60,
        "src": "62:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 800,
              "src": "371:13:2"
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "371:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 64,
          "nodeType": "StructuredDocumentation",
          "src": "87:259:2",
          "text": "The FiatGateway contract allows buying NFTs from an external fiat payment.\n This contract connects to the Davinci contract.\n It must hold a balance of CERE recognized by Davinci.\n This contract uses the SimpleExchange API to buy NFTs."
        },
        "fullyImplemented": true,
        "id": 262,
        "linearizedBaseContracts": [
          262,
          800,
          4586,
          4598,
          476,
          4077
        ],
        "name": "FiatGateway",
        "nameLocation": "356:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c87113e2",
            "id": 71,
            "mutability": "constant",
            "name": "EXCHANGE_RATE_ORACLE",
            "nameLocation": "416:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "392:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 67,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "45584348414e47455f524154455f4f5241434c45",
                  "id": 69,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "449:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  },
                  "value": "EXCHANGE_RATE_ORACLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f9dcb70efa80ab2e15e6301babe010c481ee550c5335953c9ba3f97789fcb539",
                    "typeString": "literal_string \"EXCHANGE_RATE_ORACLE\""
                  }
                ],
                "id": 68,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "439:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "439:33:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "3263ba67",
            "id": 76,
            "mutability": "constant",
            "name": "PAYMENT_SERVICE",
            "nameLocation": "502:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "478:70:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 72,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041594d454e545f53455256494345",
                  "id": 74,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "530:17:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  },
                  "value": "PAYMENT_SERVICE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_79fb255b78648c966adc3c680f08ecaf12e124b92265f0bd145ccad7605f092f",
                    "typeString": "literal_string \"PAYMENT_SERVICE\""
                  }
                ],
                "id": 73,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "520:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 75,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "520:28:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 77,
              "nodeType": "StructuredDocumentation",
              "src": "555:88:2",
              "text": "The token ID that represents the CERE currency for all payments in this contract. "
            },
            "functionSelector": "f5361219",
            "id": 80,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "672:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "648:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 79,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "683:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0ec57d51",
            "id": 83,
            "mutability": "mutable",
            "name": "davinci",
            "nameLocation": "706:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "691:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Davinci_$59",
              "typeString": "contract Davinci"
            },
            "typeName": {
              "id": 82,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 81,
                "name": "Davinci",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59,
                "src": "691:7:2"
              },
              "referencedDeclaration": 59,
              "src": "691:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Davinci_$59",
                "typeString": "contract Davinci"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b880cd75",
            "id": 85,
            "mutability": "mutable",
            "name": "cerePerPenny",
            "nameLocation": "731:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "719:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 84,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "719:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "750:86:2",
              "text": "How many USD cents were received so far, according to the payment service."
            },
            "functionSelector": "e65372e1",
            "id": 88,
            "mutability": "mutable",
            "name": "totalPenniesReceived",
            "nameLocation": "853:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "841:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "841:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "880:50:2",
              "text": "How many CERE tokens were sold so far."
            },
            "functionSelector": "f37c137f",
            "id": 91,
            "mutability": "mutable",
            "name": "totalCereSent",
            "nameLocation": "947:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 262,
            "src": "935:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 90,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "935:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "997:90:2",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1007:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$59",
                        "typeString": "contract Davinci"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_davinci",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1017:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Davinci_$59",
                        "typeString": "contract Davinci"
                      }
                    },
                    "src": "1007:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$59",
                      "typeString": "contract Davinci"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "1047:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 103,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4065,
                          "src": "1067:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1067:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 101,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "1036:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:44:2"
                }
              ]
            },
            "id": 108,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_davinci",
                  "nameLocation": "987:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "979:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Davinci_$59",
                    "typeString": "contract Davinci"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "Davinci",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59,
                      "src": "979:7:2"
                    },
                    "referencedDeclaration": 59,
                    "src": "979:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Davinci_$59",
                      "typeString": "contract Davinci"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:18:2"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:2"
            },
            "scope": 262,
            "src": "967:120:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1455:46:2",
              "statements": [
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1466:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 118,
                      "name": "_cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1481:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:28:2"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "1093:270:2",
              "text": "Set the exchange rate between fiat (USD) and Davinci currency (CERE).\n The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny).\n Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
            },
            "functionSelector": "db068e0e",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 114,
                    "name": "EXCHANGE_RATE_ORACLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "1433:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 113,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "1424:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:30:2"
              }
            ],
            "name": "setExchangeRate",
            "nameLocation": "1377:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_cerePerPenny",
                  "nameLocation": "1398:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1393:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:20:2"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:0:2"
            },
            "scope": 262,
            "src": "1368:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1708:277:2",
              "statements": [
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "admin",
                      "nameLocation": "1727:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1719:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 133,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4065,
                      "src": "1735:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1719:28:2"
                },
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1763:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1758:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1758:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 142,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1798:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1790:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 140,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1790:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1790:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 144,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1805:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1772:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2663,
                      "src": "1772:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1758:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1871:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1863:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 150,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1863:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1863:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 154,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1890:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1909:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1931:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1951:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 147,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1825:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2887,
                      "src": "1825:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:129:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:129:2"
                },
                {
                  "expression": {
                    "id": 160,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 137,
                    "src": "1972:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "1965:13:2"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "1507:117:2",
              "text": "Withdraw all CERE from this contract.\n Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
            },
            "functionSelector": "3ccfd60b",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 126,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 498,
                    "src": "1669:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 127,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "1660:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1660:28:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1638:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:2"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1702:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:6:2"
            },
            "scope": 262,
            "src": "1629:356:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "2374:397:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 179,
                          "name": "cerePerPenny",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "2392:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2408:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2392:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e67652072617465206d75737420626520636f6e66696775726564",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2411:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        },
                        "value": "Exchange rate must be configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d66a356fb674ff8c79920b6a082854658850a64a7882cfed4ce745f506da5fb9",
                          "typeString": "literal_string \"Exchange rate must be configured\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2384:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2384:62:2"
                },
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "cereToSend",
                      "nameLocation": "2462:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "2457:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2457:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 187,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2475:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 188,
                      "name": "cerePerPenny",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2493:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2475:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2457:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 196,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2562:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FiatGateway_$262",
                              "typeString": "contract FiatGateway"
                            }
                          ],
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2554:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2554:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2554:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 198,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "2581:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 199,
                        "name": "CURRENCY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2600:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 200,
                        "name": "cereToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2622:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 191,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "2516:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2887,
                      "src": "2516:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:133:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:133:2"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 204,
                      "name": "totalPenniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2660:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 205,
                      "name": "penniesReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2684:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2660:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2660:39:2"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 208,
                      "name": "totalCereSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2709:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 209,
                      "name": "cereToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "2726:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2709:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:27:2"
                },
                {
                  "expression": {
                    "id": 212,
                    "name": "cereToSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 186,
                    "src": "2754:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 177,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "2747:17:2"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "1991:224:2",
              "text": "Obtain CERE based on a fiat payment.\n The amount of fiat is recorded, and exchanged for an amount of CERE.\n Only the gateway with PAYMENT_SERVICE role can report successful payments."
            },
            "functionSelector": "c4f7f9c5",
            "id": 215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 173,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76,
                    "src": "2338:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "2329:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2329:25:2"
              }
            ],
            "name": "buyCereFromUsd",
            "nameLocation": "2229:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "2258:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2253:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2291:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2283:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2311:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2306:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2243:74:2"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "2368:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2367:6:2"
            },
            "scope": 262,
            "src": "2220:551:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "3364:156:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 235,
                        "name": "penniesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "3390:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 236,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3407:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 237,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3414:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 234,
                      "name": "buyCereFromUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3375:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3375:45:2"
                },
                {
                  "assignments": [
                    241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3436:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "3431:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 240,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3431:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3445:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3431:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 247,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3474:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3481:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 249,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3489:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 250,
                        "name": "nftPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "3496:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 251,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "3506:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 244,
                        "name": "davinci",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "3456:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Davinci_$59",
                          "typeString": "contract Davinci"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "3456:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:57:2"
                }
              ]
            },
            "documentation": {
              "id": 216,
              "nodeType": "StructuredDocumentation",
              "src": "2777:381:2",
              "text": "Obtain CERE and buy an NFT based on a fiat payment.\n CERE tokens are obtained in the same way as buyCereFromUsd.\n Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange.\n Only the gateway with PAYMENT_SERVICE role can report successful payments."
            },
            "functionSelector": "a87a9322",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 231,
                    "name": "PAYMENT_SERVICE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 76,
                    "src": "3347:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 230,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "3338:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3338:25:2"
              }
            ],
            "name": "buyNftFromUsd",
            "nameLocation": "3172:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "penniesReceived",
                  "nameLocation": "3200:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3195:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3233:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3225:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "3256:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3248:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3277:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3272:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "nftPrice",
                  "nameLocation": "3297:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3292:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3320:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3315:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3185:141:2"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:0:2"
            },
            "scope": 262,
            "src": "3163:357:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "3640:62:2",
              "statements": [
                {
                  "id": 259,
                  "nodeType": "UncheckedBlock",
                  "src": "3646:12:2",
                  "statements": []
                }
              ]
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "3526:72:2",
              "text": "Guarantee that a version of Solidity with safe math is used."
            },
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mathIsSafe",
            "nameLocation": "3612:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:2:2"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:2"
            },
            "scope": 262,
            "src": "3603:99:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 263,
        "src": "347:3357:2",
        "usedErrors": []
      }
    ],
    "src": "0:3704:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0xf038C9F12884b4544497fE5857506D1B78E8aC41",
      "transactionHash": "0xe9b34c144806c274614b3f7a1237ce05135bd790b5788549c146deb19bfb7886"
    },
    "1628532541290": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x97002E5615ec93452D1308d4f914d4e735e1F156",
      "transactionHash": "0x8c2776112be0b9d39034c8c17dffe1ab0454889badcd03aed569b4a4a65c202b"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-11T07:16:57.375Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "CURRENCY()": {
        "notice": "The token ID that represents the CERE currency for all payments in this contract. "
      },
      "buyCereFromUsd(uint256,address,uint256)": {
        "notice": "Obtain CERE based on a fiat payment. The amount of fiat is recorded, and exchanged for an amount of CERE. Only the gateway with PAYMENT_SERVICE role can report successful payments."
      },
      "buyNftFromUsd(uint256,address,address,uint256,uint256,uint256)": {
        "notice": "Obtain CERE and buy an NFT based on a fiat payment. CERE tokens are obtained in the same way as buyCereFromUsd. Then, the tokens are used to buy an NFT in the same transaction. The NFT must be available for sale from the seller in SimpleExchange. Only the gateway with PAYMENT_SERVICE role can report successful payments."
      },
      "setExchangeRate(uint256)": {
        "notice": "Set the exchange rate between fiat (USD) and Davinci currency (CERE). The rate is given as number of CERE (with 10 decimals) per USD cent (1 penny). Only the rate service with the EXCHANGE_RATE_ORACLE role can change the rate."
      },
      "totalCereSent()": {
        "notice": "How many CERE tokens were sold so far."
      },
      "totalPenniesReceived()": {
        "notice": "How many USD cents were received so far, according to the payment service."
      },
      "withdraw()": {
        "notice": "Withdraw all CERE from this contract. Only accounts with DEFAULT_ADMIN_ROLE can withdraw."
      }
    },
    "notice": "The FiatGateway contract allows buying NFTs from an external fiat payment. This contract connects to the Davinci contract. It must hold a balance of CERE recognized by Davinci. This contract uses the SimpleExchange API to buy NFTs.",
    "version": 1
  }
}