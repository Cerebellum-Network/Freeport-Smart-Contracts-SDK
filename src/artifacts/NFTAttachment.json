{
  "contractName": "NFTAttachment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Freeport",
          "name": "_freeport",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "anonym",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "AnonymAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "MinterAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "OwnerAttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "freeport",
      "outputs": [
        {
          "internalType": "contract Freeport",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "minterAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "ownerAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "attachment",
          "type": "bytes"
        }
      ],
      "name": "anonymAttachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "_minterFromNftId",
      "outputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"_freeport\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"anonym\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"AnonymAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"MinterAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"OwnerAttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"_minterFromNftId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"anonymAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeport\",\"outputs\":[{\"internalType\":\"contract Freeport\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"minterAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"attachment\",\"type\":\"bytes\"}],\"name\":\"ownerAttachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AnonymAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means.\"},\"MinterAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\"},\"OwnerAttachToNFT(address,uint256,bytes)\":{\"notice\":\"The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event.\"}},\"kind\":\"user\",\"methods\":{\"_minterFromNftId(uint256)\":{\"notice\":\"Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\"},\"anonymAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as any account.\"},\"constructor\":{\"notice\":\"Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\"},\"freeport()\":{\"notice\":\"This attachment contract refers to the NFT contract in this variable.\"},\"minterAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format.\"},\"ownerAttachToNFT(uint256,bytes)\":{\"notice\":\"Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards.\"}},\"notice\":\"The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTAttachment.sol\":\"NFTAttachment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/Freeport.sol\":{\"keccak256\":\"0xa89a5606e1bbc4a3e063749b177ce75eb3deb5901d509c741f5cde84ef542415\",\"urls\":[\"bzz-raw://cfb356052d2730f1373efaeb2566a233162e0ee983556cb43b31e850dccc4b4d\",\"dweb:/ipfs/QmbYDB2eCbUnMz8aEQ13RdP13C8CdmcGuApDB57u2JCJin\"]},\"project:/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x175771b8faa3b4e9493ac4d08156b589f67b7ff670528f975fa42e91abfc4f88\",\"urls\":[\"bzz-raw://4d272b44e09dcfeecb7ddd8ae7d56f689bbb8d2b02049cec3370141dcecbebaf\",\"dweb:/ipfs/QmcnXJKGKus5YjDoou8kSizugAgQvrUGTa6GgKCeuQb9uM\"]},\"project:/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"project:/contracts/freeportParts/BaseNFT.sol\":{\"keccak256\":\"0x2b13cfef09bbd2d5d7e681cdbf3f8d7294437dd761282fdc3ade98058ef633c3\",\"urls\":[\"bzz-raw://c713051b9ad441af6020c87db9797780bc746c67cc740018a3aed06dff6c7e7a\",\"dweb:/ipfs/QmeozyvJycaThbBtJy2LnYDZJzX7Eo6UsCMxHacyDgwvvB\"]},\"project:/contracts/freeportParts/Currency.sol\":{\"keccak256\":\"0x697528f47fe2989d1fef56596485917307c9cc1703040d60e56bebacb85b9dc3\",\"urls\":[\"bzz-raw://78226403bc603003a1cf6e3fd1e3da2743f13f9471ff713b304db3f99e2f3ffd\",\"dweb:/ipfs/QmTipFw5JFhmK37FN19EfPvtcsa5XRF3Aj1MqM5csVWfE7\"]},\"project:/contracts/freeportParts/ERC20Adapter.sol\":{\"keccak256\":\"0x66cf6b9c93c0f9f88f62b21c4622a19e1b005a9adf0f4c14ce88013d76d0f19d\",\"urls\":[\"bzz-raw://58fea7ff46ac858835f5d9062924ecfd9d01095d4a4bb44ee136a406a3ed012c\",\"dweb:/ipfs/QmP5JypgCuiDriaJHzcgD6c5764xzfev7ehdGgBwEWgXhp\"]},\"project:/contracts/freeportParts/Issuance.sol\":{\"keccak256\":\"0x1474a148421aba04234c206a7dbc460b1b0bb87e82e687d00d56c5aa22b42eec\",\"urls\":[\"bzz-raw://51750c6ba28a728f87799d767d069a446499866da9e90e256b3b2b35bec664ec\",\"dweb:/ipfs/QmPqZWfVLxfjekEvDzuFYkzRQXeDf6Pjwo3avU7tLbiVYV\"]},\"project:/contracts/freeportParts/JointAccounts.sol\":{\"keccak256\":\"0x46706d42441ad9f47cc1601e1a4bcbb45bc7d15e1e0a6da7299f6a8e309ac9a1\",\"urls\":[\"bzz-raw://cb88d8d36edceca3e6d3ed70131669a804537f6ea91b3ddf787aba89b923d40e\",\"dweb:/ipfs/QmWX7YzXDy3oQHFB55fVoVNxJg9CsoershK2xVUKTgHhPo\"]},\"project:/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0x12579308ed77228d87aad495399c8feff27642efa9aae8fe2fd2049da4140459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://568cafead94d0ecbee30203822e404d1bf53653257f933db70b6a035223189dd\",\"dweb:/ipfs/QmWmgcDLWNeswQF5WGM4zXpdaXcA4sQdWZbGvfSLEZWF2K\"]},\"project:/contracts/freeportParts/SimpleExchange.sol\":{\"keccak256\":\"0x99adff6ce49b17721004385476088979b1d79583ba83c81041c762762f543684\",\"urls\":[\"bzz-raw://fb2ca85b23d41f4b1fc339551bd827e95b19101b95c5fccd6b6590a724265e99\",\"dweb:/ipfs/QmeFYdincJfWLG3412Db8PPb5RBKVW86nuzw3AUxKjMw6B\"]},\"project:/contracts/freeportParts/TransferFees.sol\":{\"keccak256\":\"0xc0bc6eacd5f58ecb10c3e06c9a34d75c7e665d4b85afb9b438d13c9bb515c347\",\"urls\":[\"bzz-raw://d13d012caa46fda6b3853e10a95ce60924f68865b68619591483afea1a3563f2\",\"dweb:/ipfs/QmbeRRXZ8qdEbUrSSzrgfWWr3otMAeB33bXcGGu7JaPAvc\"]},\"project:/contracts/freeportParts/TransferOperator.sol\":{\"keccak256\":\"0xa3b4dd13b4bfd8894da16813415503a755e8fc1a8e081f5a98ffeb7782395d4c\",\"urls\":[\"bzz-raw://539d2f0d0c50ac93ce9f3da7010c06ee2868bb2a27a282a988d88c5644c34609\",\"dweb:/ipfs/Qmf9j9neJ3h9JfekGZ1FA9uYLv599WZkqjMv4KojtCdWZy\"]},\"project:/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xeaafe1c2ab42941716da1c12d401bb708528bd08053d043f16c102d4bb219c8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5e012cd4f44be154d1d53e49de4298d47b44393086c71aa7009bc6040eef73\",\"dweb:/ipfs/QmbxfsFYjeksnjW8GYTHEiXx19iN47VdcGdyqaSRPuFvSR\"]},\"project:/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"project:/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7c0ea2d284bad1aa002165ba4c5eac30070be8e56b19dba1ac7c8f2c8bd4832c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46cd1e78707bb21fc6255c1cc9356537cc767e74f112553ea9305938a325bacb\",\"dweb:/ipfs/QmcG9KekAb77Bh5S62w8SJ4N8qhsmx8ewWF5cWoxC9DEuN\"]},\"project:/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"project:/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"project:/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"project:/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"project:/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d0f380380610d0f83398101604081905261002f91610067565b6001600160a01b03811661004257600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610095565b600060208284031215610078578081fd5b81516001600160a01b038116811461008e578182fd5b9392505050565b610c6b806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf578063248a9ca3146100e75780632f2ff15d1461010857806336568abe1461011d578063572b6c051461013057806391d14854146101435780639470ad85146101565780639a86e8ce14610181578063a217fddf14610196578063b85f8ca91461019e578063c0ba9f55146101b1578063d2e9277b146101c4578063d547741f146101d8578063f9715b8f146101eb575b600080fd5b6100d26100cd3660046109c9565b6101fe565b60405190151581526020015b60405180910390f35b6100fa6100f5366004610986565b610235565b6040519081526020016100de565b61011b61011636600461099e565b61024a565b005b61011b61012b36600461099e565b610273565b6100d261013e36600461096c565b610306565b6100d261015136600461099e565b61031c565b600154610169906001600160a01b031681565b6040516001600160a01b0390911681526020016100de565b6100fa600080516020610c1683398151915281565b6100fa600081565b61011b6101ac366004610a09565b610345565b61011b6101bf366004610a09565b610416565b6101696101d2366004610986565b60601c90565b61011b6101e636600461099e565b610548565b61011b6101f9366004610a09565b610567565b60006001600160e01b03198216637965db0b60e01b148061022f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61025382610235565b6102648161025f6105da565b6105fc565b61026e8383610660565b505050565b61027b6105da565b6001600160a01b0316816001600160a01b0316146102f85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61030282826106e5565b5050565b600061022f600080516020610c16833981519152835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b826103625760405162461bcd60e51b81526004016102ef90610b50565b600061036c6105da565b9050600061037a8560601c90565b9050806001600160a01b0316826001600160a01b0316146103cb5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b60448201526064016102ef565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d3228686604051610407929190610aee565b60405180910390a35050505050565b826104335760405162461bcd60e51b81526004016102ef90610b50565b600061043d6105da565b600154604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b15801561048d57600080fd5b505afa1580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c591906109f1565b90506000811161050c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b60448201526064016102ef565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610407929190610aee565b61055182610235565b61055d8161025f6105da565b61026e83836106e5565b826105845760405162461bcd60e51b81526004016102ef90610b50565b600061058e6105da565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516105cc929190610aee565b60405180910390a350505050565b60006105e533610306565b156105f7575060131936013560601c90565b503390565b610606828261031c565b6103025761061e816001600160a01b03166014610768565b610629836020610768565b60405160200161063a929190610a7f565b60408051601f198184030181529082905262461bcd60e51b82526102ef91600401610b1d565b61066a828261031c565b610302576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556106a16105da565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6106ef828261031c565b15610302576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556107246105da565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60606000610777836002610b99565b610782906002610b81565b6001600160401b038111156107a757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107d1576020820181803683370190505b509050600360fc1b816000815181106107fa57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061083757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061085b846002610b99565b610866906001610b81565b90505b60018111156108fa576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108a857634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106108cc57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936108f381610be8565b9050610869565b5083156109495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102ef565b9392505050565b80356001600160a01b038116811461096757600080fd5b919050565b60006020828403121561097d578081fd5b61094982610950565b600060208284031215610997578081fd5b5035919050565b600080604083850312156109b0578081fd5b823591506109c060208401610950565b90509250929050565b6000602082840312156109da578081fd5b81356001600160e01b031981168114610949578182fd5b600060208284031215610a02578081fd5b5051919050565b600080600060408486031215610a1d578081fd5b8335925060208401356001600160401b0380821115610a3a578283fd5b818601915086601f830112610a4d578283fd5b813581811115610a5b578384fd5b876020828501011115610a6c578384fd5b6020830194508093505050509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610ab1816017850160208801610bb8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610ae2816028840160208801610bb8565b01602801949350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020815260008251806020840152610b3c816040850160208701610bb8565b601f01601f19169190910160400192915050565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b60008219821115610b9457610b94610bff565b500190565b6000816000190483118215151615610bb357610bb3610bff565b500290565b60005b83811015610bd3578181015183820152602001610bbb565b83811115610be2576000848401525b50505050565b600081610bf757610bf7610bff565b506000190190565b634e487b7160e01b600052601160045260246000fdfe3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220f7c66f32d0666511241c262ab0cead885c6403db2ecfbdbdceda6cf94b21fbb664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf578063248a9ca3146100e75780632f2ff15d1461010857806336568abe1461011d578063572b6c051461013057806391d14854146101435780639470ad85146101565780639a86e8ce14610181578063a217fddf14610196578063b85f8ca91461019e578063c0ba9f55146101b1578063d2e9277b146101c4578063d547741f146101d8578063f9715b8f146101eb575b600080fd5b6100d26100cd3660046109c9565b6101fe565b60405190151581526020015b60405180910390f35b6100fa6100f5366004610986565b610235565b6040519081526020016100de565b61011b61011636600461099e565b61024a565b005b61011b61012b36600461099e565b610273565b6100d261013e36600461096c565b610306565b6100d261015136600461099e565b61031c565b600154610169906001600160a01b031681565b6040516001600160a01b0390911681526020016100de565b6100fa600080516020610c1683398151915281565b6100fa600081565b61011b6101ac366004610a09565b610345565b61011b6101bf366004610a09565b610416565b6101696101d2366004610986565b60601c90565b61011b6101e636600461099e565b610548565b61011b6101f9366004610a09565b610567565b60006001600160e01b03198216637965db0b60e01b148061022f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b61025382610235565b6102648161025f6105da565b6105fc565b61026e8383610660565b505050565b61027b6105da565b6001600160a01b0316816001600160a01b0316146102f85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61030282826106e5565b5050565b600061022f600080516020610c16833981519152835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b826103625760405162461bcd60e51b81526004016102ef90610b50565b600061036c6105da565b9050600061037a8560601c90565b9050806001600160a01b0316826001600160a01b0316146103cb5760405162461bcd60e51b815260206004820152600b60248201526a27b7363c9036b4b73a32b960a91b60448201526064016102ef565b84826001600160a01b03167f5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d3228686604051610407929190610aee565b60405180910390a35050505050565b826104335760405162461bcd60e51b81526004016102ef90610b50565b600061043d6105da565b600154604051627eeac760e11b81526001600160a01b038084166004830152602482018890529293506000929091169062fdd58e9060440160206040518083038186803b15801561048d57600080fd5b505afa1580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c591906109f1565b90506000811161050c5760405162461bcd60e51b815260206004820152601260248201527127b7363c9031bab93932b73a1037bbb732b960711b60448201526064016102ef565b84826001600160a01b03167f70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a558686604051610407929190610aee565b61055182610235565b61055d8161025f6105da565b61026e83836106e5565b826105845760405162461bcd60e51b81526004016102ef90610b50565b600061058e6105da565b905083816001600160a01b03167f4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf85856040516105cc929190610aee565b60405180910390a350505050565b60006105e533610306565b156105f7575060131936013560601c90565b503390565b610606828261031c565b6103025761061e816001600160a01b03166014610768565b610629836020610768565b60405160200161063a929190610a7f565b60408051601f198184030181529082905262461bcd60e51b82526102ef91600401610b1d565b61066a828261031c565b610302576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556106a16105da565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6106ef828261031c565b15610302576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556107246105da565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60606000610777836002610b99565b610782906002610b81565b6001600160401b038111156107a757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107d1576020820181803683370190505b509050600360fc1b816000815181106107fa57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061083757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061085b846002610b99565b610866906001610b81565b90505b60018111156108fa576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106108a857634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106108cc57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936108f381610be8565b9050610869565b5083156109495760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102ef565b9392505050565b80356001600160a01b038116811461096757600080fd5b919050565b60006020828403121561097d578081fd5b61094982610950565b600060208284031215610997578081fd5b5035919050565b600080604083850312156109b0578081fd5b823591506109c060208401610950565b90509250929050565b6000602082840312156109da578081fd5b81356001600160e01b031981168114610949578182fd5b600060208284031215610a02578081fd5b5051919050565b600080600060408486031215610a1d578081fd5b8335925060208401356001600160401b0380821115610a3a578283fd5b818601915086601f830112610a4d578283fd5b813581811115610a5b578384fd5b876020828501011115610a6c578384fd5b6020830194508093505050509250925092565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351610ab1816017850160208801610bb8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610ae2816028840160208801610bb8565b01602801949350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020815260008251806020840152610b3c816040850160208701610bb8565b601f01601f19169190910160400192915050565b6020808252601790820152760c081a5cc81b9bdd0818481d985b1a5908139195081251604a1b604082015260600190565b60008219821115610b9457610b94610bff565b500190565b6000816000190483118215151615610bb357610bb3610bff565b500290565b60005b83811015610bd3578181015183820152602001610bbb565b83811115610be2576000848401525b50505050565b600081610bf757610bf7610bff565b506000190190565b634e487b7160e01b600052601160045260246000fdfe3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a2646970667358221220f7c66f32d0666511241c262ab0cead885c6403db2ecfbdbdceda6cf94b21fbb664736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:342:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "111:229:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "157:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "166:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "174:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "159:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "159:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "159:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "132:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "141:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "128:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "128:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "153:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "124:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "121:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "192:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "211:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "205:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "196:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "284:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "293:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "301:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "286:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "286:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "286:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "243:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "254:5:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "269:3:34",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "274:1:34",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:11:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "278:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "261:19:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "250:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "250:31:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "240:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "240:42:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "233:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "233:50:34"
                  },
                  "nodeType": "YulIf",
                  "src": "230:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "319:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "329:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "319:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Freeport_$947_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "77:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "88:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "100:6:34",
                "type": ""
              }
            ],
            "src": "14:326:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_Freeport_$947_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7591:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:34",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:34",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:34"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:34"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:34",
                "type": ""
              }
            ],
            "src": "14:173:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:34",
                "type": ""
              }
            ],
            "src": "192:196:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:120:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "509:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "518:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "526:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "511:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "511:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "511:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "484:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "493:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "480:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "505:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "476:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "473:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "544:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "567:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "554:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "429:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "440:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "452:6:34",
                "type": ""
              }
            ],
            "src": "393:190:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "675:177:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "721:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "730:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "738:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "723:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "723:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "723:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "696:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "705:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "692:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "717:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "688:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "688:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "685:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "756:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "766:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "756:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "798:48:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "831:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "842:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "827:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "808:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:38:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "633:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "644:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "656:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "664:6:34",
                "type": ""
              }
            ],
            "src": "588:264:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "926:237:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "972:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "981:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "989:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "974:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "974:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "974:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "956:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "943:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "943:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "968:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "939:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "939:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "936:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1033:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1020:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1020:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1011:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1107:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1116:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1124:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1109:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1109:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1109:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1065:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1076:5:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1087:3:34",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1092:10:34",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1083:20:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1072:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1072:32:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1062:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:43:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:51:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1052:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1142:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1152:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1142:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:34",
                "type": ""
              }
            ],
            "src": "857:306:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1238:120:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1284:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1293:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1301:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1286:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1286:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1286:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1259:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1255:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1255:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1251:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1248:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1319:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1342:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1329:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1319:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1204:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1215:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1227:6:34",
                "type": ""
              }
            ],
            "src": "1168:190:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1444:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1490:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1499:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1507:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1492:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1492:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1492:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1465:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1474:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1461:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1461:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1486:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1457:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1454:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1525:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1541:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1535:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1535:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1525:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1410:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1421:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1433:6:34",
                "type": ""
              }
            ],
            "src": "1363:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1668:603:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1714:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1723:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1731:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1716:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1716:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1716:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1689:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1698:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1685:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1685:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1681:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1681:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1678:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1749:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1772:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1759:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1759:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1749:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1791:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1822:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1833:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1818:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1805:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1795:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1846:28:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1864:2:34",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1868:1:34",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1860:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1860:10:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:1:34",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1856:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1856:18:34"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1850:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1901:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1910:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1918:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1903:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1903:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1903:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1889:6:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1897:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1886:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1886:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1883:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1936:32:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1950:9:34"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1961:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1946:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1946:22:34"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1940:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2016:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2025:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2033:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2018:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1995:2:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1999:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1991:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1991:13:34"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2006:7:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1980:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1977:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2051:30:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2078:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2065:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:16:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2055:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2108:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2117:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2125:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2110:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2110:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2110:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2096:6:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2104:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2093:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2090:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2184:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2193:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2201:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2186:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2186:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2186:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2157:2:34"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2161:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2153:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2153:15:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2170:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2149:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2149:24:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2175:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2146:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:37:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2143:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2219:21:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2233:2:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2237:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2229:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2229:11:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2219:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2249:16:34",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2259:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2249:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1618:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1629:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1641:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1649:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1657:6:34",
                "type": ""
              }
            ],
            "src": "1562:709:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2665:397:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2682:3:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2687:25:34",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2675:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2675:38:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2675:38:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2722:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2742:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2736:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2736:13:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2726:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2784:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2792:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2780:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2780:17:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2803:3:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2808:2:34",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2799:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2799:12:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2813:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2758:21:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2758:62:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2829:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2843:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2848:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2839:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2839:16:34"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2833:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2875:2:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2879:2:34",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2871:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2871:11:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2884:19:34",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2864:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2864:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2864:40:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2913:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2935:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2929:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:13:34"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2917:8:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2977:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2985:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2973:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2973:17:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2996:2:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3000:2:34",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2992:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2992:11:34"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "3005:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2951:21:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:63:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2951:63:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3023:33:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3038:2:34"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3042:8:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3034:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:17:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3053:2:34",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3030:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:26:34"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3023:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2633:3:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2638:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2646:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2657:3:34",
                "type": ""
              }
            ],
            "src": "2276:786:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3168:102:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3178:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3190:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3201:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3186:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3178:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3220:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3235:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3251:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3256:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3247:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3247:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3260:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3243:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3243:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3231:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3231:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3213:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3213:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3213:51:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3137:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3148:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3159:4:34",
                "type": ""
              }
            ],
            "src": "3067:203:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3404:145:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3414:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3426:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3437:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3422:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3414:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3456:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3471:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3487:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3492:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3483:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3483:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3496:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3479:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3479:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3467:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3467:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3449:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3449:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3449:51:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3520:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3531:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3516:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3516:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3536:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3509:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3509:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3509:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3365:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3376:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3384:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3395:4:34",
                "type": ""
              }
            ],
            "src": "3275:274:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3649:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3659:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3671:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3682:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3667:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3667:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3659:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3701:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3726:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3719:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3719:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3712:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3712:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3694:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3694:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3694:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3618:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3629:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3640:4:34",
                "type": ""
              }
            ],
            "src": "3554:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3847:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3857:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3869:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3880:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3865:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3865:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3857:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3899:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3910:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3892:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3892:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3892:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3816:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3827:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3838:4:34",
                "type": ""
              }
            ],
            "src": "3746:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:262:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4074:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4085:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4067:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4067:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4067:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4108:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4119:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4124:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4097:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4157:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4168:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4153:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4153:18:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4173:6:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4181:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4140:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4140:48:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4140:48:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4212:9:34"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4223:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4208:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4208:22:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4232:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4204:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4204:31:34"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4237:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4197:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4197:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4197:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4251:62:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4267:9:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4286:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4294:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4282:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4282:15:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4303:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4299:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4299:7:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4278:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4278:29:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4263:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4263:45:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4310:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4259:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:54:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4251:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4018:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4029:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4037:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4048:4:34",
                "type": ""
              }
            ],
            "src": "3928:391:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4441:102:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4451:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4463:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4474:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4459:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4459:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4451:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4493:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4508:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4524:3:34",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4529:1:34",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4520:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4520:11:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4533:1:34",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4516:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4516:19:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4504:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4504:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4486:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4486:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4486:51:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freeport_$947__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4410:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4421:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4432:4:34",
                "type": ""
              }
            ],
            "src": "4324:219:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4669:262:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4686:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4697:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4679:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4679:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4679:21:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4709:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4729:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4723:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:13:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4713:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4756:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4767:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4752:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4752:18:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4772:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4745:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4745:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4745:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4814:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4822:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4810:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4810:15:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4831:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4842:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4827:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4827:18:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4847:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4788:21:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:66:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4788:66:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4863:62:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4879:9:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4898:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4906:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4894:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4894:15:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4915:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4911:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4911:7:34"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4890:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4890:29:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4875:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4875:45:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4922:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4871:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:54:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4863:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4638:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4649:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4660:4:34",
                "type": ""
              }
            ],
            "src": "4548:383:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5110:182:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5127:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5138:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5120:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5120:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5120:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5161:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5172:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5157:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5157:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5177:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5150:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5150:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5150:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5200:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5211:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5196:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5196:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5216:34:34",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5189:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5189:62:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5260:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5272:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5283:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5268:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5268:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5260:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5087:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5101:4:34",
                "type": ""
              }
            ],
            "src": "4936:356:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5471:168:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5488:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5499:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5481:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5481:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5481:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5522:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5533:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5518:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5518:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5538:2:34",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5511:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5511:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5511:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5561:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5572:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5557:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5557:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5577:20:34",
                        "type": "",
                        "value": "Only current owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5550:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5550:48:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5550:48:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5607:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5619:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5630:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5615:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5615:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5607:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5448:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5462:4:34",
                "type": ""
              }
            ],
            "src": "5297:342:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5818:161:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5835:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5846:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5828:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5828:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5828:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5869:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5880:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5865:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5865:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5885:2:34",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5858:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5858:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5858:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5908:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5919:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5904:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5904:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5924:13:34",
                        "type": "",
                        "value": "Only minter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5897:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5897:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5897:41:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5947:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5959:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5970:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5955:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5955:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5947:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5795:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5809:4:34",
                "type": ""
              }
            ],
            "src": "5644:335:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6158:173:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6175:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6186:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6168:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6168:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6168:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6209:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6220:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6205:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6205:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6225:2:34",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6198:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6198:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6198:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6248:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6259:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6244:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6244:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6264:25:34",
                        "type": "",
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6237:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6237:53:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6237:53:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6299:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6311:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6322:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6307:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6307:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6299:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6135:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6149:4:34",
                "type": ""
              }
            ],
            "src": "5984:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6510:237:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6527:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6538:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6520:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6520:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6520:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6561:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6572:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6557:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6557:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6577:2:34",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6550:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6550:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6550:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6600:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6611:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6596:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6596:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6616:34:34",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6589:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6589:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6589:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6671:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6667:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6667:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6687:17:34",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6714:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6726:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6737:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6722:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6722:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6714:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6487:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6501:4:34",
                "type": ""
              }
            ],
            "src": "6336:411:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6800:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6827:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6829:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6829:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6829:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6816:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6823:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6819:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6819:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6813:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6813:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6810:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6858:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6869:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6872:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6865:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6865:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6858:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6783:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6786:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6792:3:34",
                "type": ""
              }
            ],
            "src": "6752:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6937:116:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6996:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6998:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6998:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6998:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6968:1:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6961:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6961:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6954:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6954:17:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6976:1:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6987:1:34",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6983:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6983:6:34"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6991:1:34"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6979:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6979:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6973:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6973:21:34"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6950:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6950:45:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6947:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7027:20:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7042:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7045:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7038:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7027:7:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6916:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6919:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6925:7:34",
                "type": ""
              }
            ],
            "src": "6885:168:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7111:205:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7121:10:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7130:1:34",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7125:1:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7190:63:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7215:3:34"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7220:1:34"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7211:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7211:11:34"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7234:3:34"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7239:1:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7230:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7230:11:34"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7224:5:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7224:18:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7204:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7204:39:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7204:39:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7151:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7154:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7148:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7148:13:34"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7162:19:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7164:15:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7173:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7176:2:34",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7169:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7169:10:34"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7164:1:34"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7144:3:34",
                    "statements": []
                  },
                  "src": "7140:113:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7279:31:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7292:3:34"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7297:6:34"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7288:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7288:16:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7306:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7281:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7281:27:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7281:27:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7268:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7271:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7265:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7265:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "7262:2:34"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7089:3:34",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7094:3:34",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7099:6:34",
                "type": ""
              }
            ],
            "src": "7058:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7368:89:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7395:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7397:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7397:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7397:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7388:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7381:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7381:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "7378:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7426:25:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7437:5:34"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7448:1:34",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7444:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7444:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7433:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7433:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7426:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7350:5:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7360:3:34",
                "type": ""
              }
            ],
            "src": "7321:136:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7494:95:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7518:3:34",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7523:10:34",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7514:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7514:20:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7504:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7504:31:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7504:31:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7551:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7554:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7544:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7544:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7544:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7575:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7578:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7568:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7568:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7568:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7462:127:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value2, value2) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value2, value2) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), tail)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_contract$_Freeport_$947__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only current owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Only minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"0 is not a valid NFT ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "626:3569:8:-:0;;;1178:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1228:32:8;;1220:41;;;;;;1271:8;:20;;-1:-1:-1;;;;;;1271:20:8;-1:-1:-1;;;;;1271:20:8;;;;;;;;;;626:3569;;14:326:34;100:6;153:2;141:9;132:7;128:23;124:32;121:2;;;174:6;166;159:22;121:2;205:16;;-1:-1:-1;;;;;250:31:34;;240:42;;230:2;;301:6;293;286:22;230:2;329:5;111:229;-1:-1:-1;;;111:229:34:o;:::-;626:3569:8;;;;;;",
  "deployedSourceMap": "626:3569:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:214:11;;;;;;:::i;:::-;;:::i;:::-;;;3719:14:34;;3712:22;3694:41;;3682:2;3667:18;4073:214:11;;;;;;;;5348:121;;;;;;:::i;:::-;;:::i;:::-;;;3892:25:34;;;3880:2;3865:18;5348:121:11;3847:76:34;5719:145:11;;;;;;:::i;:::-;;:::i;:::-;;6736:214;;;;;;:::i;:::-;;:::i;355:143:17:-;;;;;;:::i;:::-;;:::i;4374:137:11:-;;;;;;:::i;:::-;;:::i;780:24:8:-;;;;;-1:-1:-1;;;;;780:24:8;;;;;;-1:-1:-1;;;;;3231:32:34;;;3213:51;;3201:2;3186:18;780:24:8;3168:102:34;274:74:17;;-1:-1:-1;;;;;;;;;;;274:74:17;;2394:49:11;;2439:4;2394:49;;2493:360:8;;;;;;:::i;:::-;;:::i;3041:356::-;;;;;;:::i;:::-;;:::i;3961:232::-;;;;;;:::i;:::-;4153:7;4075:86;;3961:232;6098:147:11;;;;;;:::i;:::-;;:::i;3485:248:8:-;;;;;;:::i;:::-;;:::i;4073:214:11:-;4158:4;-1:-1:-1;;;;;;4181:47:11;;-1:-1:-1;;;4181:47:11;;:99;;-1:-1:-1;;;;;;;;;;871:40:32;;;4244:36:11;4174:106;4073:214;-1:-1:-1;;4073:214:11:o;5348:121::-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121::o;5719:145::-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;:::-;3958:10;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;:::-;5719:145:::0;;;:::o;6736:214::-;6842:12;:10;:12::i;:::-;-1:-1:-1;;;;;6831:23:11;:7;-1:-1:-1;;;;;6831:23:11;;6823:83;;;;-1:-1:-1;;;6823:83:11;;6538:2:34;6823:83:11;;;6520:21:34;6577:2;6557:18;;;6550:30;6616:34;6596:18;;;6589:62;-1:-1:-1;;;6667:18:34;;;6660:45;6722:19;;6823:83:11;;;;;;;;;6917:26;6929:4;6935:7;6917:11;:26::i;:::-;6736:214;;:::o;355:143:17:-;431:4;454:37;-1:-1:-1;;;;;;;;;;;481:9:17;4374:137:11;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:11;;;;;;;;;;;;;;;4374:137::o;2493:360:8:-;2591:17;2583:53;;;;-1:-1:-1;;;2583:53:8;;;;;;;:::i;:::-;2646:14;2663:12;:10;:12::i;:::-;2646:29;;2685:20;2708:23;2725:5;4153:7;4075:86;;3961:232;2708:23;2685:46;;2759:12;-1:-1:-1;;;;;2749:22:8;:6;-1:-1:-1;;;;;2749:22:8;;2741:46;;;;-1:-1:-1;;;2741:46:8;;5846:2:34;2741:46:8;;;5828:21:34;5885:2;5865:18;;;5858:30;-1:-1:-1;;;5904:18:34;;;5897:41;5955:18;;2741:46:8;5818:161:34;2741:46:8;2828:5;2820:6;-1:-1:-1;;;;;2802:44:8;;2835:10;;2802:44;;;;;;;:::i;:::-;;;;;;;;2493:360;;;;;:::o;3041:356::-;3138:17;3130:53;;;;-1:-1:-1;;;3130:53:8;;;;;;;:::i;:::-;3193:13;3209:12;:10;:12::i;:::-;3249:8;;:32;;-1:-1:-1;;;3249:32:8;;-1:-1:-1;;;;;3467:32:34;;;3249::8;;;3449:51:34;3516:18;;;3509:34;;;3193:28:8;;-1:-1:-1;3231:15:8;;3249:8;;;;:18;;3422::34;;3249:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3231:50;;3309:1;3299:7;:11;3291:42;;;;-1:-1:-1;;;3291:42:8;;5499:2:34;3291:42:8;;;5481:21:34;5538:2;5518:18;;;5511:30;-1:-1:-1;;;5557:18:34;;;5550:48;5615:18;;3291:42:8;5471:168:34;3291:42:8;3372:5;3365;-1:-1:-1;;;;;3348:42:8;;3379:10;;3348:42;;;;;;;:::i;6098:147:11:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;3958:30::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;3485:248:8:-:0;3583:17;3575:53;;;;-1:-1:-1;;;3575:53:8;;;;;;;:::i;:::-;3638:14;3655:12;:10;:12::i;:::-;3638:29;;3708:5;3700:6;-1:-1:-1;;;;;3682:44:8;;3715:10;;3682:44;;;;;;;:::i;:::-;;;;;;;;3485:248;;;;:::o;504:371:17:-;566:14;596:30;615:10;596:18;:30::i;:::-;592:277;;;-1:-1:-1;;;781:14:17;777:23;764:37;760:2;756:46;504:371;:::o;745:58::-;-1:-1:-1;665:10:28;;504:371:17:o;4792:375:11:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;-1:-1:-1;;;;;5000:41:11;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4923:225:11;;;;;;;;;;-1:-1:-1;;;4909:241:11;;;;;;;:::i;7948:224::-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:11;;;;;;;;;:36;;-1:-1:-1;;8060:36:11;8092:4;8060:36;;;8142:12;:10;:12::i;:::-;-1:-1:-1;;;;;8115:40:11;8133:7;-1:-1:-1;;;;;8115:40:11;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:11;;;;;;;;;:37;;-1:-1:-1;;8290:37:11;;;8373:12;:10;:12::i;:::-;-1:-1:-1;;;;;8346:40:11;8364:7;-1:-1:-1;;;;;8346:40:11;8358:4;8346:40;;;;;;;;;;8178:225;;:::o;1531:437:29:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;-1:-1:-1;;;;;1653:25:29;;;;;-1:-1:-1;;;1653:25:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:29;;1631:47;;-1:-1:-1;;;1688:6:29;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:29;;;;;;;;;;;;:15;-1:-1:-1;;;;;1688:15:29;;;;;;;;;-1:-1:-1;;;1713:6:29;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:29;;;;;;;;;;;;:15;-1:-1:-1;;;;;1713:15:29;;;;;;;;-1:-1:-1;1743:9:29;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1818:5:29;1826:3;1818:11;1809:21;;;;;-1:-1:-1;;;1809:21:29;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:29;;;;;;;;;;;;:33;-1:-1:-1;;;;;1797:33:29;;;;;;;;-1:-1:-1;1854:1:29;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:29;;1875:55;;;;-1:-1:-1;;;1875:55:29;;5138:2:34;1875:55:29;;;5120:21:34;;;5157:18;;;5150:30;5216:34;5196:18;;;5189:62;5268:18;;1875:55:29;5110:182:34;1875:55:29;1954:6;1531:437;-1:-1:-1;;;1531:437:29:o;14:173:34:-;82:20;;-1:-1:-1;;;;;131:31:34;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:190::-;452:6;505:2;493:9;484:7;480:23;476:32;473:2;;;526:6;518;511:22;473:2;-1:-1:-1;554:23:34;;463:120;-1:-1:-1;463:120:34:o;588:264::-;656:6;664;717:2;705:9;696:7;692:23;688:32;685:2;;;738:6;730;723:22;685:2;779:9;766:23;756:33;;808:38;842:2;831:9;827:18;808:38;:::i;:::-;798:48;;675:177;;;;;:::o;857:306::-;915:6;968:2;956:9;947:7;943:23;939:32;936:2;;;989:6;981;974:22;936:2;1020:23;;-1:-1:-1;;;;;;1072:32:34;;1062:43;;1052:2;;1124:6;1116;1109:22;1363:194;1433:6;1486:2;1474:9;1465:7;1461:23;1457:32;1454:2;;;1507:6;1499;1492:22;1454:2;-1:-1:-1;1535:16:34;;1444:113;-1:-1:-1;1444:113:34:o;1562:709::-;1641:6;1649;1657;1710:2;1698:9;1689:7;1685:23;1681:32;1678:2;;;1731:6;1723;1716:22;1678:2;1759:23;;;-1:-1:-1;1833:2:34;1818:18;;1805:32;-1:-1:-1;;;;;1886:14:34;;;1883:2;;;1918:6;1910;1903:22;1883:2;1961:6;1950:9;1946:22;1936:32;;2006:7;1999:4;1995:2;1991:13;1987:27;1977:2;;2033:6;2025;2018:22;1977:2;2078;2065:16;2104:2;2096:6;2093:14;2090:2;;;2125:6;2117;2110:22;2090:2;2175:7;2170:2;2161:6;2157:2;2153:15;2149:24;2146:37;2143:2;;;2201:6;2193;2186:22;2143:2;2237;2233;2229:11;2219:21;;2259:6;2249:16;;;;;1668:603;;;;;:::o;2276:786::-;-1:-1:-1;;;2682:3:34;2675:38;2657:3;2742:6;2736:13;2758:62;2813:6;2808:2;2803:3;2799:12;2792:4;2784:6;2780:17;2758:62;:::i;:::-;-1:-1:-1;;;2879:2:34;2839:16;;;2871:11;;;2864:40;2929:13;;2951:63;2929:13;3000:2;2992:11;;2985:4;2973:17;;2951:63;:::i;:::-;3034:17;3053:2;3030:26;;2665:397;-1:-1:-1;;;;2665:397:34:o;3928:391::-;4085:2;4074:9;4067:21;4124:6;4119:2;4108:9;4104:18;4097:34;4181:6;4173;4168:2;4157:9;4153:18;4140:48;4048:4;4208:22;;;4232:2;4204:31;;;4197:45;;;;4303:2;4282:15;;;-1:-1:-1;;4278:29:34;4263:45;4259:54;;4057:262;-1:-1:-1;4057:262:34:o;4548:383::-;4697:2;4686:9;4679:21;4660:4;4729:6;4723:13;4772:6;4767:2;4756:9;4752:18;4745:34;4788:66;4847:6;4842:2;4831:9;4827:18;4822:2;4814:6;4810:15;4788:66;:::i;:::-;4915:2;4894:15;-1:-1:-1;;4890:29:34;4875:45;;;;4922:2;4871:54;;4669:262;-1:-1:-1;;4669:262:34:o;5984:347::-;6186:2;6168:21;;;6225:2;6205:18;;;6198:30;-1:-1:-1;;;6259:2:34;6244:18;;6237:53;6322:2;6307:18;;6158:173::o;6752:128::-;6792:3;6823:1;6819:6;6816:1;6813:13;6810:2;;;6829:18;;:::i;:::-;-1:-1:-1;6865:9:34;;6800:80::o;6885:168::-;6925:7;6991:1;6987;6983:6;6979:14;6976:1;6973:21;6968:1;6961:9;6954:17;6950:45;6947:2;;;6998:18;;:::i;:::-;-1:-1:-1;7038:9:34;;6937:116::o;7058:258::-;7130:1;7140:113;7154:6;7151:1;7148:13;7140:113;;;7230:11;;;7224:18;7211:11;;;7204:39;7176:2;7169:10;7140:113;;;7271:6;7268:1;7265:13;7262:2;;;7306:1;7297:6;7292:3;7288:16;7281:27;7262:2;;7111:205;;;:::o;7321:136::-;7360:3;7388:5;7378:2;;7397:18;;:::i;:::-;-1:-1:-1;;;7433:18:34;;7368:89::o;7462:127::-;7523:10;7518:3;7514:20;7511:1;7504:31;7554:4;7551:1;7544:15;7578:4;7575:1;7568:15",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\nimport \"./Freeport.sol\";\n\n/** The contract NFTAttachment allows users to attach objects to NFTs.\n * Some application can listen for the events and interpret the objects in some way.\n *\n * There are three roles who can attach objects to an NFT:\n * the minter, any current owner, or any anonymous account.\n * A different event is emitted for each role.\n *\n * The attachment data is meant to identify an object hosted externally,\n * such as a CID, a.k.a. Content Identifier, or a DDC URL.\n * The content may be retrieved from Cere DDC or some other store.\n */\ncontract NFTAttachment is /* AccessControl, */ MetaTxContext {\n\n    /** This attachment contract refers to the NFT contract in this variable.\n     */\n    Freeport public freeport;\n\n    /** The token ID that represents the internal currency for all payments in Freeport. */\n    uint256 constant CURRENCY = 0;\n\n    /** Set which NFT contract to refer to.\n     *\n     * The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n     *\n     * The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport.\n     */\n    constructor(Freeport _freeport) {\n        require(address(_freeport) != address(0));\n        freeport = _freeport;\n    }\n\n    /** The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist.\n     */\n    event MinterAttachToNFT(\n        address indexed minter,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * The `owner` owned at least one NFT of this type at the time of the event.\n     */\n    event OwnerAttachToNFT(\n        address indexed owner,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the attachment means.\n     */\n    event AnonymAttachToNFT(\n        address indexed anonym,\n        uint256 indexed nftId,\n        bytes attachment);\n\n    /** Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n     *\n     * This only works for NFT IDs in the Freeport format.\n     */\n    function minterAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address minter = _msgSender();\n        address actualMinter = _minterFromNftId(nftId);\n        require(minter == actualMinter, \"Only minter\");\n        emit MinterAttachToNFT(minter, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n     *\n     * This works for NFTs in the ERC-1155 or Freeport standards.\n     */\n    function ownerAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address owner = _msgSender();\n        uint256 balance = freeport.balanceOf(owner, nftId);\n        require(balance > 0, \"Only current owner\");\n        emit OwnerAttachToNFT(owner, nftId, attachment);\n    }\n\n    /** Attach data `attachment` to the NFT type `nftId`, as any account.\n     */\n    function anonymAttachToNFT(uint256 nftId, bytes calldata attachment)\n    public {\n        require(nftId != CURRENCY, \"0 is not a valid NFT ID\");\n        address anonym = _msgSender();\n        emit AnonymAttachToNFT(anonym, nftId, attachment);\n    }\n\n    /** Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n     *\n     * This does not imply that the NFTs exist.\n     *\n     * This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`\n     */\n    function _minterFromNftId(uint256 id)\n    public pure returns (address minter) {\n        minter = address(uint160((id & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000) >> (32 + 64)));\n        return minter;\n    }\n}\n",
  "sourcePath": "/home/a/CERE/Freeport-Smart-Contracts/contracts/NFTAttachment.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControl": [2208],
      "Address": [5579],
      "BaseNFT": [2338],
      "Context": [5602],
      "Currency": [2405],
      "ERC1155": [5020],
      "ERC165": [6111],
      "ERC20Adapter": [2503],
      "Freeport": [947],
      "IAccessControl": [1884],
      "IERC1155": [5142],
      "IERC1155MetadataURI": [5198],
      "IERC1155Receiver": [5183],
      "IERC165": [6123],
      "IERC20": [584],
      "Issuance": [2757],
      "JointAccounts": [3094],
      "MetaTxContext": [3164],
      "NFTAttachment": [1322],
      "SimpleExchange": [3341],
      "Strings": [5805],
      "TransferFees": [3950],
      "TransferOperator": [3987]
    },
    "id": 1323,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1119,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 1120,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1323,
        "sourceUnit": 3165,
        "src": "25:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 1121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1323,
        "sourceUnit": 948,
        "src": "69:24:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1123,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3164,
              "src": "673:13:8"
            },
            "id": 1124,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1122,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:8",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 1322,
        "linearizedBaseContracts": [1322, 3164, 2208, 6111, 6123, 1884, 5602],
        "name": "NFTAttachment",
        "nameLocation": "635:13:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1125,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:8",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 1128,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1322,
            "src": "780:24:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$947",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 1127,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1126,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 947,
                "src": "780:8:8"
              },
              "referencedDeclaration": 947,
              "src": "780:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$947",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1129,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:8",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 1132,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1322,
            "src": "903:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1131,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "1210:88:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1142,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "1236:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$947",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$947",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1228:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1228:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1228:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1258:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1250:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1144,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1250:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1250:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1228:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:41:8"
                },
                {
                  "expression": {
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1151,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "1271:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$947",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1152,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "1282:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$947",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1271:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$947",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:20:8"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:8",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "id": 1156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1199:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "1190:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$947",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 1135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1134,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 947,
                      "src": "1190:8:8"
                    },
                    "referencedDeclaration": 947,
                    "src": "1190:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$947",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1189:20:8"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:8"
            },
            "scope": 1322,
            "src": "1178:120:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1157,
              "nodeType": "StructuredDocumentation",
              "src": "1304:213:8",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "id": 1165,
            "name": "MinterAttachToNFT",
            "nameLocation": "1528:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1571:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "1555:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1603:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "1587:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1624:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "1618:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:90:8"
            },
            "src": "1522:114:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "1642:179:8",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "id": 1174,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1832:16:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1874:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "1858:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1170,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1905:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "1889:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1926:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "1920:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1848:89:8"
            },
            "src": "1826:112:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1175,
              "nodeType": "StructuredDocumentation",
              "src": "1944:260:8",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "id": 1183,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2215:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2258:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "2242:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2242:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2290:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "2274:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2311:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "2305:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2232:90:8"
            },
            "src": "2209:114:8"
          },
          {
            "body": {
              "id": 1222,
              "nodeType": "Block",
              "src": "2573:280:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1192,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1186,
                          "src": "2591:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1193,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "2600:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2591:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 1191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2583:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "2583:53:8"
                },
                {
                  "assignments": [1199],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1199,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2654:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "2646:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1198,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2646:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1200,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3136],
                      "referencedDeclaration": 3136,
                      "src": "2663:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2646:29:8"
                },
                {
                  "assignments": [1204],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1204,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2693:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "2685:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2685:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1208,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1206,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "2725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1205,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1321,
                      "src": "2708:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2708:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2685:46:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1210,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "2749:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1211,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1204,
                          "src": "2759:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2749:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2773:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2741:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2741:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:46:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1217,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "2820:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1218,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "2828:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1219,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "2835:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1216,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "2802:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1221,
                  "nodeType": "EmitStatement",
                  "src": "2797:49:8"
                }
              ]
            },
            "documentation": {
              "id": 1184,
              "nodeType": "StructuredDocumentation",
              "src": "2329:159:8",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 1223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2502:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2528:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
                  "src": "2520:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2550:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
                  "src": "2535:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2519:42:8"
            },
            "returnParameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2573:0:8"
            },
            "scope": 1322,
            "src": "2493:360:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "3120:277:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1232,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1226,
                          "src": "3138:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1233,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "3147:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3138:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3157:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 1231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3130:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:53:8"
                },
                {
                  "assignments": [1239],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3201:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "3193:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3193:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1242,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1240,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3136],
                      "referencedDeclaration": 3136,
                      "src": "3209:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3209:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3193:28:8"
                },
                {
                  "assignments": [1244],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1244,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3239:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "3231:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3231:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1250,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1247,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "3268:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1248,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "3275:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1245,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "3249:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$947",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4103,
                      "src": "3249:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3231:50:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1252,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1244,
                          "src": "3299:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3309:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3299:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3312:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 1251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3291:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:42:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "3365:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1260,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "3372:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1261,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "3379:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1258,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "3348:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "EmitStatement",
                  "src": "3343:47:8"
                }
              ]
            },
            "documentation": {
              "id": 1224,
              "nodeType": "StructuredDocumentation",
              "src": "2859:177:8",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3050:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3075:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "3067:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3067:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1228,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3097:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "3082:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3066:42:8"
            },
            "returnParameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3120:0:8"
            },
            "scope": 1322,
            "src": "3041:356:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1291,
              "nodeType": "Block",
              "src": "3565:168:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1274,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1268,
                          "src": "3583:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1275,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "3592:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3583:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3602:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 1273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3575:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:53:8"
                },
                {
                  "assignments": [1281],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3646:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "3638:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3638:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1284,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1282,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3136],
                      "referencedDeclaration": 3136,
                      "src": "3655:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3638:29:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1286,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "3700:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1287,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "3708:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1288,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "3715:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1285,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "3682:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3682:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1290,
                  "nodeType": "EmitStatement",
                  "src": "3677:49:8"
                }
              ]
            },
            "documentation": {
              "id": 1266,
              "nodeType": "StructuredDocumentation",
              "src": "3403:77:8",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 1292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3494:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1268,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3520:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "3512:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3542:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "3527:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3527:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3511:42:8"
            },
            "returnParameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:8"
            },
            "scope": 1322,
            "src": "3485:248:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "4040:153:8",
              "statements": [
                {
                  "expression": {
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1300,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "4050:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1307,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1305,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1295,
                                      "src": "4076:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 1306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4081:66:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4076:71:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1308,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4075:73:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 1311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 1309,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4153:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 1310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4158:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4153:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 1312,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4152:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4075:86:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4067:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 1303,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4067:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4067:95:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4059:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4059:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4059:104:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4050:113:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "4050:113:8"
                },
                {
                  "expression": {
                    "id": 1318,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1298,
                    "src": "4180:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1299,
                  "id": 1319,
                  "nodeType": "Return",
                  "src": "4173:13:8"
                }
              ]
            },
            "documentation": {
              "id": 1293,
              "nodeType": "StructuredDocumentation",
              "src": "3739:217:8",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "3970:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3995:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "3987:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3987:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3986:12:8"
            },
            "returnParameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4032:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "4024:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4023:16:8"
            },
            "scope": 1322,
            "src": "3961:232:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1323,
        "src": "626:3569:8",
        "usedErrors": []
      }
    ],
    "src": "0:4196:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControl": [2208],
      "Address": [5579],
      "BaseNFT": [2338],
      "Context": [5602],
      "Currency": [2405],
      "ERC1155": [5020],
      "ERC165": [6111],
      "ERC20Adapter": [2503],
      "Freeport": [947],
      "IAccessControl": [1884],
      "IERC1155": [5142],
      "IERC1155MetadataURI": [5198],
      "IERC1155Receiver": [5183],
      "IERC165": [6123],
      "IERC20": [584],
      "Issuance": [2757],
      "JointAccounts": [3094],
      "MetaTxContext": [3164],
      "NFTAttachment": [1322],
      "SimpleExchange": [3341],
      "Strings": [5805],
      "TransferFees": [3950],
      "TransferOperator": [3987]
    },
    "id": 1323,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1119,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "project:/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 1120,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1323,
        "sourceUnit": 3165,
        "src": "25:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freeport.sol",
        "file": "./Freeport.sol",
        "id": 1121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1323,
        "sourceUnit": 948,
        "src": "69:24:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1123,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3164,
              "src": "673:13:8"
            },
            "id": 1124,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1122,
          "nodeType": "StructuredDocumentation",
          "src": "95:530:8",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n There are three roles who can attach objects to an NFT:\n the minter, any current owner, or any anonymous account.\n A different event is emitted for each role.\n The attachment data is meant to identify an object hosted externally,\n such as a CID, a.k.a. Content Identifier, or a DDC URL.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 1322,
        "linearizedBaseContracts": [1322, 3164, 2208, 6111, 6123, 1884, 5602],
        "name": "NFTAttachment",
        "nameLocation": "635:13:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1125,
              "nodeType": "StructuredDocumentation",
              "src": "694:81:8",
              "text": "This attachment contract refers to the NFT contract in this variable."
            },
            "functionSelector": "9470ad85",
            "id": 1128,
            "mutability": "mutable",
            "name": "freeport",
            "nameLocation": "796:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1322,
            "src": "780:24:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Freeport_$947",
              "typeString": "contract Freeport"
            },
            "typeName": {
              "id": 1127,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1126,
                "name": "Freeport",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 947,
                "src": "780:8:8"
              },
              "referencedDeclaration": 947,
              "src": "780:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Freeport_$947",
                "typeString": "contract Freeport"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1129,
              "nodeType": "StructuredDocumentation",
              "src": "811:87:8",
              "text": "The token ID that represents the internal currency for all payments in Freeport. "
            },
            "id": 1132,
            "mutability": "constant",
            "name": "CURRENCY",
            "nameLocation": "920:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1322,
            "src": "903:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1130,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1131,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "931:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "1210:88:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1142,
                              "name": "_freeport",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "1236:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Freeport_$947",
                                "typeString": "contract Freeport"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Freeport_$947",
                                "typeString": "contract Freeport"
                              }
                            ],
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1228:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1228:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1228:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1258:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1250:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1144,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1250:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1250:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1228:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:41:8"
                },
                {
                  "expression": {
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1151,
                      "name": "freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "1271:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$947",
                        "typeString": "contract Freeport"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1152,
                      "name": "_freeport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "1282:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freeport_$947",
                        "typeString": "contract Freeport"
                      }
                    },
                    "src": "1271:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$947",
                      "typeString": "contract Freeport"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:20:8"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "939:234:8",
              "text": "Set which NFT contract to refer to.\n The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs.\n The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
            },
            "id": 1156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_freeport",
                  "nameLocation": "1199:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "1190:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freeport_$947",
                    "typeString": "contract Freeport"
                  },
                  "typeName": {
                    "id": 1135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1134,
                      "name": "Freeport",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 947,
                      "src": "1190:8:8"
                    },
                    "referencedDeclaration": 947,
                    "src": "1190:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freeport_$947",
                      "typeString": "contract Freeport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1189:20:8"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:8"
            },
            "scope": 1322,
            "src": "1178:120:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1157,
              "nodeType": "StructuredDocumentation",
              "src": "1304:213:8",
              "text": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`.\n The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
            },
            "id": 1165,
            "name": "MinterAttachToNFT",
            "nameLocation": "1528:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1571:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "1555:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1603:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "1587:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1624:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "1618:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:90:8"
            },
            "src": "1522:114:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "1642:179:8",
              "text": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`.\n The `owner` owned at least one NFT of this type at the time of the event."
            },
            "id": 1174,
            "name": "OwnerAttachToNFT",
            "nameLocation": "1832:16:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1874:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "1858:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1170,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1905:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "1889:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "1926:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1174,
                  "src": "1920:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1848:89:8"
            },
            "src": "1826:112:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1175,
              "nodeType": "StructuredDocumentation",
              "src": "1944:260:8",
              "text": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the attachment means."
            },
            "id": 1183,
            "name": "AnonymAttachToNFT",
            "nameLocation": "2215:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "anonym",
                  "nameLocation": "2258:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "2242:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2242:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2290:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "2274:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2311:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "2305:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2232:90:8"
            },
            "src": "2209:114:8"
          },
          {
            "body": {
              "id": 1222,
              "nodeType": "Block",
              "src": "2573:280:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1192,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1186,
                          "src": "2591:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1193,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "2600:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2591:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 1191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2583:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "2583:53:8"
                },
                {
                  "assignments": [1199],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1199,
                      "mutability": "mutable",
                      "name": "minter",
                      "nameLocation": "2654:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "2646:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1198,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2646:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1200,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3136],
                      "referencedDeclaration": 3136,
                      "src": "2663:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2646:29:8"
                },
                {
                  "assignments": [1204],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1204,
                      "mutability": "mutable",
                      "name": "actualMinter",
                      "nameLocation": "2693:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "2685:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2685:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1208,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1206,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "2725:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1205,
                      "name": "_minterFromNftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1321,
                      "src": "2708:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2708:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2685:46:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1210,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "2749:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1211,
                          "name": "actualMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1204,
                          "src": "2759:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2749:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d696e746572",
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2773:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        },
                        "value": "Only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_578cb4a41adb75340d2cbfbdb0c6610ff4519d15e645cc9b4cc4c64336da99c6",
                          "typeString": "literal_string \"Only minter\""
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2741:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2741:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:46:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1217,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "2820:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1218,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "2828:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1219,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "2835:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1216,
                      "name": "MinterAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "2802:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1221,
                  "nodeType": "EmitStatement",
                  "src": "2797:49:8"
                }
              ]
            },
            "documentation": {
              "id": 1184,
              "nodeType": "StructuredDocumentation",
              "src": "2329:159:8",
              "text": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type.\n This only works for NFT IDs in the Freeport format."
            },
            "functionSelector": "b85f8ca9",
            "id": 1223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minterAttachToNFT",
            "nameLocation": "2502:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "2528:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
                  "src": "2520:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "2550:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1223,
                  "src": "2535:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2519:42:8"
            },
            "returnParameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2573:0:8"
            },
            "scope": 1322,
            "src": "2493:360:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "3120:277:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1232,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1226,
                          "src": "3138:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1233,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "3147:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3138:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3157:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 1231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3130:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:53:8"
                },
                {
                  "assignments": [1239],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3201:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "3193:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3193:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1242,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1240,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3136],
                      "referencedDeclaration": 3136,
                      "src": "3209:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3209:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3193:28:8"
                },
                {
                  "assignments": [1244],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1244,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3239:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "3231:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3231:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1250,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1247,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "3268:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1248,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "3275:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1245,
                        "name": "freeport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "3249:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freeport_$947",
                          "typeString": "contract Freeport"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4103,
                      "src": "3249:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3231:50:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1252,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1244,
                          "src": "3299:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3309:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3299:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063757272656e74206f776e6572",
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3312:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        },
                        "value": "Only current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_111b7c5d2b16684041cedd75c064e2306dd9ae18e93fc76a7b5be4886458a40b",
                          "typeString": "literal_string \"Only current owner\""
                        }
                      ],
                      "id": 1251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3291:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:42:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1239,
                        "src": "3365:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1260,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "3372:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1261,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "3379:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1258,
                      "name": "OwnerAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "3348:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "EmitStatement",
                  "src": "3343:47:8"
                }
              ]
            },
            "documentation": {
              "id": 1224,
              "nodeType": "StructuredDocumentation",
              "src": "2859:177:8",
              "text": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type.\n This works for NFTs in the ERC-1155 or Freeport standards."
            },
            "functionSelector": "c0ba9f55",
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerAttachToNFT",
            "nameLocation": "3050:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3075:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "3067:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3067:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1228,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3097:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "3082:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3066:42:8"
            },
            "returnParameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3120:0:8"
            },
            "scope": 1322,
            "src": "3041:356:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1291,
              "nodeType": "Block",
              "src": "3565:168:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1274,
                          "name": "nftId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1268,
                          "src": "3583:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1275,
                          "name": "CURRENCY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "3592:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3583:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30206973206e6f7420612076616c6964204e4654204944",
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3602:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        },
                        "value": "0 is not a valid NFT ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae13f91217f47fbcc2b0198f394de1f4adce3e41753550c13e2321d5da6b1b56",
                          "typeString": "literal_string \"0 is not a valid NFT ID\""
                        }
                      ],
                      "id": 1273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3575:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:53:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:53:8"
                },
                {
                  "assignments": [1281],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "anonym",
                      "nameLocation": "3646:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "3638:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3638:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1284,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1282,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3136],
                      "referencedDeclaration": 3136,
                      "src": "3655:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3638:29:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1286,
                        "name": "anonym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "3700:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1287,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "3708:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1288,
                        "name": "attachment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "3715:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1285,
                      "name": "AnonymAttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "3682:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3682:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1290,
                  "nodeType": "EmitStatement",
                  "src": "3677:49:8"
                }
              ]
            },
            "documentation": {
              "id": 1266,
              "nodeType": "StructuredDocumentation",
              "src": "3403:77:8",
              "text": "Attach data `attachment` to the NFT type `nftId`, as any account."
            },
            "functionSelector": "f9715b8f",
            "id": 1292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "anonymAttachToNFT",
            "nameLocation": "3494:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1268,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "3520:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "3512:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "attachment",
                  "nameLocation": "3542:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1292,
                  "src": "3527:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3527:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3511:42:8"
            },
            "returnParameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:8"
            },
            "scope": 1322,
            "src": "3485:248:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "4040:153:8",
              "statements": [
                {
                  "expression": {
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1300,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "4050:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1307,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1305,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1295,
                                      "src": "4076:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646303030303030303030303030303030303030303030303030",
                                      "id": 1306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4081:66:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665561335876943319670319585689600_by_1",
                                        "typeString": "int_const 1157...(70 digits omitted)...9600"
                                      },
                                      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
                                    },
                                    "src": "4076:71:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1308,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4075:73:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    },
                                    "id": 1311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3332",
                                      "id": 1309,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4153:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3634",
                                      "id": 1310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4158:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "4153:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_96_by_1",
                                      "typeString": "int_const 96"
                                    }
                                  }
                                ],
                                "id": 1312,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4152:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                }
                              },
                              "src": "4075:86:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4067:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 1303,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4067:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4067:95:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4059:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4059:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4059:104:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4050:113:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "4050:113:8"
                },
                {
                  "expression": {
                    "id": 1318,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1298,
                    "src": "4180:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1299,
                  "id": 1319,
                  "nodeType": "Return",
                  "src": "4173:13:8"
                }
              ]
            },
            "documentation": {
              "id": 1293,
              "nodeType": "StructuredDocumentation",
              "src": "3739:217:8",
              "text": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce.\n This does not imply that the NFTs exist.\n This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
            },
            "functionSelector": "d2e9277b",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_minterFromNftId",
            "nameLocation": "3970:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3995:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "3987:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3987:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3986:12:8"
            },
            "returnParameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4032:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "4024:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4023:16:8"
            },
            "scope": 1322,
            "src": "3961:232:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1323,
        "src": "626:3569:8",
        "usedErrors": []
      }
    ],
    "src": "0:4196:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "anonym",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "attachment",
              "type": "bytes"
            }
          ],
          "name": "AnonymAttachToNFT",
          "type": "event"
        },
        "0x5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "attachment",
              "type": "bytes"
            }
          ],
          "name": "MinterAttachToNFT",
          "type": "event"
        },
        "0x70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a55": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "attachment",
              "type": "bytes"
            }
          ],
          "name": "OwnerAttachToNFT",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5E376313fddBE3010F5d9fbC446C63d803590445",
      "transactionHash": "0xc67180935f59f7a1d4c8f3b50253b2490a66efbb33335f4cfad2a3d046203a3e"
    },
    "80001": {
      "events": {
        "0xcb0dbc631188ff7e4c5831ec907b2d9ca2786dd0314af3e43a7269821a19e2b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "cid",
              "type": "bytes32"
            }
          ],
          "name": "AttachToNFT",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x4d1230ca9d634685a91b90e38709c77299e0c7591f7ac427d6cd88cf0f6114bf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "anonym",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "attachment",
              "type": "bytes"
            }
          ],
          "name": "AnonymAttachToNFT",
          "type": "event"
        },
        "0x5dc5ea79bba163c4e3f9a2bb5350dbe8490685a9191001c5b4422b37f880d322": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "attachment",
              "type": "bytes"
            }
          ],
          "name": "MinterAttachToNFT",
          "type": "event"
        },
        "0x70b7e5963956c4cbfbe79063259fc0996d3333c155342ae9110ca45e85995a55": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "attachment",
              "type": "bytes"
            }
          ],
          "name": "OwnerAttachToNFT",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x64fe48A0555b3b822E5DAC8347DFD1FDc9A2E91D",
      "transactionHash": "0x96c49a417bf6c43c17b6171f772255092f757a68264866a6c4e29f1eb808c2ff"
    },
    "1641562554735": {
      "events": {},
      "links": {},
      "address": "0xffD2d7E75D6061cA00a160fCb1D12b385Ba40704",
      "transactionHash": "0x7a501f282f273511b90f6d5d87578e324718a4d070c448ad8bba7762930e3fcf"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-07T13:45:41.100Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AnonymAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `anonym` wished to attach data `attachment` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the attachment means."
      },
      "MinterAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `minter` wished to attach data `attachment` to the NFT type `nftId`. The `minter` is the minter who created this NFT type, or may create it in the future if it does not exist."
      },
      "OwnerAttachToNFT(address,uint256,bytes)": {
        "notice": "The account `owner` wished to attach data `attachment` to the NFT type `nftId`. The `owner` owned at least one NFT of this type at the time of the event."
      }
    },
    "kind": "user",
    "methods": {
      "_minterFromNftId(uint256)": {
        "notice": "Parse an NFT ID into its issuer, its supply, and an arbitrary nonce. This does not imply that the NFTs exist. This is specific to Freeport NFTs. See `freeportParts/Issuance.sol`"
      },
      "anonymAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as any account."
      },
      "constructor": {
        "notice": "Set which NFT contract to refer to. The event `MinterAttachToNFT` is only supported for Freeport-compatible NFTs. The event `OwnerAttachToNFT` is supported for ERC-1155 NFTs, including Freeport."
      },
      "freeport()": {
        "notice": "This attachment contract refers to the NFT contract in this variable."
      },
      "minterAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as the minter of this NFT type. This only works for NFT IDs in the Freeport format."
      },
      "ownerAttachToNFT(uint256,bytes)": {
        "notice": "Attach data `attachment` to the NFT type `nftId`, as a current owner of an NFT of this type. This works for NFTs in the ERC-1155 or Freeport standards."
      }
    },
    "notice": "The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. There are three roles who can attach objects to an NFT: the minter, any current owner, or any anonymous account. A different event is emitted for each role. The attachment data is meant to identify an object hosted externally, such as a CID, a.k.a. Content Identifier, or a DDC URL. The content may be retrieved from Cere DDC or some other store.",
    "version": 1
  }
}
