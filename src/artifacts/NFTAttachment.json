{
  "contractName": "NFTAttachment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "cid",
          "type": "bytes32"
        }
      ],
      "name": "AttachToNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "META_TX_FORWARDER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "cid",
          "type": "bytes32"
        }
      ],
      "name": "attachToNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"cid\",\"type\":\"bytes32\"}],\"name\":\"AttachToNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"META_TX_FORWARDER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"cid\",\"type\":\"bytes32\"}],\"name\":\"attachToNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AttachToNFT(address,uint256,bytes32)\":{\"notice\":\"The account `sender` wished to attach an object identified by `cid` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the object means.\"}},\"kind\":\"user\",\"methods\":{\"attachToNFT(uint256,bytes32)\":{\"notice\":\"Attach an object identified by `cid` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the object means.\"},\"constructor\":{\"notice\":\"Set which NFT contract to refer to.\"},\"nftContract()\":{\"notice\":\"This attachment contract refers to the NFT contract in this variable. This is informative, there is no validation.\"}},\"notice\":\"The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. Anyone can attach objects to any NFT. It is the responsibility of the app to interpret who the sender is and what the object means. An object is identified by CID, a.k.a. Content Identifier or IPFS file, of maximum 32 bytes. The content may be retrieved from Cere DDC or some other store.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/a/CERE/freeport-nft/contracts/NFTAttachment.sol\":\"NFTAttachment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"/home/a/CERE/freeport-nft/contracts/NFTAttachment.sol\":{\"keccak256\":\"0x57782b885c9fd8802dcd771bb6122303b8637459a10a9de1152f1c5b5a538eb5\",\"urls\":[\"bzz-raw://9265b61738157b4726c56e4785141b4d74233384f63cb4ead221b3334c1a90f8\",\"dweb:/ipfs/QmcEH5kynTVeJtX6LZGJbz9Rm766yWi2vrVeCESwYjJGRw\"]},\"/home/a/CERE/freeport-nft/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"/home/a/CERE/freeport-nft/contracts/freeportParts/MetaTxContext.sol\":{\"keccak256\":\"0x12579308ed77228d87aad495399c8feff27642efa9aae8fe2fd2049da4140459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://568cafead94d0ecbee30203822e404d1bf53653257f933db70b6a035223189dd\",\"dweb:/ipfs/QmWmgcDLWNeswQF5WGM4zXpdaXcA4sQdWZbGvfSLEZWF2K\"]},\"/home/a/CERE/freeport-nft/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/home/a/CERE/freeport-nft/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/home/a/CERE/freeport-nft/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/home/a/CERE/freeport-nft/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109b33803806109b383398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610922806100916000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806301ffc9a71461009e578063248a9ca3146100c65780632f2ff15d146100e757806336568abe146100fc578063572b6c051461010f57806391d14854146101225780639a86e8ce14610135578063a217fddf1461014a578063ab278d1914610152578063d547741f14610165578063d56d229d14610178575b600080fd5b6100b16100ac36600461074d565b6101a3565b60405190151581526020015b60405180910390f35b6100d96100d436600461070a565b6101da565b6040519081526020016100bd565b6100fa6100f5366004610722565b6101ef565b005b6100fa61010a366004610722565b610218565b6100b161011d3660046106f0565b6102ab565b6100b1610130366004610722565b6102c1565b6100d96000805160206108cd83398151915281565b6100d9600081565b6100fa610160366004610775565b6102ea565b6100fa610173366004610722565b61033f565b60015461018b906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b60006001600160e01b03198216637965db0b60e01b14806101d457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b6101f8826101da565b6102098161020461035e565b610380565b61021383836103e4565b505050565b61022061035e565b6001600160a01b0316816001600160a01b03161461029d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102a78282610469565b5050565b60006101d46000805160206108cd833981519152835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006102f461035e565b905082816001600160a01b03167fcb0dbc631188ff7e4c5831ec907b2d9ca2786dd0314af3e43a7269821a19e2b48460405161033291815260200190565b60405180910390a3505050565b610348826101da565b6103548161020461035e565b6102138383610469565b6000610369336102ab565b1561037b575060131936013560601c90565b503390565b61038a82826102c1565b6102a7576103a2816001600160a01b031660146104ec565b6103ad8360206104ec565b6040516020016103be929190610796565b60408051601f198184030181529082905262461bcd60e51b825261029491600401610805565b6103ee82826102c1565b6102a7576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561042561035e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61047382826102c1565b156102a7576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556104a861035e565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b606060006104fb836002610850565b610506906002610838565b6001600160401b0381111561052b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610555576020820181803683370190505b509050600360fc1b8160008151811061057e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106105bb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006105df846002610850565b6105ea906001610838565b90505b600181111561067e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061062c57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061065057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936106778161089f565b90506105ed565b5083156106cd5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610294565b9392505050565b80356001600160a01b03811681146106eb57600080fd5b919050565b600060208284031215610701578081fd5b6106cd826106d4565b60006020828403121561071b578081fd5b5035919050565b60008060408385031215610734578081fd5b82359150610744602084016106d4565b90509250929050565b60006020828403121561075e578081fd5b81356001600160e01b0319811681146106cd578182fd5b60008060408385031215610787578182fd5b50508035926020909101359150565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516107c881601785016020880161086f565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516107f981602884016020880161086f565b01602801949350505050565b602081526000825180602084015261082481604085016020870161086f565b601f01601f19169190910160400192915050565b6000821982111561084b5761084b6108b6565b500190565b600081600019048311821515161561086a5761086a6108b6565b500290565b60005b8381101561088a578181015183820152602001610872565b83811115610899576000848401525b50505050565b6000816108ae576108ae6108b6565b506000190190565b634e487b7160e01b600052601160045260246000fdfe3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a26469706673582212204de33f73b1a9bbb099f956482ab800192feae1f8d466791659e3aed40b9ede3f64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c806301ffc9a71461009e578063248a9ca3146100c65780632f2ff15d146100e757806336568abe146100fc578063572b6c051461010f57806391d14854146101225780639a86e8ce14610135578063a217fddf1461014a578063ab278d1914610152578063d547741f14610165578063d56d229d14610178575b600080fd5b6100b16100ac36600461074d565b6101a3565b60405190151581526020015b60405180910390f35b6100d96100d436600461070a565b6101da565b6040519081526020016100bd565b6100fa6100f5366004610722565b6101ef565b005b6100fa61010a366004610722565b610218565b6100b161011d3660046106f0565b6102ab565b6100b1610130366004610722565b6102c1565b6100d96000805160206108cd83398151915281565b6100d9600081565b6100fa610160366004610775565b6102ea565b6100fa610173366004610722565b61033f565b60015461018b906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b60006001600160e01b03198216637965db0b60e01b14806101d457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526020819052604090206001015490565b6101f8826101da565b6102098161020461035e565b610380565b61021383836103e4565b505050565b61022061035e565b6001600160a01b0316816001600160a01b03161461029d5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102a78282610469565b5050565b60006101d46000805160206108cd833981519152835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006102f461035e565b905082816001600160a01b03167fcb0dbc631188ff7e4c5831ec907b2d9ca2786dd0314af3e43a7269821a19e2b48460405161033291815260200190565b60405180910390a3505050565b610348826101da565b6103548161020461035e565b6102138383610469565b6000610369336102ab565b1561037b575060131936013560601c90565b503390565b61038a82826102c1565b6102a7576103a2816001600160a01b031660146104ec565b6103ad8360206104ec565b6040516020016103be929190610796565b60408051601f198184030181529082905262461bcd60e51b825261029491600401610805565b6103ee82826102c1565b6102a7576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561042561035e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61047382826102c1565b156102a7576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556104a861035e565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b606060006104fb836002610850565b610506906002610838565b6001600160401b0381111561052b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610555576020820181803683370190505b509050600360fc1b8160008151811061057e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106105bb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006105df846002610850565b6105ea906001610838565b90505b600181111561067e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061062c57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061065057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936106778161089f565b90506105ed565b5083156106cd5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610294565b9392505050565b80356001600160a01b03811681146106eb57600080fd5b919050565b600060208284031215610701578081fd5b6106cd826106d4565b60006020828403121561071b578081fd5b5035919050565b60008060408385031215610734578081fd5b82359150610744602084016106d4565b90509250929050565b60006020828403121561075e578081fd5b81356001600160e01b0319811681146106cd578182fd5b60008060408385031215610787578182fd5b50508035926020909101359150565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516107c881601785016020880161086f565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516107f981602884016020880161086f565b01602801949350505050565b602081526000825180602084015261082481604085016020870161086f565b601f01601f19169190910160400192915050565b6000821982111561084b5761084b6108b6565b500190565b600081600019048311821515161561086a5761086a6108b6565b500290565b60005b8381101561088a578181015183820152602001610872565b83811115610899576000848401525b50505050565b6000816108ae576108ae6108b6565b506000190190565b634e487b7160e01b600052601160045260246000fdfe3d2e894c222ba979e2dce2c7d940c0e9bb14306669e9f034eb1bb3979a2069d8a26469706673582212204de33f73b1a9bbb099f956482ab800192feae1f8d466791659e3aed40b9ede3f64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:24",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:24",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:24"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:24",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:24"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:24",
                "type": ""
              }
            ],
            "src": "14:310:24"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4808:24",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:24",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:24",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:24"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:24"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:24",
                "type": ""
              }
            ],
            "src": "14:173:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:24",
                "type": ""
              }
            ],
            "src": "192:196:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:120:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "509:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "518:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "526:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "511:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "511:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "511:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "484:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "493:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "480:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "505:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "476:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "473:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "544:33:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "567:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "554:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:23:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "429:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "440:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "452:6:24",
                "type": ""
              }
            ],
            "src": "393:190:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "675:177:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "721:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "730:6:24"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "738:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "723:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "723:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "723:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "696:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "705:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "692:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "717:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "688:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "688:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "685:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "756:33:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "766:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:23:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "756:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "798:48:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "831:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "842:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "827:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "808:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:38:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "633:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "644:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "656:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "664:6:24",
                "type": ""
              }
            ],
            "src": "588:264:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "926:237:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "972:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "981:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "989:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "974:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "974:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "974:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "956:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "943:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "943:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "968:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "939:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "939:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "936:2:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:36:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1033:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1020:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1020:23:24"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1011:5:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1107:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1116:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1124:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1109:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1109:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1109:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1065:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1076:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1087:3:24",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1092:10:24",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1083:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1083:20:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1072:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1072:32:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1062:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:43:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:51:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1052:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1142:15:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1152:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1142:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:24",
                "type": ""
              }
            ],
            "src": "857:306:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1255:171:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1301:26:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1310:6:24"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1318:6:24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1303:22:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1303:22:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1276:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1285:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1272:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1272:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1297:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1268:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1265:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:33:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1359:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1346:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:23:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1336:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1378:42:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1405:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1416:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1401:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1401:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1388:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:32:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1378:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1213:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1224:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1236:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1244:6:24",
                "type": ""
              }
            ],
            "src": "1168:258:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1820:397:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1837:3:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1842:25:24",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1830:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1830:38:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1830:38:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1877:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1897:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1891:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1891:13:24"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1881:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1939:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:4:24",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1935:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1935:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1958:3:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1963:2:24",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1954:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:12:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1968:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1913:21:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1913:62:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1984:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1998:3:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2003:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1994:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:16:24"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1988:2:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2030:2:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2034:2:24",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2026:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:11:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2039:19:24",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:40:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2019:40:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2068:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2090:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2084:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:13:24"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2072:8:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2132:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2140:4:24",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2128:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2128:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2151:2:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2155:2:24",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2147:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2147:11:24"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2160:8:24"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2106:21:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:63:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2106:63:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2178:33:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2193:2:24"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "2197:8:24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2189:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2189:17:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2208:2:24",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2185:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:26:24"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2178:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1788:3:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1793:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1801:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1812:3:24",
                "type": ""
              }
            ],
            "src": "1431:786:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2323:102:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2333:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2345:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2356:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2341:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2341:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2333:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2375:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2390:6:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2406:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2411:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2402:11:24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2415:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2398:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2398:19:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2386:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2386:32:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2368:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:51:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2368:51:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2292:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2303:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2314:4:24",
                "type": ""
              }
            ],
            "src": "2222:203:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2525:92:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2535:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2547:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2558:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2543:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2535:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2577:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2602:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2595:6:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2595:14:24"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2588:6:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2588:22:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2570:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:41:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2570:41:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2494:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2505:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2516:4:24",
                "type": ""
              }
            ],
            "src": "2430:187:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2723:76:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2733:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2745:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2756:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2741:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2741:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2733:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2775:9:24"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2786:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2768:25:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2768:25:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2692:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2703:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2714:4:24",
                "type": ""
              }
            ],
            "src": "2622:177:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2925:262:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2942:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2953:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2935:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2935:21:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2965:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2985:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2979:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2979:13:24"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2969:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3012:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3023:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3008:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:18:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3028:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3001:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3001:34:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3001:34:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3070:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3078:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3066:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3066:15:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3087:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3098:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3083:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:18:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3103:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3044:21:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3044:66:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3044:66:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3119:62:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3135:9:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3154:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3162:2:24",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3150:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3150:15:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3171:2:24",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3167:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3167:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3146:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3146:29:24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3131:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3131:45:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3178:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3127:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3127:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3119:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2894:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2905:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2916:4:24",
                "type": ""
              }
            ],
            "src": "2804:383:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3366:182:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3383:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3394:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3376:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3376:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3376:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3417:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3428:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3413:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3413:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3433:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3406:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3406:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3456:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3467:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3452:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3452:18:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3472:34:24",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3445:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3445:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3445:62:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3516:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3528:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3539:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3524:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3524:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3516:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3343:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3357:4:24",
                "type": ""
              }
            ],
            "src": "3192:356:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3727:237:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3744:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3755:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3737:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3737:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3778:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3789:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3774:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3774:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3794:2:24",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3767:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3767:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3767:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3817:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3828:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3813:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3813:18:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3833:34:24",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3806:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3806:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3806:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3888:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3899:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3884:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3884:18:24"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3904:17:24",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3877:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3877:45:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3877:45:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3931:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3943:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3954:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3939:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3939:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3931:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3704:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3718:4:24",
                "type": ""
              }
            ],
            "src": "3553:411:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4017:80:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4044:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4046:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4046:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4046:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4033:1:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4040:1:24"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4036:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4036:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4030:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:13:24"
                  },
                  "nodeType": "YulIf",
                  "src": "4027:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4075:16:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4086:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4089:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4082:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4082:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4075:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4000:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4003:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4009:3:24",
                "type": ""
              }
            ],
            "src": "3969:128:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4154:116:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4213:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4215:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4215:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4215:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4185:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4178:6:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4178:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4171:6:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4171:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4193:1:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4204:1:24",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4200:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4200:6:24"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4208:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "4196:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4196:14:24"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4190:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4190:21:24"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4167:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:45:24"
                  },
                  "nodeType": "YulIf",
                  "src": "4164:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4244:20:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4259:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4262:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "4255:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4255:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "4244:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4133:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4136:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "4142:7:24",
                "type": ""
              }
            ],
            "src": "4102:168:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4328:205:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4338:10:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4347:1:24",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4342:1:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4407:63:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4432:3:24"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4437:1:24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4428:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4428:11:24"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "4451:3:24"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4456:1:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4447:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4447:11:24"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4441:5:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4441:18:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4421:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4421:39:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4421:39:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4368:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4371:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4365:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4365:13:24"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4379:19:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4381:15:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4390:1:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4393:2:24",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4386:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4386:10:24"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4381:1:24"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4361:3:24",
                    "statements": []
                  },
                  "src": "4357:113:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4496:31:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4509:3:24"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4514:6:24"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4505:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4505:16:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4523:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4498:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4498:27:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4498:27:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4485:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4488:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4482:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4482:13:24"
                  },
                  "nodeType": "YulIf",
                  "src": "4479:2:24"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4306:3:24",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4311:3:24",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4316:6:24",
                "type": ""
              }
            ],
            "src": "4275:258:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4585:89:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4612:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4614:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4614:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4614:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4605:5:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4598:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4598:13:24"
                  },
                  "nodeType": "YulIf",
                  "src": "4595:2:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4643:25:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4654:5:24"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4665:1:24",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4661:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4661:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4650:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4650:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4643:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4567:5:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4577:3:24",
                "type": ""
              }
            ],
            "src": "4538:136:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4711:95:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4728:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4735:3:24",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4740:10:24",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4731:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4731:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4721:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:31:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4721:31:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4768:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4771:4:24",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4761:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4761:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4761:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4792:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4795:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4785:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4785:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4785:15:24"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4679:127:24"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "536:1152:1:-:0;;;827:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;871:11;:26;;-1:-1:-1;;;;;;871:26:1;-1:-1:-1;;;;;871:26:1;;;;;;;;;;536:1152;;14:310:24;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:24;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:24:o;:::-;536:1152:1;;;;;;",
  "deployedSourceMap": "536:1152:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:214:3;;;;;;:::i;:::-;;:::i;:::-;;;2595:14:24;;2588:22;2570:41;;2558:2;2543:18;4073:214:3;;;;;;;;5348:121;;;;;;:::i;:::-;;:::i;:::-;;;2768:25:24;;;2756:2;2741:18;5348:121:3;2723:76:24;5719:145:3;;;;;;:::i;:::-;;:::i;:::-;;6736:214;;;;;;:::i;:::-;;:::i;355:143:8:-;;;;;;:::i;:::-;;:::i;4374:137:3:-;;;;;;:::i;:::-;;:::i;274:74:8:-;;-1:-1:-1;;;;;;;;;;;274:74:8;;2394:49:3;;2439:4;2394:49;;1534:152:1;;;;;;:::i;:::-;;:::i;6098:147:3:-;;;;;;:::i;:::-;;:::i;742:26:1:-;;;;;-1:-1:-1;;;;;742:26:1;;;;;;-1:-1:-1;;;;;2386:32:24;;;2368:51;;2356:2;2341:18;742:26:1;2323:102:24;4073:214:3;4158:4;-1:-1:-1;;;;;;4181:47:3;;-1:-1:-1;;;4181:47:3;;:99;;-1:-1:-1;;;;;;;;;;871:40:22;;;4244:36:3;4174:106;4073:214;-1:-1:-1;;4073:214:3:o;5348:121::-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121::o;5719:145::-;5802:18;5815:4;5802:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;:::-;3958:10;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;:::-;5719:145:::0;;;:::o;6736:214::-;6842:12;:10;:12::i;:::-;-1:-1:-1;;;;;6831:23:3;:7;-1:-1:-1;;;;;6831:23:3;;6823:83;;;;-1:-1:-1;;;6823:83:3;;3755:2:24;6823:83:3;;;3737:21:24;3794:2;3774:18;;;3767:30;3833:34;3813:18;;;3806:62;-1:-1:-1;;;3884:18:24;;;3877:45;3939:19;;6823:83:3;;;;;;;;;6917:26;6929:4;6935:7;6917:11;:26::i;:::-;6736:214;;:::o;355:143:8:-;431:4;454:37;-1:-1:-1;;;;;;;;;;;481:9:8;4374:137:3;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:3;;;;;;;;;;;;;;;4374:137::o;1534:152:1:-;1604:14;1621:12;:10;:12::i;:::-;1604:29;;1668:5;1660:6;-1:-1:-1;;;;;1648:31:1;;1675:3;1648:31;;;;2768:25:24;;2756:2;2741:18;;2723:76;1648:31:1;;;;;;;;1534:152;;;:::o;6098:147:3:-;6182:18;6195:4;6182:12;:18::i;:::-;3958:30;3969:4;3975:12;:10;:12::i;3958:30::-;6212:26:::1;6224:4;6230:7;6212:11;:26::i;504:371:8:-:0;566:14;596:30;615:10;596:18;:30::i;:::-;592:277;;;-1:-1:-1;;;781:14:8;777:23;764:37;760:2;756:46;504:371;:::o;745:58::-;-1:-1:-1;665:10:20;;504:371:8:o;4792:375:3:-;4871:22;4879:4;4885:7;4871;:22::i;:::-;4867:294;;5000:41;5028:7;-1:-1:-1;;;;;5000:41:3;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4923:225:3;;;;;;;;;;-1:-1:-1;;;4909:241:3;;;;;;;:::i;7948:224::-;8022:22;8030:4;8036:7;8022;:22::i;:::-;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:3;;;;;;;;;:36;;-1:-1:-1;;8060:36:3;8092:4;8060:36;;;8142:12;:10;:12::i;:::-;-1:-1:-1;;;;;8115:40:3;8133:7;-1:-1:-1;;;;;8115:40:3;8127:4;8115:40;;;;;;;;;;7948:224;;:::o;8178:225::-;8252:22;8260:4;8266:7;8252;:22::i;:::-;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:3;;;;;;;;;:37;;-1:-1:-1;;8290:37:3;;;8373:12;:10;:12::i;:::-;-1:-1:-1;;;;;8346:40:3;8364:7;-1:-1:-1;;;;;8346:40:3;8358:4;8346:40;;;;;;;;;;8178:225;;:::o;1531:437:21:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;-1:-1:-1;;;;;1653:25:21;;;;;-1:-1:-1;;;1653:25:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:21;;1631:47;;-1:-1:-1;;;1688:6:21;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:21;;;;;;;;;;;;:15;-1:-1:-1;;;;;1688:15:21;;;;;;;;;-1:-1:-1;;;1713:6:21;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:21;;;;;;;;;;;;:15;-1:-1:-1;;;;;1713:15:21;;;;;;;;-1:-1:-1;1743:9:21;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1818:5:21;1826:3;1818:11;1809:21;;;;;-1:-1:-1;;;1809:21:21;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:21;;;;;;;;;;;;:33;-1:-1:-1;;;;;1797:33:21;;;;;;;;-1:-1:-1;1854:1:21;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:21;;1875:55;;;;-1:-1:-1;;;1875:55:21;;3394:2:24;1875:55:21;;;3376:21:24;;;3413:18;;;3406:30;3472:34;3452:18;;;3445:62;3524:18;;1875:55:21;3366:182:24;1875:55:21;1954:6;1531:437;-1:-1:-1;;;1531:437:21:o;14:173:24:-;82:20;;-1:-1:-1;;;;;131:31:24;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:190::-;452:6;505:2;493:9;484:7;480:23;476:32;473:2;;;526:6;518;511:22;473:2;-1:-1:-1;554:23:24;;463:120;-1:-1:-1;463:120:24:o;588:264::-;656:6;664;717:2;705:9;696:7;692:23;688:32;685:2;;;738:6;730;723:22;685:2;779:9;766:23;756:33;;808:38;842:2;831:9;827:18;808:38;:::i;:::-;798:48;;675:177;;;;;:::o;857:306::-;915:6;968:2;956:9;947:7;943:23;939:32;936:2;;;989:6;981;974:22;936:2;1020:23;;-1:-1:-1;;;;;;1072:32:24;;1062:43;;1052:2;;1124:6;1116;1109:22;1168:258;1236:6;1244;1297:2;1285:9;1276:7;1272:23;1268:32;1265:2;;;1318:6;1310;1303:22;1265:2;-1:-1:-1;;1346:23:24;;;1416:2;1401:18;;;1388:32;;-1:-1:-1;1255:171:24:o;1431:786::-;-1:-1:-1;;;1837:3:24;1830:38;1812:3;1897:6;1891:13;1913:62;1968:6;1963:2;1958:3;1954:12;1947:4;1939:6;1935:17;1913:62;:::i;:::-;-1:-1:-1;;;2034:2:24;1994:16;;;2026:11;;;2019:40;2084:13;;2106:63;2084:13;2155:2;2147:11;;2140:4;2128:17;;2106:63;:::i;:::-;2189:17;2208:2;2185:26;;1820:397;-1:-1:-1;;;;1820:397:24:o;2804:383::-;2953:2;2942:9;2935:21;2916:4;2985:6;2979:13;3028:6;3023:2;3012:9;3008:18;3001:34;3044:66;3103:6;3098:2;3087:9;3083:18;3078:2;3070:6;3066:15;3044:66;:::i;:::-;3171:2;3150:15;-1:-1:-1;;3146:29:24;3131:45;;;;3178:2;3127:54;;2925:262;-1:-1:-1;;2925:262:24:o;3969:128::-;4009:3;4040:1;4036:6;4033:1;4030:13;4027:2;;;4046:18;;:::i;:::-;-1:-1:-1;4082:9:24;;4017:80::o;4102:168::-;4142:7;4208:1;4204;4200:6;4196:14;4193:1;4190:21;4185:1;4178:9;4171:17;4167:45;4164:2;;;4215:18;;:::i;:::-;-1:-1:-1;4255:9:24;;4154:116::o;4275:258::-;4347:1;4357:113;4371:6;4368:1;4365:13;4357:113;;;4447:11;;;4441:18;4428:11;;;4421:39;4393:2;4386:10;4357:113;;;4488:6;4485:1;4482:13;4479:2;;;4523:1;4514:6;4509:3;4505:16;4498:27;4479:2;;4328:205;;;:::o;4538:136::-;4577:3;4605:5;4595:2;;4614:18;;:::i;:::-;-1:-1:-1;;;4650:18:24;;4585:89::o;4679:127::-;4740:10;4735:3;4731:20;4728:1;4721:31;4771:4;4768:1;4761:15;4795:4;4792:1;4785:15",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./freeportParts/MetaTxContext.sol\";\n\n/** The contract NFTAttachment allows users to attach objects to NFTs.\n * Some application can listen for the events and interpret the objects in some way.\n *\n * Anyone can attach objects to any NFT. It is the responsibility of the app to\n * interpret who the sender is and what the object means.\n *\n * An object is identified by CID, a.k.a. Content Identifier or IPFS file, of maximum 32 bytes.\n * The content may be retrieved from Cere DDC or some other store.\n */\ncontract NFTAttachment is /* AccessControl, */ MetaTxContext {\n\n    /** This attachment contract refers to the NFT contract in this variable.\n     * This is informative, there is no validation.\n     */\n    address public nftContract;\n\n    /** Set which NFT contract to refer to.\n     */\n    constructor(address _nftContract) {\n        nftContract = _nftContract;\n    }\n\n    /** The account `sender` wished to attach an object identified by `cid` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the object means.\n     */\n    event AttachToNFT(\n        address indexed sender,\n        uint256 indexed nftId,\n        bytes32 cid);\n\n    /** Attach an object identified by `cid` to the NFT type `nftId`.\n     *\n     * There is absolutely no validation. It is the responsibility of the reader of this event to decide\n     * who the sender is and what the object means.\n     */\n    function attachToNFT(uint256 nftId, bytes32 cid)\n    public {\n        address sender = _msgSender();\n        emit AttachToNFT(sender, nftId, cid);\n    }\n}\n",
  "sourcePath": "/home/a/CERE/freeport-nft/contracts/NFTAttachment.sol",
  "ast": {
    "absolutePath": "/home/a/CERE/freeport-nft/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControl": [886],
      "Context": [4337],
      "ERC165": [4564],
      "IAccessControl": [562],
      "IERC165": [4576],
      "MetaTxContext": [1750],
      "NFTAttachment": [56],
      "Strings": [4540]
    },
    "id": 57,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/a/CERE/freeport-nft/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 57,
        "sourceUnit": 1751,
        "src": "25:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1750,
              "src": "583:13:1"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "583:13:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10,
          "nodeType": "StructuredDocumentation",
          "src": "69:466:1",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n Anyone can attach objects to any NFT. It is the responsibility of the app to\n interpret who the sender is and what the object means.\n An object is identified by CID, a.k.a. Content Identifier or IPFS file, of maximum 32 bytes.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 56,
        "linearizedBaseContracts": [56, 1750, 886, 4564, 4576, 562, 4337],
        "name": "NFTAttachment",
        "nameLocation": "545:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "604:133:1",
              "text": "This attachment contract refers to the NFT contract in this variable.\n This is informative, there is no validation."
            },
            "functionSelector": "d56d229d",
            "id": 15,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "757:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 56,
            "src": "742:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "742:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "861:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "871:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22,
                      "name": "_nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "885:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "871:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "871:26:1"
                }
              ]
            },
            "documentation": {
              "id": 16,
              "nodeType": "StructuredDocumentation",
              "src": "775:47:1",
              "text": "Set which NFT contract to refer to."
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_nftContract",
                  "nameLocation": "847:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "839:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:22:1"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "861:0:1"
            },
            "scope": 56,
            "src": "827:77:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "910:268:1",
              "text": "The account `sender` wished to attach an object identified by `cid` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the object means."
            },
            "id": 35,
            "name": "AttachToNFT",
            "nameLocation": "1189:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1226:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1210:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1258:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1242:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1281:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1273:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:85:1"
            },
            "src": "1183:103:1"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1594:92:1",
              "statements": [
                {
                  "assignments": [44],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1612:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1604:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1722],
                      "referencedDeclaration": 1722,
                      "src": "1621:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1621:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1660:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1668:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1675:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48,
                      "name": "AttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1648:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "1643:36:1"
                }
              ]
            },
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "1292:237:1",
              "text": "Attach an object identified by `cid` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the object means."
            },
            "functionSelector": "ab278d19",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attachToNFT",
            "nameLocation": "1543:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1563:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1555:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1578:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1570:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1554:28:1"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:1"
            },
            "scope": 56,
            "src": "1534:152:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 57,
        "src": "536:1152:1",
        "usedErrors": []
      }
    ],
    "src": "0:1689:1"
  },
  "legacyAST": {
    "absolutePath": "/home/a/CERE/freeport-nft/contracts/NFTAttachment.sol",
    "exportedSymbols": {
      "AccessControl": [886],
      "Context": [4337],
      "ERC165": [4564],
      "IAccessControl": [562],
      "IERC165": [4576],
      "MetaTxContext": [1750],
      "NFTAttachment": [56],
      "Strings": [4540]
    },
    "id": 57,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/a/CERE/freeport-nft/contracts/freeportParts/MetaTxContext.sol",
        "file": "./freeportParts/MetaTxContext.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 57,
        "sourceUnit": 1751,
        "src": "25:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "MetaTxContext",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1750,
              "src": "583:13:1"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "583:13:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10,
          "nodeType": "StructuredDocumentation",
          "src": "69:466:1",
          "text": "The contract NFTAttachment allows users to attach objects to NFTs.\n Some application can listen for the events and interpret the objects in some way.\n Anyone can attach objects to any NFT. It is the responsibility of the app to\n interpret who the sender is and what the object means.\n An object is identified by CID, a.k.a. Content Identifier or IPFS file, of maximum 32 bytes.\n The content may be retrieved from Cere DDC or some other store."
        },
        "fullyImplemented": true,
        "id": 56,
        "linearizedBaseContracts": [56, 1750, 886, 4564, 4576, 562, 4337],
        "name": "NFTAttachment",
        "nameLocation": "545:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "604:133:1",
              "text": "This attachment contract refers to the NFT contract in this variable.\n This is informative, there is no validation."
            },
            "functionSelector": "d56d229d",
            "id": 15,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "757:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 56,
            "src": "742:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "742:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "861:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "871:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22,
                      "name": "_nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "885:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "871:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "871:26:1"
                }
              ]
            },
            "documentation": {
              "id": 16,
              "nodeType": "StructuredDocumentation",
              "src": "775:47:1",
              "text": "Set which NFT contract to refer to."
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_nftContract",
                  "nameLocation": "847:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "839:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:22:1"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "861:0:1"
            },
            "scope": 56,
            "src": "827:77:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "910:268:1",
              "text": "The account `sender` wished to attach an object identified by `cid` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the object means."
            },
            "id": 35,
            "name": "AttachToNFT",
            "nameLocation": "1189:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1226:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1210:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1258:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1242:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1281:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1273:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:85:1"
            },
            "src": "1183:103:1"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1594:92:1",
              "statements": [
                {
                  "assignments": [44],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1612:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1604:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1722],
                      "referencedDeclaration": 1722,
                      "src": "1621:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1621:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1660:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1668:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51,
                        "name": "cid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1675:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48,
                      "name": "AttachToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1648:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "1643:36:1"
                }
              ]
            },
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "1292:237:1",
              "text": "Attach an object identified by `cid` to the NFT type `nftId`.\n There is absolutely no validation. It is the responsibility of the reader of this event to decide\n who the sender is and what the object means."
            },
            "functionSelector": "ab278d19",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attachToNFT",
            "nameLocation": "1543:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1563:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1555:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "cid",
                  "nameLocation": "1578:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1570:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1554:28:1"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:1"
            },
            "scope": 56,
            "src": "1534:152:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 57,
        "src": "536:1152:1",
        "usedErrors": []
      }
    ],
    "src": "0:1689:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0xcb0dbc631188ff7e4c5831ec907b2d9ca2786dd0314af3e43a7269821a19e2b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "nftId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "cid",
              "type": "bytes32"
            }
          ],
          "name": "AttachToNFT",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1282fdeC36aC4aaf025059D69077d4450703eeD0",
      "transactionHash": "0x5fea7cdbe08b60577e90da573923afb8d18143e4bfef5c8fe7d570d6f1ef1cec"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-11-08T10:42:08.221Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AttachToNFT(address,uint256,bytes32)": {
        "notice": "The account `sender` wished to attach an object identified by `cid` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the object means."
      }
    },
    "kind": "user",
    "methods": {
      "attachToNFT(uint256,bytes32)": {
        "notice": "Attach an object identified by `cid` to the NFT type `nftId`. There is absolutely no validation. It is the responsibility of the reader of this event to decide who the sender is and what the object means."
      },
      "constructor": {
        "notice": "Set which NFT contract to refer to."
      },
      "nftContract()": {
        "notice": "This attachment contract refers to the NFT contract in this variable. This is informative, there is no validation."
      }
    },
    "notice": "The contract NFTAttachment allows users to attach objects to NFTs. Some application can listen for the events and interpret the objects in some way. Anyone can attach objects to any NFT. It is the responsibility of the app to interpret who the sender is and what the object means. An object is identified by CID, a.k.a. Content Identifier or IPFS file, of maximum 32 bytes. The content may be retrieved from Cere DDC or some other store.",
    "version": 1
  }
}
